{
  "variables": [],
  "info": {
    "name": "REST_API_ESB_Automation_Test_New_Process",
    "_postman_id": "54777009-d9a6-d677-a634-cc647af95b2e",
    "description": "Integration testing from ESB for REST API",
    "schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
  },
  "item": [
    {
      "_postman_id": "0100c4a9-b0b7-678a-3416-8df29a34dd02",
      "name": "RA-77:Members enrollment status to be updated in VMMP DB",
      "description": "Activation Failed can no longer be tsted using automation because of the new changes in functionality",
      "item": [
        {
          "_postman_id": "456bc79d-f480-4d2d-4c03-711f0128fc04",
          "name": "RA-147: Verifying user does not exist in UMS",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonObject = xml2Json(responseBody);\r",
                  "\r",
                  "\r",
                  "try{\r",
                  "\r",
                  "\r",
                  "tests[\"Verifying that User status is Inactive\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userStatus === \"I\" ;\r",
                  "\r",
                  "\r",
                  "\r",
                  "}\r",
                  "\r",
                  "catch(err){\r",
                  "    \r",
                  "  tests[\"User does not exist in UMS\"] = true;  \r",
                  "}\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "",
                  "//Generating Random Email address to pass into the data so that user duplication does not happen",
                  "function makeEmail() {",
                  "  var strValues = \"qpotvghysbnxui56z\";",
                  "  var strEmail = \"\";",
                  "  var strTmp;",
                  "  for (var i = 0; i < 10; i++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strTmp = \"\";",
                  "  strEmail = strEmail + \"@\";",
                  "  for (var j = 0; j < 8; j++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strEmail = strEmail + \"testpii.com\";",
                  "  return strEmail;",
                  "}",
                  "",
                  "",
                  "//Setting up the random email to an environment variable",
                  "postman.setEnvironmentVariable(\"Email\", makeEmail());",
                  "",
                  "var firstName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);",
                  "",
                  "//Setting up the firstName to an environment variable",
                  "postman.setEnvironmentVariable(\"firstName\", firstName);",
                  "var lastName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 8);",
                  "",
                  "//Setting up the lastName to an environment variable",
                  "postman.setEnvironmentVariable(\"lastName\", lastName);",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "{{UmsURL}}/{{UMSContext}}/UsermanagementService",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "text/xml",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:ser=\"http://service.usermanagement.aiaa.com.au\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <ser:searchUserRequest>\r\n         <source>VITALITY</source>\r\n         <userType></userType>\r\n         <userDetails>\r\n            <userName></userName>\r\n            <userId></userId>\r\n            <userDN></userDN>\r\n            <email>{{Email}}</email>\r\n            <givenName></givenName>\r\n            <surname></surname>\r\n            <webChannel></webChannel>\r\n            <token></token>\r\n            <fundIdentifier></fundIdentifier>\r\n            <eligibilityAssessorEmail></eligibilityAssessorEmail>\r\n            <activationURL></activationURL>\r\n            <consentURL></consentURL>\r\n            <!--1 or more repetitions:-->\r\n            <userRolesList></userRolesList>\r\n            <title></title>\r\n            <dateOfBirth></dateOfBirth>\r\n            <gender></gender>\r\n            <addressLine1></addressLine1>\r\n            <addressLine2></addressLine2>\r\n            <suburb></suburb>\r\n            <state></state>\r\n            <postcode></postcode>\r\n            <country></country>\r\n            <mobilePhone></mobilePhone>\r\n            <workPhone></workPhone>\r\n            <homePhone></homePhone>\r\n            <fax></fax>\r\n            <isRetailLifeInsured></isRetailLifeInsured>\r\n            <passwordRequestDate></passwordRequestDate>\r\n            <password></password>\r\n            <passwordRequestCount></passwordRequestCount>\r\n            <aiaProposalNumber></aiaProposalNumber>\r\n            <aiaProposalWritingAdviser></aiaProposalWritingAdviser>\r\n            <aiaCCAppTnCAcceptedDate></aiaCCAppTnCAcceptedDate>\r\n            <aiaCCAppTnCVersion></aiaCCAppTnCVersion>\r\n            <!--1 or more repetitions:-->\r\n            <userGroupsList></userGroupsList>\r\n            <!--1 or more repetitions:-->\r\n            <userGroupsDNList></userGroupsDNList>\r\n            <memberType></memberType>\r\n            <residentialPostcode></residentialPostcode>\r\n            <userStatus></userStatus>\r\n            <aiaClientNumber></aiaClientNumber>\r\n            <aiaVitalityMemberNumber></aiaVitalityMemberNumber>\r\n            <aiaDsyPolicyNumber></aiaDsyPolicyNumber>\r\n            <aiaVitalityCobrandingInfo></aiaVitalityCobrandingInfo>\r\n         </userDetails>\r\n      </ser:searchUserRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>\r\n\r\n"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "4a1904be-da7a-72eb-c5f6-e733db387ebd",
          "name": "RA-153: Enrolling a Member - New Process",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "",
                  "",
                  "tests[\"Verifying that Enrolment is successfull\"] =  body.status === \"Data Accepted\";",
                  "",
                  "",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"601466578\",\r\n    \"address\":{\r\n      \"line1\":\"test street1\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\",\r\n      \"clientNumber\":\"\"\r\n      \r\n    },\r\n     \r\n    \"vitalityPolicyDetails\":{\r\n    \"vitalityPolicyId\":\"\"\r\n \r\n  }\r\n  },\r\n    \r\n     \r\n  \"reasonForJoining\":\"Unknown\",\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"transactionId\":\"randomtransactionid\",\r\n  \"source\":\"REST\"\r\n}"
            },
            "description": ""
          },
          "response": [
            {
              "id": "0e6522de-cadd-43b7-5244-291acee78d27",
              "name": "error",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"601466578\",\r\n    \"address\":{\r\n      \"line1\":\"test street1\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\",\r\n      \"clientNumber\":\"\"\r\n      \r\n    },\r\n     \r\n    \"vitalityPolicyDetails\":{\r\n    \"vitalityPolicyId\":\"\"\r\n \r\n  }\r\n  },\r\n    \r\n     \r\n  \"reasonForJoining\":\"Unknown\",\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"transactionId\":\"randomtransactionid\",\r\n  \"source\":\"REST\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "key": "Connection",
                  "value": "Keep-Alive",
                  "name": "Connection",
                  "description": ""
                },
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "name": "Content-Type",
                  "description": ""
                },
                {
                  "key": "Date",
                  "value": "Wed, 14 Dec 2016 00:42:55 GMT",
                  "name": "Date",
                  "description": ""
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked",
                  "name": "Transfer-Encoding",
                  "description": ""
                },
                {
                  "key": "X-Backside-Transport",
                  "value": "OK OK",
                  "name": "X-Backside-Transport",
                  "description": ""
                },
                {
                  "key": "X-Client-IP",
                  "value": "10.61.38.184",
                  "name": "X-Client-IP",
                  "description": ""
                },
                {
                  "key": "X-Global-Transaction-ID",
                  "value": "348720",
                  "name": "X-Global-Transaction-ID",
                  "description": ""
                }
              ],
              "cookie": [],
              "responseTime": "1537",
              "body": "{\"response\":{}}"
            },
            {
              "id": "5fc17889-7876-8d1f-be73-f92427d96c7d",
              "name": "response 3",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"601466578\",\r\n    \"address\":{\r\n      \"line1\":\"test street1\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\",\r\n      \"clientNumber\":\"\"\r\n      \r\n    },\r\n     \r\n    \"vitalityPolicyDetails\":{\r\n    \"vitalityPolicyId\":\"\"\r\n \r\n  }\r\n  },\r\n    \r\n     \r\n  \"reasonForJoining\":\"Unknown\",\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"transactionId\":\"randomtransactionid\",\r\n  \"source\":\"REST\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:17 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "1830",
              "body": "{\"token\":\"1ed2d16e-9fc9-46ed-af8e-49e5b5207e79\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "d888c5d1-38f0-4f18-d9a5-e9901e6676c0",
              "name": "response 2",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"601466578\",\r\n    \"address\":{\r\n      \"line1\":\"test street1\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\",\r\n      \"clientNumber\":\"\"\r\n      \r\n    },\r\n     \r\n    \"vitalityPolicyDetails\":{\r\n    \"vitalityPolicyId\":\"\"\r\n \r\n  }\r\n  },\r\n    \r\n     \r\n  \"reasonForJoining\":\"Unknown\",\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"transactionId\":\"randomtransactionid\",\r\n  \"source\":\"REST\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:07 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "237",
              "body": "{\"token\":\"a77eb61e-5dd3-4680-931e-49122ab21153\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "d968c49b-fbc0-0766-853c-da7b34dadccb",
              "name": "response 1",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"601466578\",\r\n    \"address\":{\r\n      \"line1\":\"test street1\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\",\r\n      \"clientNumber\":\"\"\r\n      \r\n    },\r\n     \r\n    \"vitalityPolicyDetails\":{\r\n    \"vitalityPolicyId\":\"\"\r\n \r\n  }\r\n  },\r\n    \r\n     \r\n  \"reasonForJoining\":\"Unknown\",\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"transactionId\":\"randomtransactionid\",\r\n  \"source\":\"REST\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:13:56 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "215",
              "body": "{\"token\":\"39b8615a-307d-419f-a503-4d4fa6c7021d\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            }
          ]
        },
        {
          "_postman_id": "31aff17c-369a-4135-f03c-47323614bd32",
          "name": "Wait for enrollment to finish",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{testPackageURL}}/rest/restTestPackage.ws.sleep?seconds=180",
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {},
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "8b3808f2-72b3-bf8c-2c07-8e8093ecd256",
          "name": "RA-145: Staging table contains data from the Request",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "//Verifing that the response time is less than the value declared in global  variable ",
                  "tests[\"Response time is less than \" + globals.responseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < globals.responseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "try{",
                  "",
                  "",
                  "tests[\"Verifying that Email in staging VMMP DB is as passed\"] = body.getMemberInfoStagingOutput.results[0].EMAIL === environment.Email;",
                  "tests[\"Verifying that Title in staging VMMP DB is as passed\"] = body.getMemberInfoStagingOutput.results[0].TITLE === \"Mr\";",
                  "tests[\"Verifying that First Name in staging VMMP DB is as passed\"] = body.getMemberInfoStagingOutput.results[0].FIRST_NAME === environment.firstName;",
                  "tests[\"Verifying that Last Name in staging VMMP DB is as passed\"] = body.getMemberInfoStagingOutput.results[0].LAST_NAME === environment.lastName;",
                  "tests[\"Verifying that Gender in staging VMMP DB is as passed\"] = body.getMemberInfoStagingOutput.results[0].GENDER === \"M\";",
                  "tests[\"Verifying that DOB in staging VMMP DB is as passed\"] = body.getMemberInfoStagingOutput.results[0].DOB === \"1970-01-01\";",
                  "tests[\"Verifying that Mobile in staging VMMP DB is passed\"] = body.getMemberInfoStagingOutput.results[0].MOBILE === environment.mobileNumber;",
                  "tests[\"Verifying that Address 1 in staging VMMP DB is passed\"] = body.getMemberInfoStagingOutput.results[0].MAILING_ADDRESS1 ===\"test street1\";",
                  "tests[\"Verifying that Address 2 in staging VMMP DB is is passed\"] = body.getMemberInfoStagingOutput.results[0].MAILING_ADDRESS2 === null;",
                  "tests[\"Verifying that Suburb in staging VMMP DB is is passed\"] = body.getMemberInfoStagingOutput.results[0].MAILING_CITY === \"Wiseman's Ferry\";",
                  "tests[\"Verifying that State in staging VMMP DB is is passed\"] = body.getMemberInfoStagingOutput.results[0].MAILING_STATE === \"VIC\";",
                  "tests[\"Verifying that Postcode in staging VMMP DB is is passed\"] = body.getMemberInfoStagingOutput.results[0].MAILING_POSTCODE === environment.postcode;",
                  "tests[\"Verifying that Work Phone in staging VMMP DB is is passed\"] = body.getMemberInfoStagingOutput.results[0].WORK_PHONE === environment.workNumber;",
                  "tests[\"Verifying that Home Phone in staging VMMP DB is passed\"] = body.getMemberInfoStagingOutput.results[0].HOME_PHONE === environment.homeNumber;",
                  "tests[\"Verifying that Processed File staging VMMP DB is passed\"] = body.getMemberInfoStagingOutput.results[0].PROCESSED_FILE === null;",
                  "tests[\"Verifying that Relationship No. in staging VMMP DB is as passed\"] = body.getMemberInfoStagingOutput.results[0].RELATIONSHIP_NAME === environment.relationshipName;",
                  "tests[\"Verifying that NOMINATION ID in staging VMMP DB is as passed\"] = body.getMemberInfoStagingOutput.results[0].NOMINATION_ID === \"601466578\";",
                  "tests[\"Verifying that Status in staging VMMP DB is as passed\"] = body.getMemberInfoStagingOutput.results[0].STATUS === \"VALID_SHORT_PROCESS\";",
                  "",
                  "}",
                  "catch(err)",
                  "",
                  "{",
                  "    ",
                  "    tests[\"Data does not exist\"] = false;",
                  "}",
                  ""
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{StageDB}}",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"email\":\"{{Email}}\"} "
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "fc774b61-8b7d-704b-20fe-d12acf778ef8",
          "name": "RA-145: In VMMP core tables the PII data is Updated",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "//Verifing that the response time is less than the value declared in global  variable ",
                  "tests[\"Response time is less than \" + globals.responseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < globals.responseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "//console.log(environment.restMemberId+\"aiaPiiData\");",
                  "",
                  "try{",
                  "",
                  "tests[\"Verifying that Email in Core VMMP DB is as passed\"] = body.email === environment.Email;",
                  "tests[\"Verifying that First Name in Core VMMP DB is as passed\"] = body.firstName === environment.firstName;",
                  "tests[\"Verifying that status is ONLINE_READY_TO_ENROL\"] = body.memberships[0].status.name === \"AWAITING_ACTIVATION\";",
                  "tests[\"Verifying that Last Name in Core VMMP DB is as passed\"] = body.lastName === environment.lastName;",
                  "tests[\"Verifying that Gender in Core VMMP DB is as passed\"] = body.gender === \"M\";",
                  "tests[\"Verifying that DOB in Core VMMP DB is as passed\"] = body.dateOfBirth === \"1970-01-01\";",
                  "tests[\"Verifying that Relationship Id in Core VMMP DB is as passed\"] = body.relationship.name === environment.relationshipName;",
                  "",
                  "",
                  "}",
                  "catch(err){",
                  "    ",
                  "    tests[\"Data does not exist\"] = false;",
                  "}",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "{{VmmpUrl}}/restapi-vitality-member-management-service/registration/members/{{Email}}",
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"email\":\"{{Email}}\"} "
            },
            "description": "A/C:\r\nGiven that members were enrolled with Vitality\r\nWhen they activate their membership\r\nThen their correct PII info will be stored in the VMMp core tbl"
          },
          "response": []
        },
        {
          "_postman_id": "e5057ebf-77a1-a65e-59f3-85beb3b076f5",
          "name": "RA-153: Activate member - New Process",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "",
                  "//tests[\"Verifying that Activation is successfull\"] =  body.status === \"Activation Successful\";",
                  "",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{ESBURL}}/rest/aiaVitalityMember/pub/activation",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"password\": \"Welcome123\",\r\n   \"reasonForJoining\": \"I am actively trying to maintain or improve my health\",\r\n   \"email\": \"{{Email}}\",\r\n   \"token\": \"{{umsToken}}\"   \r\n}\r\n"
            },
            "description": ""
          },
          "response": [
            {
              "id": "0aa8cfd6-4b87-871e-50c9-197a5458352d",
              "name": "response 2",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMember/pub/activation",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"password\": \"Welcome123\",\r\n   \"reasonForJoining\": \"I am actively trying to maintain or improve my health\",\r\n   \"email\": \"{{Email}}\",\r\n   \"token\": \"{{umsToken}}\"   \r\n}\r\n"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:07 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "237",
              "body": "{\"token\":\"a77eb61e-5dd3-4680-931e-49122ab21153\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "6f261f35-3995-6604-dc23-2c14b4c5c4a0",
              "name": "response 1",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMember/pub/activation",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"password\": \"Welcome123\",\r\n   \"reasonForJoining\": \"I am actively trying to maintain or improve my health\",\r\n   \"email\": \"{{Email}}\",\r\n   \"token\": \"{{umsToken}}\"   \r\n}\r\n"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:13:56 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "215",
              "body": "{\"token\":\"39b8615a-307d-419f-a503-4d4fa6c7021d\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "8d3db46e-8f8c-9550-c399-39b97c450c41",
              "name": "error",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMember/pub/activation",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"password\": \"Welcome123\",\r\n   \"reasonForJoining\": \"I am actively trying to maintain or improve my health\",\r\n   \"email\": \"{{Email}}\",\r\n   \"token\": \"{{umsToken}}\"   \r\n}\r\n"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "key": "Connection",
                  "value": "Keep-Alive",
                  "name": "Connection",
                  "description": ""
                },
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "name": "Content-Type",
                  "description": ""
                },
                {
                  "key": "Date",
                  "value": "Wed, 14 Dec 2016 00:42:55 GMT",
                  "name": "Date",
                  "description": ""
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked",
                  "name": "Transfer-Encoding",
                  "description": ""
                },
                {
                  "key": "X-Backside-Transport",
                  "value": "OK OK",
                  "name": "X-Backside-Transport",
                  "description": ""
                },
                {
                  "key": "X-Client-IP",
                  "value": "10.61.38.184",
                  "name": "X-Client-IP",
                  "description": ""
                },
                {
                  "key": "X-Global-Transaction-ID",
                  "value": "348720",
                  "name": "X-Global-Transaction-ID",
                  "description": ""
                }
              ],
              "cookie": [],
              "responseTime": "1537",
              "body": "{\"response\":{}}"
            },
            {
              "id": "9e17b927-cedf-35a3-6cbc-f97efc9f90f0",
              "name": "response 3",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMember/pub/activation",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"password\": \"Welcome123\",\r\n   \"reasonForJoining\": \"I am actively trying to maintain or improve my health\",\r\n   \"email\": \"{{Email}}\",\r\n   \"token\": \"{{umsToken}}\"   \r\n}\r\n"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:17 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "1830",
              "body": "{\"token\":\"1ed2d16e-9fc9-46ed-af8e-49e5b5207e79\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            }
          ]
        },
        {
          "_postman_id": "fdf5c30a-eb2d-1e9c-7fd6-5d92bea76b35",
          "name": "Wait for activation to finish",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{testPackageURL}}/rest/restTestPackage.ws.sleep?seconds=120",
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {},
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "63e214b2-01a1-be03-0dd7-db2344069e2e",
          "name": "RA-147 : Verifying user has been added to UMS and is activated",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonObject = xml2Json(responseBody);\r",
                  "\r",
                  "try\r",
                  "{\r",
                  "\r",
                  "\r",
                  "tests[\"Verifying that User status is  Activated\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userStatus === \"A\";\r",
                  "\r",
                  "tests[\"Verifying that User ID is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userId === environment.Email ;\r",
                  "\r",
                  "tests[\"Verifying that Email is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.email === environment.Email ;\r",
                  "\r",
                  "tests[\"Verifying that First Name is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.givenName === environment.firstName ;\r",
                  "\r",
                  "tests[\"Verifying that Last name is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.surname === environment.lastName ;\r",
                  "\r",
                  "tests[\"Verifying that Member Type is as passed to UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.memberType === \"GROUP\" ;\r",
                  "\r",
                  "tests[\"Verifying that User Groups List is VITALITY_ACTIVE\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userGroupsList === \"VITALITY_ACTIVE\" ;\r",
                  "\r",
                  "\r",
                  "\r",
                  "//Setting up the token to an environment variable to be used in subsequent requests\r",
                  "\r",
                  "postman.setEnvironmentVariable(\"umsToken\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.token);\r",
                  "\r",
                  "postman.setEnvironmentVariable(\"aiaClientNumber\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaClientNumber);\r",
                  "postman.setEnvironmentVariable(\"aiaVitalityMemberNumber\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaVitalityMemberNumber);\r",
                  "postman.setEnvironmentVariable(\"aiaDsyPolicyNumber\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaDsyPolicyNumber);\r",
                  "\r",
                  "postman.setEnvironmentVariable(\"aiaVitalityId\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaVitalityId);\r",
                  "\r",
                  "\r",
                  "}\r",
                  "\r",
                  "\r",
                  "catch(err){\r",
                  "    \r",
                  "  tests[\"Data in response does not exist\"] = false;  \r",
                  "\r",
                  "\r",
                  "}\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "{{UmsURL}}/{{UMSContext}}/UsermanagementService",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "text/xml",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:ser=\"http://service.usermanagement.aiaa.com.au\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <ser:searchUserRequest>\r\n         <source>VITALITY</source>\r\n         <userType></userType>\r\n         <userDetails>\r\n            <userName></userName>\r\n            <userId></userId>\r\n            <userDN></userDN>\r\n            <email>{{Email}}</email>\r\n            <givenName></givenName>\r\n            <surname></surname>\r\n            <webChannel></webChannel>\r\n            <token></token>\r\n            <fundIdentifier></fundIdentifier>\r\n            <eligibilityAssessorEmail></eligibilityAssessorEmail>\r\n            <activationURL></activationURL>\r\n            <consentURL></consentURL>\r\n            <!--1 or more repetitions:-->\r\n            <userRolesList></userRolesList>\r\n            <title></title>\r\n            <dateOfBirth></dateOfBirth>\r\n            <gender></gender>\r\n            <addressLine1></addressLine1>\r\n            <addressLine2></addressLine2>\r\n            <suburb></suburb>\r\n            <state></state>\r\n            <postcode></postcode>\r\n            <country></country>\r\n            <mobilePhone></mobilePhone>\r\n            <workPhone></workPhone>\r\n            <homePhone></homePhone>\r\n            <fax></fax>\r\n            <isRetailLifeInsured></isRetailLifeInsured>\r\n            <passwordRequestDate></passwordRequestDate>\r\n            <password></password>\r\n            <passwordRequestCount></passwordRequestCount>\r\n            <aiaProposalNumber></aiaProposalNumber>\r\n            <aiaProposalWritingAdviser></aiaProposalWritingAdviser>\r\n            <aiaCCAppTnCAcceptedDate></aiaCCAppTnCAcceptedDate>\r\n            <aiaCCAppTnCVersion></aiaCCAppTnCVersion>\r\n            <!--1 or more repetitions:-->\r\n            <userGroupsList></userGroupsList>\r\n            <!--1 or more repetitions:-->\r\n            <userGroupsDNList></userGroupsDNList>\r\n            <memberType></memberType>\r\n            <residentialPostcode></residentialPostcode>\r\n            <userStatus></userStatus>\r\n            <aiaClientNumber></aiaClientNumber>\r\n            <aiaVitalityMemberNumber></aiaVitalityMemberNumber>\r\n            <aiaDsyPolicyNumber></aiaDsyPolicyNumber>\r\n            <aiaVitalityCobrandingInfo></aiaVitalityCobrandingInfo>\r\n         </userDetails>\r\n      </ser:searchUserRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>\r\n\r\n"
            },
            "description": "A/C:\r\nGiven that members activated their membership\r\nWhen ESB gets the action\r\nThen their membership will be activated in UMS"
          },
          "response": []
        },
        {
          "_postman_id": "d33b3f8c-836d-0eec-0bf6-b76328e693b4",
          "name": "RA-145: In VMMP core tables the data has been modified with activation",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "//Verifing that the response time is less than the value declared in global  variable ",
                  "tests[\"Response time is less than \" + globals.responseTime + \" ms and is \" + responseTime + \" ms\"] = responseTime < globals.responseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "//console.log(environment.restMemberId+\"aiaPiiData\");",
                  "",
                  "try {",
                  "",
                  "  tests[\"Verifying that Email in Core VMMP DB is as passed\"] = body.email === environment.Email;",
                  "  tests[\"Verifying that First Name in Core VMMP DB is as passed\"] = body.firstName === environment.firstName;",
                  "  tests[\"Verifying that status is ACTIVATED\"] = body.memberships[0].status.name === \"ACTIVATED\";",
                  "  tests[\"Verifying that Last Name in Core VMMP DB is as passed\"] = body.lastName === environment.lastName;",
                  "  tests[\"Verifying that Gender in Core VMMP DB is as passed\"] = body.gender === \"M\";",
                  "  tests[\"Verifying that DOB in Core VMMP DB is as passed\"] = body.dateOfBirth === \"1970-01-01\";",
                  "  tests[\"Verifying that Relationship Id in Core VMMP DB is as passed\"] = body.relationship.name === environment.relationshipName;",
                  "",
                  "",
                  "} catch (err) {",
                  "",
                  "  tests[\"Data does not exist\"] = false;",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "/*",
                  "",
                  "experimenting with delay",
                  "",
                  " function sleep(milliseconds) {",
                  "  var start = new Date().getTime();",
                  "  for (var i = 0; i < 1e7; i++) {",
                  "    if ((new Date().getTime() - start) > milliseconds){",
                  "      break;",
                  "    }",
                  "  }",
                  "}",
                  "",
                  "sleep(10000); // Delays for 10 seconds",
                  "",
                  "",
                  "*/"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{VmmpUrl}}/restapi-vitality-member-management-service/registration/members/{{Email}}",
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"email\":\"{{Email}}\"} "
            },
            "description": ""
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "03537e08-c287-9504-a92f-8e8135b14ac8",
      "name": "RA-145, RA - 153 and RA -147 : Enrollment and Activation - New Process",
      "description": "This test flow will test the enrollment and activation from ESb side",
      "item": [
        {
          "_postman_id": "c0004570-ea2c-6d8b-805d-d8e6b332ec98",
          "name": "RA-147: Verifing user does not exist in UMS",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonObject = xml2Json(responseBody);\r",
                  "\r",
                  "try{\r",
                  "    tests[\"Verifying that User status is Inactive\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userStatus === \"I\" ;\r",
                  "}\r",
                  "\r",
                  "catch(err){\r",
                  "  tests[\"User does not exist in UMS\"] = true;  \r",
                  "}\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "",
                  "//Generating Random Email address to pass into the data so that user duplication does not happen",
                  "function makeEmail() {",
                  "  var strValues = \"qpotvghysbnxui56z\";",
                  "  var strEmail = \"\";",
                  "  var strTmp;",
                  "  for (var i = 0; i < 10; i++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strTmp = \"\";",
                  "  strEmail = strEmail + \"@\";",
                  "  for (var j = 0; j < 8; j++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strEmail = strEmail + \"testpii.com\";",
                  "  return strEmail;",
                  "}",
                  "",
                  "",
                  "//Setting up the random email to an environment variable",
                  "postman.setEnvironmentVariable(\"Email\", makeEmail());",
                  "",
                  "var firstName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);",
                  "",
                  "//Setting up the firstName to an environment variable",
                  "postman.setEnvironmentVariable(\"firstName\", firstName);",
                  "var lastName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 8);",
                  "",
                  "//Setting up the lastName to an environment variable",
                  "postman.setEnvironmentVariable(\"lastName\", lastName);",
                  "",
                  "//Incrementing and Setting up the memberID to an environment variable",
                  "var memberIdNumber = Date.now();",
                  "postman.setEnvironmentVariable(\"memberIdNumber\", memberIdNumber);",
                  "postman.setEnvironmentVariable(\"memberID\", \"RA\"+memberIdNumber.toString());"
                ]
              }
            }
          ],
          "request": {
            "url": "{{UmsURL}}/{{UMSContext}}/UsermanagementService",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "text/xml",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:ser=\"http://service.usermanagement.aiaa.com.au\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <ser:searchUserRequest>\r\n         <source>VITALITY</source>\r\n         <userType></userType>\r\n         <userDetails>\r\n            <userName></userName>\r\n            <userId></userId>\r\n            <userDN></userDN>\r\n            <email>{{Email}}</email>\r\n            <givenName></givenName>\r\n            <surname></surname>\r\n            <webChannel></webChannel>\r\n            <token></token>\r\n            <fundIdentifier></fundIdentifier>\r\n            <eligibilityAssessorEmail></eligibilityAssessorEmail>\r\n            <activationURL></activationURL>\r\n            <consentURL></consentURL>\r\n            <!--1 or more repetitions:-->\r\n            <userRolesList></userRolesList>\r\n            <title></title>\r\n            <dateOfBirth></dateOfBirth>\r\n            <gender></gender>\r\n            <addressLine1></addressLine1>\r\n            <addressLine2></addressLine2>\r\n            <suburb></suburb>\r\n            <state></state>\r\n            <postcode></postcode>\r\n            <country></country>\r\n            <mobilePhone></mobilePhone>\r\n            <workPhone></workPhone>\r\n            <homePhone></homePhone>\r\n            <fax></fax>\r\n            <isRetailLifeInsured></isRetailLifeInsured>\r\n            <passwordRequestDate></passwordRequestDate>\r\n            <password></password>\r\n            <passwordRequestCount></passwordRequestCount>\r\n            <aiaProposalNumber></aiaProposalNumber>\r\n            <aiaProposalWritingAdviser></aiaProposalWritingAdviser>\r\n            <aiaCCAppTnCAcceptedDate></aiaCCAppTnCAcceptedDate>\r\n            <aiaCCAppTnCVersion></aiaCCAppTnCVersion>\r\n            <!--1 or more repetitions:-->\r\n            <userGroupsList></userGroupsList>\r\n            <!--1 or more repetitions:-->\r\n            <userGroupsDNList></userGroupsDNList>\r\n            <memberType></memberType>\r\n            <residentialPostcode></residentialPostcode>\r\n            <userStatus></userStatus>\r\n            <aiaClientNumber></aiaClientNumber>\r\n            <aiaVitalityMemberNumber></aiaVitalityMemberNumber>\r\n            <aiaDsyPolicyNumber></aiaDsyPolicyNumber>\r\n            <aiaVitalityCobrandingInfo></aiaVitalityCobrandingInfo>\r\n         </userDetails>\r\n      </ser:searchUserRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>\r\n\r\n"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "4821a0d4-502f-ef89-454a-f8d5fcf383d5",
          "name": "RA-153: Enrolling a Member - New Process - No Prereq",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "tests[\"Verifying that Enrolment is successfull\"] =  body.status === \"Data Accepted\";"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
            },
            "description": ""
          },
          "response": [
            {
              "id": "6f512d3a-2162-e335-c61f-92f85ab3c9cb",
              "name": "response 1",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:13:56 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "215",
              "body": "{\"token\":\"39b8615a-307d-419f-a503-4d4fa6c7021d\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "7a6a56bb-d9d3-57bd-952f-629be9f30cfb",
              "name": "response 3",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:17 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "1830",
              "body": "{\"token\":\"1ed2d16e-9fc9-46ed-af8e-49e5b5207e79\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "8bc0ebaf-bc8e-8427-1546-89ca4beb2068",
              "name": "response 2",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:07 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "237",
              "body": "{\"token\":\"a77eb61e-5dd3-4680-931e-49122ab21153\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "cca95397-c39d-5c34-bbac-0f85cc18f605",
              "name": "error",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "key": "Connection",
                  "value": "Keep-Alive",
                  "name": "Connection",
                  "description": ""
                },
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "name": "Content-Type",
                  "description": ""
                },
                {
                  "key": "Date",
                  "value": "Wed, 14 Dec 2016 00:42:55 GMT",
                  "name": "Date",
                  "description": ""
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked",
                  "name": "Transfer-Encoding",
                  "description": ""
                },
                {
                  "key": "X-Backside-Transport",
                  "value": "OK OK",
                  "name": "X-Backside-Transport",
                  "description": ""
                },
                {
                  "key": "X-Client-IP",
                  "value": "10.61.38.184",
                  "name": "X-Client-IP",
                  "description": ""
                },
                {
                  "key": "X-Global-Transaction-ID",
                  "value": "348720",
                  "name": "X-Global-Transaction-ID",
                  "description": ""
                }
              ],
              "cookie": [],
              "responseTime": "1537",
              "body": "{\"response\":{}}"
            }
          ]
        },
        {
          "_postman_id": "906ed78c-3ee4-9b20-3b90-bf7461179c95",
          "name": "Wait for enrollment to finish ",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{testPackageURL}}/rest/restTestPackage.ws.sleep?seconds=200",
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {},
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "a1781701-c50f-fa4e-9735-b7c7fa3d5837",
          "name": "RA-145: Staging table contains data from the Request - Valid Short Process",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "//Verifing that the response time is less than the value declared in global  variable ",
                  "tests[\"Response time is less than \" + globals.responseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < globals.responseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "try{",
                  "",
                  "",
                  "tests[\"Verifying that Email in staging VMMP DB is as passed\"] = body.getMemberInfoStagingOutput.results[0].EMAIL === environment.Email;",
                  "tests[\"Verifying that Title in staging VMMP DB is as passed\"] = body.getMemberInfoStagingOutput.results[0].TITLE === \"Mr\";",
                  "tests[\"Verifying that First Name in staging VMMP DB is as passed\"] = body.getMemberInfoStagingOutput.results[0].FIRST_NAME === environment.firstName;",
                  "tests[\"Verifying that Last Name in staging VMMP DB is as passed\"] = body.getMemberInfoStagingOutput.results[0].LAST_NAME === environment.lastName;",
                  "tests[\"Verifying that Gender in staging VMMP DB is as passed\"] = body.getMemberInfoStagingOutput.results[0].GENDER === \"M\";",
                  "tests[\"Verifying that DOB in staging VMMP DB is as passed\"] = body.getMemberInfoStagingOutput.results[0].DOB === \"1970-01-01\";",
                  "tests[\"Verifying that Mobile in staging VMMP DB is passed\"] = body.getMemberInfoStagingOutput.results[0].MOBILE === environment.mobileNumber;",
                  "tests[\"Verifying that Address 1 in staging VMMP DB is passed\"] = body.getMemberInfoStagingOutput.results[0].MAILING_ADDRESS1 ===\"test street1\";",
                  "tests[\"Verifying that Address 2 in staging VMMP DB is is passed\"] = body.getMemberInfoStagingOutput.results[0].MAILING_ADDRESS2 === null;",
                  "tests[\"Verifying that Suburb in staging VMMP DB is is passed\"] = body.getMemberInfoStagingOutput.results[0].MAILING_CITY === \"Wiseman's Ferry\";",
                  "tests[\"Verifying that State in staging VMMP DB is is passed\"] = body.getMemberInfoStagingOutput.results[0].MAILING_STATE === \"VIC\";",
                  "tests[\"Verifying that Postcode in staging VMMP DB is is passed\"] = body.getMemberInfoStagingOutput.results[0].MAILING_POSTCODE === environment.postcode;",
                  "tests[\"Verifying that Work Phone in staging VMMP DB is is passed\"] = body.getMemberInfoStagingOutput.results[0].WORK_PHONE === environment.workNumber;",
                  "tests[\"Verifying that Home Phone in staging VMMP DB is passed\"] = body.getMemberInfoStagingOutput.results[0].HOME_PHONE === environment.homeNumber;",
                  "tests[\"Verifying that Processed File staging VMMP DB is passed\"] = body.getMemberInfoStagingOutput.results[0].PROCESSED_FILE === null;",
                  "tests[\"Verifying that Relationship No. in staging VMMP DB is as passed\"] = body.getMemberInfoStagingOutput.results[0].RELATIONSHIP_NAME === environment.relationshipName;",
                  "tests[\"Verifying that NOMINATION ID in staging VMMP DB is as passed\"] = body.getMemberInfoStagingOutput.results[0].NOMINATION_ID === environment.memberID;",
                  "tests[\"Verifying that Status in staging VMMP DB is as passed\"] = body.getMemberInfoStagingOutput.results[0].STATUS === \"VALID_SHORT_PROCESS\";",
                  "",
                  "}",
                  "catch(err)",
                  "",
                  "{",
                  "    ",
                  "    tests[\"Data does not exist\"] = false;",
                  "}",
                  ""
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{StageDB}}",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"email\":\"{{Email}}\"} "
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "75e3fb74-7d5f-03d6-1339-3cd35d180ec2",
          "name": "RA-153: Enrolling a Duplicate Member - New Process ",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 400\"] = responseCode.code === 400;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "tests[\"Verifying that Enrollment failed for the Duplicate Member\"] =  body.status === \"registration failed\";",
                  "tests[\"Verifying that Enrollment failure reason is displayed correctly\"] =  body.failureReason === \"A member with these details already exists. If you do not have your login details, please call the AIA Vitality member services team on 1800 848 254.\";",
                  ""
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"test street1\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
            },
            "description": ""
          },
          "response": [
            {
              "id": "3232421e-5141-d979-6723-c2e55d23cb29",
              "name": "response 2",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"test street1\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:07 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "237",
              "body": "{\"token\":\"a77eb61e-5dd3-4680-931e-49122ab21153\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "68d0b03e-b387-a425-f658-c7206c738879",
              "name": "error",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"test street1\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "key": "Connection",
                  "value": "Keep-Alive",
                  "name": "Connection",
                  "description": ""
                },
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "name": "Content-Type",
                  "description": ""
                },
                {
                  "key": "Date",
                  "value": "Wed, 14 Dec 2016 00:42:55 GMT",
                  "name": "Date",
                  "description": ""
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked",
                  "name": "Transfer-Encoding",
                  "description": ""
                },
                {
                  "key": "X-Backside-Transport",
                  "value": "OK OK",
                  "name": "X-Backside-Transport",
                  "description": ""
                },
                {
                  "key": "X-Client-IP",
                  "value": "10.61.38.184",
                  "name": "X-Client-IP",
                  "description": ""
                },
                {
                  "key": "X-Global-Transaction-ID",
                  "value": "348720",
                  "name": "X-Global-Transaction-ID",
                  "description": ""
                }
              ],
              "cookie": [],
              "responseTime": "1537",
              "body": "{\"response\":{}}"
            },
            {
              "id": "c4c025fc-5e53-e468-5a01-6c1cb9761298",
              "name": "response 3",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"test street1\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:17 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "1830",
              "body": "{\"token\":\"1ed2d16e-9fc9-46ed-af8e-49e5b5207e79\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "d395e2bd-c64a-3ff0-38c5-865012c3ac56",
              "name": "response 1",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"test street1\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:13:56 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "215",
              "body": "{\"token\":\"39b8615a-307d-419f-a503-4d4fa6c7021d\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            }
          ]
        },
        {
          "_postman_id": "e69d417e-0f98-9a19-e347-4d00f4002b63",
          "name": "RA-145: Staging table contains data from the Request - DUPLICATED",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "//Verifing that the response time is less than the value declared in global  variable ",
                  "tests[\"Response time is less than \" + globals.responseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < globals.responseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "try{",
                  "",
                  "",
                  "tests[\"Verifying that Email in staging VMMP DB is as passed\"] = body.getMemberInfoStagingOutput.results[1].EMAIL === environment.Email;",
                  "tests[\"Verifying that Title in staging VMMP DB is as passed\"] = body.getMemberInfoStagingOutput.results[1].TITLE === \"Mr\";",
                  "tests[\"Verifying that First Name in staging VMMP DB is as passed\"] = body.getMemberInfoStagingOutput.results[1].FIRST_NAME === environment.firstName;",
                  "tests[\"Verifying that Last Name in staging VMMP DB is as passed\"] = body.getMemberInfoStagingOutput.results[1].LAST_NAME === environment.lastName;",
                  "tests[\"Verifying that Gender in staging VMMP DB is as passed\"] = body.getMemberInfoStagingOutput.results[1].GENDER === \"M\";",
                  "tests[\"Verifying that DOB in staging VMMP DB is as passed\"] = body.getMemberInfoStagingOutput.results[1].DOB === \"1970-01-01\";",
                  "tests[\"Verifying that Mobile in staging VMMP DB is passed\"] = body.getMemberInfoStagingOutput.results[1].MOBILE === environment.mobileNumber;",
                  "tests[\"Verifying that Address 1 in staging VMMP DB is passed\"] = body.getMemberInfoStagingOutput.results[1].MAILING_ADDRESS1 ===\"test street1\";",
                  "tests[\"Verifying that Address 2 in staging VMMP DB is is passed\"] = body.getMemberInfoStagingOutput.results[1].MAILING_ADDRESS2 === null;",
                  "tests[\"Verifying that Suburb in staging VMMP DB is is passed\"] = body.getMemberInfoStagingOutput.results[1].MAILING_CITY === \"Wiseman's Ferry\";",
                  "tests[\"Verifying that State in staging VMMP DB is is passed\"] = body.getMemberInfoStagingOutput.results[1].MAILING_STATE === \"VIC\";",
                  "tests[\"Verifying that Postcode in staging VMMP DB is is passed\"] = body.getMemberInfoStagingOutput.results[1].MAILING_POSTCODE === environment.postcode;",
                  "tests[\"Verifying that Work Phone in staging VMMP DB is is passed\"] = body.getMemberInfoStagingOutput.results[1].WORK_PHONE === environment.workNumber;",
                  "tests[\"Verifying that Home Phone in staging VMMP DB is passed\"] = body.getMemberInfoStagingOutput.results[1].HOME_PHONE === environment.homeNumber;",
                  "tests[\"Verifying that Processed File staging VMMP DB is passed\"] = body.getMemberInfoStagingOutput.results[1].PROCESSED_FILE === null;",
                  "tests[\"Verifying that Relationship No. in staging VMMP DB is as passed\"] = body.getMemberInfoStagingOutput.results[1].RELATIONSHIP_NAME === environment.relationshipName;",
                  "tests[\"Verifying that NOMINATION ID in staging VMMP DB is as passed\"] = body.getMemberInfoStagingOutput.results[1].NOMINATION_ID === environment.memberID;",
                  "tests[\"Verifying that Status in staging VMMP DB is INVALID\"] = body.getMemberInfoStagingOutput.results[1].STATUS === \"INVALID\";",
                  "tests[\"Verifying that Failure Reason in staging VMMP DB is DUPLICATED_MEMBER\"] = body.getMemberInfoStagingOutput.results[1].FAILURE_REASON === \"DUPLICATED_MEMBER\";",
                  "",
                  "}",
                  "catch(err)",
                  "",
                  "{",
                  "    ",
                  "    tests[\"Data does not exist\"] = false;",
                  "}",
                  ""
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{StageDB}}",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"email\":\"{{Email}}\"} "
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "8626db3d-d27d-6b06-95e6-d1be0fcecdef",
          "name": "RA-145: In VMMP core tables the PII data is Updated",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "//Verifing that the response time is less than the value declared in global  variable ",
                  "tests[\"Response time is less than \" + globals.responseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < globals.responseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "//console.log(environment.restMemberId+\"aiaPiiData\");",
                  "",
                  "try{",
                  "",
                  "tests[\"Verifying that Email in Core VMMP DB is as passed\"] = body.email === environment.Email;",
                  "tests[\"Verifying that First Name in Core VMMP DB is as passed\"] = body.firstName === environment.firstName;",
                  "tests[\"Verifying that status is Online Awaiting Activation\"] = body.memberships[0].status.name === \"AWAITING_ACTIVATION\";",
                  "tests[\"Verifying that Last Name in Core VMMP DB is as passed\"] = body.lastName === environment.lastName;",
                  "tests[\"Verifying that Gender in Core VMMP DB is as passed\"] = body.gender === \"M\";",
                  "tests[\"Verifying that DOB in Core VMMP DB is as passed\"] = body.dateOfBirth === \"1970-01-01\";",
                  "tests[\"Verifying that Relationship Id in Core VMMP DB is as passed\"] = body.relationship.name === environment.relationshipName;",
                  "",
                  "",
                  "}",
                  "catch(err){",
                  "    ",
                  "    tests[\"Data does not exist\"] = false;",
                  "}",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "{{VmmpUrl}}/restapi-vitality-member-management-service/registration/members/{{Email}}",
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"email\":\"{{Email}}\"} "
            },
            "description": "A/C:\r\nGiven that members were enrolled with Vitality\r\nWhen they activate their membership\r\nThen their correct PII info will be stored in the VMMp core tbl"
          },
          "response": []
        },
        {
          "_postman_id": "ef2c9c3f-4e3d-8f96-afd3-2a0a1998d032",
          "name": "RA-147 : Verifing user has been added to UMS and is InActive Status",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonObject = xml2Json(responseBody);\r",
                  "\r",
                  "try\r",
                  "{\r",
                  "\r",
                  "\r",
                  "tests[\"Verifying that User status is Not Activated\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userStatus === \"I\";\r",
                  "\r",
                  "tests[\"Verifying that User ID is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userId === environment.Email ;\r",
                  "\r",
                  "tests[\"Verifying that Email is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.email === environment.Email ;\r",
                  "\r",
                  "tests[\"Verifying that First Name is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.givenName === environment.firstName ;\r",
                  "\r",
                  "tests[\"Verifying that Last name is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.surname === environment.lastName ;\r",
                  "\r",
                  "tests[\"Verifying that Member Type is as passed to UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.memberType === \"GROUP\" ;\r",
                  "\r",
                  "tests[\"Verifying that User Groups List is VITALITY_AWAITING_ACTIVATION\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userGroupsList === \"VITALITY_AWAITING_ACTIVATION\" ;\r",
                  "\r",
                  "\r",
                  "\r",
                  "//Setting up the token to an environment variable to be used in subsequent requests\r",
                  "\r",
                  "postman.setEnvironmentVariable(\"umsToken\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.token);\r",
                  "\r",
                  "postman.setEnvironmentVariable(\"aiaClientNumber\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaClientNumber);\r",
                  "postman.setEnvironmentVariable(\"aiaVitalityMemberNumber\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaVitalityMemberNumber);\r",
                  "postman.setEnvironmentVariable(\"aiaDsyPolicyNumber\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaDsyPolicyNumber);\r",
                  "\r",
                  "postman.setEnvironmentVariable(\"aiaVitalityId\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaVitalityId);\r",
                  "\r",
                  "\r",
                  "}\r",
                  "\r",
                  "\r",
                  "catch(err){\r",
                  "    \r",
                  "  tests[\"Data in response does not exist\"] = false;  \r",
                  "\r",
                  "\r",
                  "}\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "{{UmsURL}}/{{UMSContext}}/UsermanagementService",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "text/xml",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:ser=\"http://service.usermanagement.aiaa.com.au\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <ser:searchUserRequest>\n         <source>VITALITY</source>\n         <userType></userType>\n         <userDetails>\n            <userName></userName>\n            <userId></userId>\n            <userDN></userDN>\n            <email>{{Email}}</email>\n            <givenName></givenName>\n            <surname></surname>\n            <webChannel></webChannel>\n            <token></token>\n            <fundIdentifier></fundIdentifier>\n            <eligibilityAssessorEmail></eligibilityAssessorEmail>\n            <activationURL></activationURL>\n            <consentURL></consentURL>\n            <!--1 or more repetitions:-->\n            <userRolesList></userRolesList>\n            <title></title>\n            <dateOfBirth></dateOfBirth>\n            <gender></gender>\n            <addressLine1></addressLine1>\n            <addressLine2></addressLine2>\n            <suburb></suburb>\n            <state></state>\n            <postcode></postcode>\n            <country></country>\n            <mobilePhone></mobilePhone>\n            <workPhone></workPhone>\n            <homePhone></homePhone>\n            <fax></fax>\n            <isRetailLifeInsured></isRetailLifeInsured>\n            <passwordRequestDate></passwordRequestDate>\n            <password></password>\n            <passwordRequestCount></passwordRequestCount>\n            <aiaProposalNumber></aiaProposalNumber>\n            <aiaProposalWritingAdviser></aiaProposalWritingAdviser>\n            <aiaCCAppTnCAcceptedDate></aiaCCAppTnCAcceptedDate>\n            <aiaCCAppTnCVersion></aiaCCAppTnCVersion>\n            <!--1 or more repetitions:-->\n            <userGroupsList></userGroupsList>\n            <!--1 or more repetitions:-->\n            <userGroupsDNList></userGroupsDNList>\n            <memberType></memberType>\n            <residentialPostcode></residentialPostcode>\n            <userStatus></userStatus>\n            <aiaClientNumber></aiaClientNumber>\n            <aiaVitalityMemberNumber></aiaVitalityMemberNumber>\n            <aiaDsyPolicyNumber></aiaDsyPolicyNumber>\n            <aiaVitalityCobrandingInfo></aiaVitalityCobrandingInfo>\n         </userDetails>\n      </ser:searchUserRequest>\n   </soapenv:Body>\n</soapenv:Envelope>\n\n"
            },
            "description": "A/C:\r\nGiven that members activated their membership\r\nWhen ESB gets the action\r\nThen their membership will be activated in UMS"
          },
          "response": []
        },
        {
          "_postman_id": "8d874b81-69bf-5523-4530-962adab743a5",
          "name": "RA-153: Activate member - New Process",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "",
                  "//tests[\"Verifying that Activation is successfull\"] =  body.status === \"Activation Successful\";",
                  "",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{ESBURL}}/rest/aiaVitalityMember/pub/activation",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"password\": \"Welcome123\",\r\n   \"reasonForJoining\": \"I am actively trying to maintain or improve my health\",\r\n   \"email\": \"{{Email}}\",\r\n   \"token\": \"{{umsToken}}\"   \r\n}\r\n"
            },
            "description": ""
          },
          "response": [
            {
              "id": "861db9d8-24ea-3506-2a6f-2d0a70e298f9",
              "name": "response 3",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMember/pub/activation",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"password\": \"Welcome123\",\r\n   \"reasonForJoining\": \"I am actively trying to maintain or improve my health\",\r\n   \"email\": \"{{Email}}\",\r\n   \"token\": \"{{umsToken}}\"   \r\n}\r\n"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:17 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "1830",
              "body": "{\"token\":\"1ed2d16e-9fc9-46ed-af8e-49e5b5207e79\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "97124951-d33a-f6b2-15b2-7dc4fdd1d98d",
              "name": "response 1",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMember/pub/activation",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"password\": \"Welcome123\",\r\n   \"reasonForJoining\": \"I am actively trying to maintain or improve my health\",\r\n   \"email\": \"{{Email}}\",\r\n   \"token\": \"{{umsToken}}\"   \r\n}\r\n"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:13:56 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "215",
              "body": "{\"token\":\"39b8615a-307d-419f-a503-4d4fa6c7021d\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "ba14342d-0e51-03af-88da-e9e51a33ce17",
              "name": "response 2",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMember/pub/activation",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"password\": \"Welcome123\",\r\n   \"reasonForJoining\": \"I am actively trying to maintain or improve my health\",\r\n   \"email\": \"{{Email}}\",\r\n   \"token\": \"{{umsToken}}\"   \r\n}\r\n"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:07 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "237",
              "body": "{\"token\":\"a77eb61e-5dd3-4680-931e-49122ab21153\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "c46f8d6e-c70b-ebca-027e-0f213c72af34",
              "name": "error",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMember/pub/activation",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"password\": \"Welcome123\",\r\n   \"reasonForJoining\": \"I am actively trying to maintain or improve my health\",\r\n   \"email\": \"{{Email}}\",\r\n   \"token\": \"{{umsToken}}\"   \r\n}\r\n"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "key": "Connection",
                  "value": "Keep-Alive",
                  "name": "Connection",
                  "description": ""
                },
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "name": "Content-Type",
                  "description": ""
                },
                {
                  "key": "Date",
                  "value": "Wed, 14 Dec 2016 00:42:55 GMT",
                  "name": "Date",
                  "description": ""
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked",
                  "name": "Transfer-Encoding",
                  "description": ""
                },
                {
                  "key": "X-Backside-Transport",
                  "value": "OK OK",
                  "name": "X-Backside-Transport",
                  "description": ""
                },
                {
                  "key": "X-Client-IP",
                  "value": "10.61.38.184",
                  "name": "X-Client-IP",
                  "description": ""
                },
                {
                  "key": "X-Global-Transaction-ID",
                  "value": "348720",
                  "name": "X-Global-Transaction-ID",
                  "description": ""
                }
              ],
              "cookie": [],
              "responseTime": "1537",
              "body": "{\"response\":{}}"
            }
          ]
        },
        {
          "_postman_id": "676d5c20-d374-fb7f-9de2-fb2b0c7f1390",
          "name": "Wait for activation to finish",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{testPackageURL}}/rest/restTestPackage.ws.sleep?seconds=120",
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {},
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "dc67cf32-2bbc-75de-7ead-6ce02f1372c8",
          "name": "RA-147 : Verifing user has been added to UMS and is activated",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonObject = xml2Json(responseBody);\r",
                  "\r",
                  "try\r",
                  "{\r",
                  "\r",
                  "\r",
                  "tests[\"Verifying that User status is  Activated\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userStatus === \"A\";\r",
                  "\r",
                  "tests[\"Verifying that User ID is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userId === environment.Email ;\r",
                  "\r",
                  "tests[\"Verifying that Email is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.email === environment.Email ;\r",
                  "\r",
                  "tests[\"Verifying that First Name is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.givenName === environment.firstName ;\r",
                  "\r",
                  "tests[\"Verifying that Last name is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.surname === environment.lastName ;\r",
                  "\r",
                  "tests[\"Verifying that Member Type is as passed to UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.memberType === \"GROUP\" ;\r",
                  "\r",
                  "tests[\"Verifying that User Groups List is VITALITY_ACTIVE\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userGroupsList === \"VITALITY_ACTIVE\" ;\r",
                  "\r",
                  "\r",
                  "\r",
                  "//Setting up the token to an environment variable to be used in subsequent requests\r",
                  "\r",
                  "postman.setEnvironmentVariable(\"umsToken\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.token);\r",
                  "\r",
                  "postman.setEnvironmentVariable(\"aiaClientNumber\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaClientNumber);\r",
                  "postman.setEnvironmentVariable(\"aiaVitalityMemberNumber\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaVitalityMemberNumber);\r",
                  "postman.setEnvironmentVariable(\"aiaDsyPolicyNumber\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaDsyPolicyNumber);\r",
                  "\r",
                  "postman.setEnvironmentVariable(\"aiaVitalityId\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaVitalityId);\r",
                  "\r",
                  "\r",
                  "}\r",
                  "\r",
                  "\r",
                  "catch(err){\r",
                  "    \r",
                  "  tests[\"Data in response does not exist\"] = false;  \r",
                  "\r",
                  "\r",
                  "}\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "{{UmsURL}}/{{UMSContext}}/UsermanagementService",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "text/xml",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:ser=\"http://service.usermanagement.aiaa.com.au\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <ser:searchUserRequest>\r\n         <source>VITALITY</source>\r\n         <userType></userType>\r\n         <userDetails>\r\n            <userName></userName>\r\n            <userId></userId>\r\n            <userDN></userDN>\r\n            <email>{{Email}}</email>\r\n            <givenName></givenName>\r\n            <surname></surname>\r\n            <webChannel></webChannel>\r\n            <token></token>\r\n            <fundIdentifier></fundIdentifier>\r\n            <eligibilityAssessorEmail></eligibilityAssessorEmail>\r\n            <activationURL></activationURL>\r\n            <consentURL></consentURL>\r\n            <!--1 or more repetitions:-->\r\n            <userRolesList></userRolesList>\r\n            <title></title>\r\n            <dateOfBirth></dateOfBirth>\r\n            <gender></gender>\r\n            <addressLine1></addressLine1>\r\n            <addressLine2></addressLine2>\r\n            <suburb></suburb>\r\n            <state></state>\r\n            <postcode></postcode>\r\n            <country></country>\r\n            <mobilePhone></mobilePhone>\r\n            <workPhone></workPhone>\r\n            <homePhone></homePhone>\r\n            <fax></fax>\r\n            <isRetailLifeInsured></isRetailLifeInsured>\r\n            <passwordRequestDate></passwordRequestDate>\r\n            <password></password>\r\n            <passwordRequestCount></passwordRequestCount>\r\n            <aiaProposalNumber></aiaProposalNumber>\r\n            <aiaProposalWritingAdviser></aiaProposalWritingAdviser>\r\n            <aiaCCAppTnCAcceptedDate></aiaCCAppTnCAcceptedDate>\r\n            <aiaCCAppTnCVersion></aiaCCAppTnCVersion>\r\n            <!--1 or more repetitions:-->\r\n            <userGroupsList></userGroupsList>\r\n            <!--1 or more repetitions:-->\r\n            <userGroupsDNList></userGroupsDNList>\r\n            <memberType></memberType>\r\n            <residentialPostcode></residentialPostcode>\r\n            <userStatus></userStatus>\r\n            <aiaClientNumber></aiaClientNumber>\r\n            <aiaVitalityMemberNumber></aiaVitalityMemberNumber>\r\n            <aiaDsyPolicyNumber></aiaDsyPolicyNumber>\r\n            <aiaVitalityCobrandingInfo></aiaVitalityCobrandingInfo>\r\n         </userDetails>\r\n      </ser:searchUserRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>\r\n\r\n"
            },
            "description": "A/C:\r\nGiven that members activated their membership\r\nWhen ESB gets the action\r\nThen their membership will be activated in UMS"
          },
          "response": []
        },
        {
          "_postman_id": "9b26801d-44d6-4714-423a-6bda21fd03ea",
          "name": "RA-145: In VMMP core tables the data has been modified with activation",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "//Verifing that the response time is less than the value declared in global  variable ",
                  "tests[\"Response time is less than \" + globals.responseTime + \" ms and is \" + responseTime + \" ms\"] = responseTime < globals.responseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "//console.log(environment.restMemberId+\"aiaPiiData\");",
                  "",
                  "try {",
                  "",
                  "  tests[\"Verifying that Email in Core VMMP DB is as passed\"] = body.email === environment.Email;",
                  "  tests[\"Verifying that First Name in Core VMMP DB is as passed\"] = body.firstName === environment.firstName;",
                  "  tests[\"Verifying that status is ACTIVATED\"] = body.memberships[0].status.name === \"ACTIVATED\";",
                  "  tests[\"Verifying that Last Name in Core VMMP DB is as passed\"] = body.lastName === environment.lastName;",
                  "  tests[\"Verifying that Gender in Core VMMP DB is as passed\"] = body.gender === \"M\";",
                  "  tests[\"Verifying that DOB in Core VMMP DB is as passed\"] = body.dateOfBirth === \"1970-01-01\";",
                  "  tests[\"Verifying that Relationship Id in Core VMMP DB is as passed\"] = body.relationship.name === environment.relationshipName;",
                  "",
                  "",
                  "} catch (err) {",
                  "",
                  "  tests[\"Data does not exist\"] = false;",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "/*",
                  "",
                  "experimenting with delay",
                  "",
                  " function sleep(milliseconds) {",
                  "  var start = new Date().getTime();",
                  "  for (var i = 0; i < 1e7; i++) {",
                  "    if ((new Date().getTime() - start) > milliseconds){",
                  "      break;",
                  "    }",
                  "  }",
                  "}",
                  "",
                  "sleep(10000); // Delays for 10 seconds",
                  "",
                  "",
                  "*/"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{VmmpUrl}}/restapi-vitality-member-management-service/registration/members/{{Email}}",
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"email\":\"{{Email}}\"} "
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "92f56701-867e-a523-2ac9-7ccc615caa4a",
          "name": "RA-153: Duplicate Activation",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 400 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "//tests[\"Verifying that Activation has failed\"] =  body.status === \"Activation Failed\";",
                  "//tests[\"Verifying that failure reason is user already active\"] =  body.failureReason === \"USER_ALREADY_ACTIVATED\";",
                  ""
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{ESBURL}}/rest/aiaVitalityMember/pub/activation",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"password\": \"Welcome123\",\r\n   \"reasonForJoining\": \"I am actively trying to maintain or improve my health\",\r\n   \"email\": \"{{Email}}\",\r\n   \"token\": \"{{umsToken}}\"   \r\n}\r\n"
            },
            "description": ""
          },
          "response": [
            {
              "id": "02d430f1-611b-f8f8-c08c-96964d387c88",
              "name": "response 2",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMember/pub/activation",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"password\": \"Welcome123\",\r\n   \"reasonForJoining\": \"I am actively trying to maintain or improve my health\",\r\n   \"email\": \"{{Email}}\",\r\n   \"token\": \"{{umsToken}}\"   \r\n}\r\n"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:07 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "237",
              "body": "{\"token\":\"a77eb61e-5dd3-4680-931e-49122ab21153\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "637dad76-74a1-969c-355e-17081ca41f64",
              "name": "response 3",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMember/pub/activation",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"password\": \"Welcome123\",\r\n   \"reasonForJoining\": \"I am actively trying to maintain or improve my health\",\r\n   \"email\": \"{{Email}}\",\r\n   \"token\": \"{{umsToken}}\"   \r\n}\r\n"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:17 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "1830",
              "body": "{\"token\":\"1ed2d16e-9fc9-46ed-af8e-49e5b5207e79\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "afed0ebc-e8a6-5a09-015f-715538ce56b6",
              "name": "response 1",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMember/pub/activation",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"password\": \"Welcome123\",\r\n   \"reasonForJoining\": \"I am actively trying to maintain or improve my health\",\r\n   \"email\": \"{{Email}}\",\r\n   \"token\": \"{{umsToken}}\"   \r\n}\r\n"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:13:56 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "215",
              "body": "{\"token\":\"39b8615a-307d-419f-a503-4d4fa6c7021d\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            }
          ]
        },
        {
          "_postman_id": "d9b28984-7d09-e9dc-6ee0-337cd4de7be8",
          "name": "RA-153: Enrolling a Member - New Process - Duplicate Email",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 400\"] = responseCode.code === 400;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "tests[\"Verifying that the Status is 'registration failed'\"] =  body.status === \"registration failed\";",
                  "tests[\"Verifying that the Failure Reason is 'A member with these details already exists. If you do not have your login details, please call the AIA Vitality member services team on 1800 848 254.'\"] =  body.failureReason === \"A member with these details already exists. If you do not have your login details, please call the AIA Vitality member services team on 1800 848 254.\";",
                  "",
                  "",
                  "",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var firstName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);",
                  "",
                  "//Setting up the firstName to an environment variable",
                  "postman.setEnvironmentVariable(\"firstName\", firstName);",
                  "var lastName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 8);",
                  "",
                  "//Setting up the lastName to an environment variable",
                  "postman.setEnvironmentVariable(\"lastName\", lastName);",
                  "",
                  "//Incrementing and Setting up the memberID to an environment variable",
                  "var memberIdNumber = Date.now();",
                  "postman.setEnvironmentVariable(\"memberIdNumber\", memberIdNumber);",
                  "postman.setEnvironmentVariable(\"memberID\", \"RA\"+memberIdNumber.toString());"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"test street1\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
            },
            "description": ""
          },
          "response": [
            {
              "id": "69fb1598-316f-9825-580e-25b2183251b8",
              "name": "response 2",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"test street1\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:07 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "237",
              "body": "{\"token\":\"a77eb61e-5dd3-4680-931e-49122ab21153\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "74de53b0-a857-e135-7192-1c24625d14b0",
              "name": "response 1",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"test street1\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:13:56 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "215",
              "body": "{\"token\":\"39b8615a-307d-419f-a503-4d4fa6c7021d\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "ebb6f4b0-c27c-0ff4-e693-a9ab8b046aa2",
              "name": "error",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"test street1\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "Keep-Alive"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Wed, 14 Dec 2016 00:42:55 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-Backside-Transport",
                  "name": "X-Backside-Transport",
                  "value": "OK OK"
                },
                {
                  "description": "",
                  "key": "X-Client-IP",
                  "name": "X-Client-IP",
                  "value": "10.61.38.184"
                },
                {
                  "description": "",
                  "key": "X-Global-Transaction-ID",
                  "name": "X-Global-Transaction-ID",
                  "value": "348720"
                }
              ],
              "cookie": [],
              "responseTime": "1537",
              "body": "{\"response\":{}}"
            },
            {
              "id": "f2d1d495-ddb6-9163-a276-bea4b344652f",
              "name": "response 3",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"test street1\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:17 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "1830",
              "body": "{\"token\":\"1ed2d16e-9fc9-46ed-af8e-49e5b5207e79\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            }
          ]
        }
      ]
    },
    {
      "_postman_id": "2854ad53-526d-ef01-68ac-80ae4f062487",
      "name": "RA-4: Registering members to Vitality without PII",
      "description": "Given that REST members enroll to Vitality\r\nWhen ESB enrol them with Vitality\r\nThen their PII info will not be sent to HK",
      "item": [
        {
          "_postman_id": "aa9f2ab3-bd40-b698-da2e-d29b574c4dd8",
          "name": "RA-153: Enrolling a Member - New Process",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "",
                  "",
                  "tests[\"Verifying that Enrolment is successfull\"] =  body.status === \"Data Accepted\";",
                  "",
                  "",
                  "",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "",
                  "//Generating Random Email address to pass into the data so that user duplication does not happen",
                  "function makeEmail() {",
                  "  var strValues = \"qpotvghysbnxui56z\";",
                  "  var strEmail = \"\";",
                  "  var strTmp;",
                  "  for (var i = 0; i < 10; i++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strTmp = \"\";",
                  "  strEmail = strEmail + \"@\";",
                  "  for (var j = 0; j < 8; j++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strEmail = strEmail + \"testpii.com\";",
                  "  return strEmail;",
                  "}",
                  "",
                  "",
                  "//Setting up the random email to an environment variable",
                  "postman.setEnvironmentVariable(\"Email\", makeEmail());",
                  "",
                  "var firstName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);",
                  "",
                  "//Setting up the firstName to an environment variable",
                  "postman.setEnvironmentVariable(\"firstName\", firstName);",
                  "",
                  "",
                  "var lastName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 8);",
                  "",
                  "//Setting up the lastName to an environment variable",
                  "postman.setEnvironmentVariable(\"lastName\", lastName);",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"601466578\",\r\n    \"address\":{\r\n      \"line1\":\"test street1\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\",\r\n      \"clientNumber\":\"\"\r\n      \r\n    },\r\n     \r\n    \"vitalityPolicyDetails\":{\r\n    \"vitalityPolicyId\":\"\"\r\n \r\n  }\r\n  },\r\n    \r\n     \r\n  \"reasonForJoining\":\"Unknown\",\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"transactionId\":\"randomtransactionid\",\r\n  \"source\":\"REST\"\r\n}"
            },
            "description": ""
          },
          "response": [
            {
              "id": "003df6c8-bb7f-9969-f903-92b6f6e1fa84",
              "name": "error",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"601466578\",\r\n    \"address\":{\r\n      \"line1\":\"test street1\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\",\r\n      \"clientNumber\":\"\"\r\n      \r\n    },\r\n     \r\n    \"vitalityPolicyDetails\":{\r\n    \"vitalityPolicyId\":\"\"\r\n \r\n  }\r\n  },\r\n    \r\n     \r\n  \"reasonForJoining\":\"Unknown\",\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"transactionId\":\"randomtransactionid\",\r\n  \"source\":\"REST\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "key": "Connection",
                  "value": "Keep-Alive",
                  "name": "Connection",
                  "description": ""
                },
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "name": "Content-Type",
                  "description": ""
                },
                {
                  "key": "Date",
                  "value": "Wed, 14 Dec 2016 00:42:55 GMT",
                  "name": "Date",
                  "description": ""
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked",
                  "name": "Transfer-Encoding",
                  "description": ""
                },
                {
                  "key": "X-Backside-Transport",
                  "value": "OK OK",
                  "name": "X-Backside-Transport",
                  "description": ""
                },
                {
                  "key": "X-Client-IP",
                  "value": "10.61.38.184",
                  "name": "X-Client-IP",
                  "description": ""
                },
                {
                  "key": "X-Global-Transaction-ID",
                  "value": "348720",
                  "name": "X-Global-Transaction-ID",
                  "description": ""
                }
              ],
              "cookie": [],
              "responseTime": "1537",
              "body": "{\"response\":{}}"
            },
            {
              "id": "20f318c5-665d-bb66-c749-a2e8795cd563",
              "name": "response 3",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"601466578\",\r\n    \"address\":{\r\n      \"line1\":\"test street1\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\",\r\n      \"clientNumber\":\"\"\r\n      \r\n    },\r\n     \r\n    \"vitalityPolicyDetails\":{\r\n    \"vitalityPolicyId\":\"\"\r\n \r\n  }\r\n  },\r\n    \r\n     \r\n  \"reasonForJoining\":\"Unknown\",\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"transactionId\":\"randomtransactionid\",\r\n  \"source\":\"REST\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:17 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "1830",
              "body": "{\"token\":\"1ed2d16e-9fc9-46ed-af8e-49e5b5207e79\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "834c4fa3-f37e-665f-96ac-df6f7d093cc4",
              "name": "response 2",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"601466578\",\r\n    \"address\":{\r\n      \"line1\":\"test street1\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\",\r\n      \"clientNumber\":\"\"\r\n      \r\n    },\r\n     \r\n    \"vitalityPolicyDetails\":{\r\n    \"vitalityPolicyId\":\"\"\r\n \r\n  }\r\n  },\r\n    \r\n     \r\n  \"reasonForJoining\":\"Unknown\",\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"transactionId\":\"randomtransactionid\",\r\n  \"source\":\"REST\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:07 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "237",
              "body": "{\"token\":\"a77eb61e-5dd3-4680-931e-49122ab21153\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "d1d3646d-03c1-4991-50db-07b4921a7c21",
              "name": "response 1",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"601466578\",\r\n    \"address\":{\r\n      \"line1\":\"test street1\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\",\r\n      \"clientNumber\":\"\"\r\n      \r\n    },\r\n     \r\n    \"vitalityPolicyDetails\":{\r\n    \"vitalityPolicyId\":\"\"\r\n \r\n  }\r\n  },\r\n    \r\n     \r\n  \"reasonForJoining\":\"Unknown\",\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"transactionId\":\"randomtransactionid\",\r\n  \"source\":\"REST\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:13:56 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "215",
              "body": "{\"token\":\"39b8615a-307d-419f-a503-4d4fa6c7021d\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            }
          ]
        },
        {
          "_postman_id": "8d369f42-d068-0ce3-f3dc-0bce52be704d",
          "name": "Wait for enrollment to finish ",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{testPackageURL}}/rest/restTestPackage.ws.sleep?seconds=180",
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {},
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "c352c854-1aae-1103-d9c0-d813d6edba0a",
          "name": "RA-145: Staging table contains data from the Request",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "//Verifing that the response time is less than the value declared in global  variable ",
                  "tests[\"Response time is less than \" + globals.responseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < globals.responseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "try{",
                  "",
                  "",
                  "tests[\"Verifying that Email in staging VMMP DB is as passed\"] = body.getMemberInfoStagingOutput.results[0].EMAIL === environment.Email;",
                  "tests[\"Verifying that Title in staging VMMP DB is as passed\"] = body.getMemberInfoStagingOutput.results[0].TITLE === \"Mr\";",
                  "tests[\"Verifying that First Name in staging VMMP DB is as passed\"] = body.getMemberInfoStagingOutput.results[0].FIRST_NAME === environment.firstName;",
                  "tests[\"Verifying that Last Name in staging VMMP DB is as passed\"] = body.getMemberInfoStagingOutput.results[0].LAST_NAME === environment.lastName;",
                  "tests[\"Verifying that Gender in staging VMMP DB is as passed\"] = body.getMemberInfoStagingOutput.results[0].GENDER === \"M\";",
                  "tests[\"Verifying that DOB in staging VMMP DB is as passed\"] = body.getMemberInfoStagingOutput.results[0].DOB === \"1970-01-01\";",
                  "tests[\"Verifying that Mobile in staging VMMP DB is passed\"] = body.getMemberInfoStagingOutput.results[0].MOBILE === environment.mobileNumber;",
                  "tests[\"Verifying that Address 1 in staging VMMP DB is passed\"] = body.getMemberInfoStagingOutput.results[0].MAILING_ADDRESS1 ===\"test street1\";",
                  "tests[\"Verifying that Address 2 in staging VMMP DB is is passed\"] = body.getMemberInfoStagingOutput.results[0].MAILING_ADDRESS2 === null;",
                  "tests[\"Verifying that Suburb in staging VMMP DB is is passed\"] = body.getMemberInfoStagingOutput.results[0].MAILING_CITY === \"Wiseman's Ferry\";",
                  "tests[\"Verifying that State in staging VMMP DB is is passed\"] = body.getMemberInfoStagingOutput.results[0].MAILING_STATE === \"VIC\";",
                  "tests[\"Verifying that Postcode in staging VMMP DB is is passed\"] = body.getMemberInfoStagingOutput.results[0].MAILING_POSTCODE === environment.postcode;",
                  "tests[\"Verifying that Work Phone in staging VMMP DB is is passed\"] = body.getMemberInfoStagingOutput.results[0].WORK_PHONE === environment.workNumber;",
                  "tests[\"Verifying that Home Phone in staging VMMP DB is passed\"] = body.getMemberInfoStagingOutput.results[0].HOME_PHONE === environment.homeNumber;",
                  "tests[\"Verifying that Processed File staging VMMP DB is passed\"] = body.getMemberInfoStagingOutput.results[0].PROCESSED_FILE === null;",
                  "tests[\"Verifying that Relationship No. in staging VMMP DB is as passed\"] = body.getMemberInfoStagingOutput.results[0].RELATIONSHIP_NAME === environment.relationshipName;",
                  "tests[\"Verifying that NOMINATION ID in staging VMMP DB is as passed\"] = body.getMemberInfoStagingOutput.results[0].NOMINATION_ID === \"601466578\";",
                  "tests[\"Verifying that Status in staging VMMP DB is as passed\"] = body.getMemberInfoStagingOutput.results[0].STATUS === \"VALID_SHORT_PROCESS\";",
                  "",
                  "}",
                  "catch(err)",
                  "",
                  "{",
                  "    ",
                  "    tests[\"Data does not exist\"] = false;",
                  "}",
                  ""
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{StageDB}}",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"email\":\"{{Email}}\"} "
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "25d692b1-8379-6772-5731-3dcfe77747c9",
          "name": "RA-145: In VMMP core tables the PII data is Updated",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "//Verifing that the response time is less than the value declared in global  variable ",
                  "tests[\"Response time is less than \" + globals.responseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < globals.responseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "//console.log(environment.restMemberId+\"aiaPiiData\");",
                  "",
                  "try{",
                  "",
                  "tests[\"Verifying that Email in Core VMMP DB is as passed\"] = body.email === environment.Email;",
                  "tests[\"Verifying that First Name in Core VMMP DB is as passed\"] = body.firstName === environment.firstName;",
                  "tests[\"Verifying that status is ONLINE_READY_TO_ENROL\"] = body.memberships[0].status.name === \"AWAITING_ACTIVATION\";",
                  "tests[\"Verifying that Last Name in Core VMMP DB is as passed\"] = body.lastName === environment.lastName;",
                  "tests[\"Verifying that Gender in Core VMMP DB is as passed\"] = body.gender === \"M\";",
                  "tests[\"Verifying that DOB in Core VMMP DB is as passed\"] = body.dateOfBirth === \"1970-01-01\";",
                  "tests[\"Verifying that Relationship Id in Core VMMP DB is as passed\"] = body.relationship.name === environment.relationshipName;",
                  "",
                  "",
                  "}",
                  "catch(err){",
                  "    ",
                  "    tests[\"Data does not exist\"] = false;",
                  "}",
                  ""
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{VmmpUrl}}/restapi-vitality-member-management-service/registration/members/{{Email}}",
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"email\":\"{{Email}}\"} "
            },
            "description": "A/C:\r\nGiven that members were enrolled with Vitality\r\nWhen they activate their membership\r\nThen their correct PII info will be stored in the VMMp core tbl"
          },
          "response": []
        },
        {
          "_postman_id": "9a9469ab-58f3-8d5a-cdf3-550472f542b3",
          "name": "RA-147 : Verifying user has been added to UMS and is InActive Status",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonObject = xml2Json(responseBody);\r",
                  "\r",
                  "try\r",
                  "{\r",
                  "\r",
                  "\r",
                  "tests[\"Verifying that User status is Not Activated\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userStatus === \"I\";\r",
                  "\r",
                  "tests[\"Verifying that User ID is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userId === environment.Email ;\r",
                  "\r",
                  "tests[\"Verifying that Email is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.email === environment.Email ;\r",
                  "\r",
                  "tests[\"Verifying that First Name is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.givenName === environment.firstName ;\r",
                  "\r",
                  "tests[\"Verifying that Last name is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.surname === environment.lastName ;\r",
                  "\r",
                  "tests[\"Verifying that Member Type is as passed to UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.memberType === \"GROUP\" ;\r",
                  "\r",
                  "tests[\"Verifying that User Groups List is VITALITY_AWAITING_ACTIVATION\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userGroupsList === \"VITALITY_AWAITING_ACTIVATION\" ;\r",
                  "\r",
                  "\r",
                  "\r",
                  "//Setting up the token to an environment variable to be used in subsequent requests\r",
                  "\r",
                  "postman.setEnvironmentVariable(\"umsToken\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.token);\r",
                  "\r",
                  "postman.setEnvironmentVariable(\"aiaClientNumber\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaClientNumber);\r",
                  "postman.setEnvironmentVariable(\"aiaVitalityMemberNumber\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaVitalityMemberNumber);\r",
                  "postman.setEnvironmentVariable(\"aiaDsyPolicyNumber\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaDsyPolicyNumber);\r",
                  "\r",
                  "postman.setEnvironmentVariable(\"aiaVitalityId\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaVitalityId);\r",
                  "\r",
                  "\r",
                  "}\r",
                  "\r",
                  "\r",
                  "catch(err){\r",
                  "    \r",
                  "  tests[\"Data in response does not exist\"] = false;  \r",
                  "\r",
                  "\r",
                  "}\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "{{UmsURL}}/{{UMSContext}}/UsermanagementService",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "text/xml",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:ser=\"http://service.usermanagement.aiaa.com.au\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <ser:searchUserRequest>\n         <source>VITALITY</source>\n         <userType></userType>\n         <userDetails>\n            <userName></userName>\n            <userId></userId>\n            <userDN></userDN>\n            <email>{{Email}}</email>\n            <givenName></givenName>\n            <surname></surname>\n            <webChannel></webChannel>\n            <token></token>\n            <fundIdentifier></fundIdentifier>\n            <eligibilityAssessorEmail></eligibilityAssessorEmail>\n            <activationURL></activationURL>\n            <consentURL></consentURL>\n            <!--1 or more repetitions:-->\n            <userRolesList></userRolesList>\n            <title></title>\n            <dateOfBirth></dateOfBirth>\n            <gender></gender>\n            <addressLine1></addressLine1>\n            <addressLine2></addressLine2>\n            <suburb></suburb>\n            <state></state>\n            <postcode></postcode>\n            <country></country>\n            <mobilePhone></mobilePhone>\n            <workPhone></workPhone>\n            <homePhone></homePhone>\n            <fax></fax>\n            <isRetailLifeInsured></isRetailLifeInsured>\n            <passwordRequestDate></passwordRequestDate>\n            <password></password>\n            <passwordRequestCount></passwordRequestCount>\n            <aiaProposalNumber></aiaProposalNumber>\n            <aiaProposalWritingAdviser></aiaProposalWritingAdviser>\n            <aiaCCAppTnCAcceptedDate></aiaCCAppTnCAcceptedDate>\n            <aiaCCAppTnCVersion></aiaCCAppTnCVersion>\n            <!--1 or more repetitions:-->\n            <userGroupsList></userGroupsList>\n            <!--1 or more repetitions:-->\n            <userGroupsDNList></userGroupsDNList>\n            <memberType></memberType>\n            <residentialPostcode></residentialPostcode>\n            <userStatus></userStatus>\n            <aiaClientNumber></aiaClientNumber>\n            <aiaVitalityMemberNumber></aiaVitalityMemberNumber>\n            <aiaDsyPolicyNumber></aiaDsyPolicyNumber>\n            <aiaVitalityCobrandingInfo></aiaVitalityCobrandingInfo>\n         </userDetails>\n      </ser:searchUserRequest>\n   </soapenv:Body>\n</soapenv:Envelope>\n\n"
            },
            "description": "A/C:\r\nGiven that members activated their membership\r\nWhen ESB gets the action\r\nThen their membership will be activated in UMS"
          },
          "response": []
        },
        {
          "_postman_id": "21182abc-da2b-682e-6c8e-8c1254db4d61",
          "name": "RA-153: Activate member - New Process",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "",
                  "//tests[\"Verifying that Activation is successfull\"] =  body.status === \"Activation Successful\";",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{ESBURL}}/rest/aiaVitalityMember/pub/activation",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"password\": \"Welcome123\",\r\n   \"reasonForJoining\": \"I am actively trying to maintain or improve my health\",\r\n   \"email\": \"{{Email}}\",\r\n   \"token\": \"{{umsToken}}\"   \r\n}\r\n"
            },
            "description": ""
          },
          "response": [
            {
              "id": "b8a68f04-1f4e-9bc1-9e1c-380c0abd45ce",
              "name": "response 1",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMember/pub/activation",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"password\": \"Welcome123\",\r\n   \"reasonForJoining\": \"I am actively trying to maintain or improve my health\",\r\n   \"email\": \"{{Email}}\",\r\n   \"token\": \"{{umsToken}}\"   \r\n}\r\n"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:13:56 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "215",
              "body": "{\"token\":\"39b8615a-307d-419f-a503-4d4fa6c7021d\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "c3a6a204-13d8-0290-ebb2-b11bf6ee84e4",
              "name": "response 2",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMember/pub/activation",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"password\": \"Welcome123\",\r\n   \"reasonForJoining\": \"I am actively trying to maintain or improve my health\",\r\n   \"email\": \"{{Email}}\",\r\n   \"token\": \"{{umsToken}}\"   \r\n}\r\n"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:07 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "237",
              "body": "{\"token\":\"a77eb61e-5dd3-4680-931e-49122ab21153\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "cc1b01a7-3ed3-7ce5-4bf2-2a0108691314",
              "name": "error",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMember/pub/activation",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"password\": \"Welcome123\",\r\n   \"reasonForJoining\": \"I am actively trying to maintain or improve my health\",\r\n   \"email\": \"{{Email}}\",\r\n   \"token\": \"{{umsToken}}\"   \r\n}\r\n"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "key": "Connection",
                  "value": "Keep-Alive",
                  "name": "Connection",
                  "description": ""
                },
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "name": "Content-Type",
                  "description": ""
                },
                {
                  "key": "Date",
                  "value": "Wed, 14 Dec 2016 00:42:55 GMT",
                  "name": "Date",
                  "description": ""
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked",
                  "name": "Transfer-Encoding",
                  "description": ""
                },
                {
                  "key": "X-Backside-Transport",
                  "value": "OK OK",
                  "name": "X-Backside-Transport",
                  "description": ""
                },
                {
                  "key": "X-Client-IP",
                  "value": "10.61.38.184",
                  "name": "X-Client-IP",
                  "description": ""
                },
                {
                  "key": "X-Global-Transaction-ID",
                  "value": "348720",
                  "name": "X-Global-Transaction-ID",
                  "description": ""
                }
              ],
              "cookie": [],
              "responseTime": "1537",
              "body": "{\"response\":{}}"
            },
            {
              "id": "ffdc1f38-c14c-c0c6-05e1-eb954b003789",
              "name": "response 3",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMember/pub/activation",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"password\": \"Welcome123\",\r\n   \"reasonForJoining\": \"I am actively trying to maintain or improve my health\",\r\n   \"email\": \"{{Email}}\",\r\n   \"token\": \"{{umsToken}}\"   \r\n}\r\n"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:17 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "1830",
              "body": "{\"token\":\"1ed2d16e-9fc9-46ed-af8e-49e5b5207e79\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            }
          ]
        },
        {
          "_postman_id": "bb1d3495-39e3-3699-cecf-98e8fc364b4e",
          "name": "Wait for activation to finish",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{testPackageURL}}/rest/restTestPackage.ws.sleep?seconds=120",
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {},
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "011c4b37-523e-d50a-5a46-a982634cb6a6",
          "name": "RA-4: Verifying that no PII information is being stored in HK",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "try{",
                  "",
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "tests[\"Verifying that First name is masked\"] = body['ns2:payload']['ns2:content']['ns2:userDetails']['ns2:firstName'] === \"AIAPIIDATA\"  ;",
                  "tests[\"Verifying that Last name is masked\"] = body['ns2:payload']['ns2:content']['ns2:userDetails']['ns2:lastName'] === \"AIAPIIDATA\"  ;",
                  "tests[\"Verifying that Email is masked\"] = body['ns2:payload']['ns2:content']['ns2:userDetails']['ns2:emailAddress'] === environment.aiaClientNumber+\".aiapiidata@aia.com\"  ;",
                  "tests[\"Verifying that Full name is masked\"] = body['ns2:payload']['ns2:content']['ns2:userDetails']['ns2:fullName'] === \"AIAPIIDATA,A,MR.\"  ;",
                  "",
                  "",
                  "",
                  "}",
                  "catch(err)",
                  "",
                  "{",
                  "    ",
                  "    tests[\"PII Data does not exist\"] = true;",
                  "    ",
                  "}",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "{{testPackageURL}}/rest/restTestPackage.ws.login?entityNumber={{entityNumber}}&email={{Email}}",
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              },
              {
                "key": "Cache-Control",
                "value": "no-cache",
                "description": ""
              },
              {
                "key": "Postman-Token",
                "value": "66ecae2f-3117-0979-e889-70e10c74c9e1",
                "description": ""
              }
            ],
            "body": {},
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "23f9ae25-bd24-8922-4249-9603fa51f691",
          "name": "RA-147 : Verifying user has been added to UMS and is activated",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonObject = xml2Json(responseBody);\r",
                  "\r",
                  "try\r",
                  "{\r",
                  "\r",
                  "\r",
                  "tests[\"Verifying that User status is  Activated\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userStatus === \"A\";\r",
                  "\r",
                  "tests[\"Verifying that User ID is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userId === environment.Email ;\r",
                  "\r",
                  "tests[\"Verifying that Email is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.email === environment.Email ;\r",
                  "\r",
                  "tests[\"Verifying that First Name is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.givenName === environment.firstName ;\r",
                  "\r",
                  "tests[\"Verifying that Last name is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.surname === environment.lastName ;\r",
                  "\r",
                  "tests[\"Verifying that Member Type is as passed to UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.memberType === \"GROUP\" ;\r",
                  "\r",
                  "tests[\"Verifying that User Groups List is VITALITY_ACTIVE\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userGroupsList === \"VITALITY_ACTIVE\" ;\r",
                  "\r",
                  "\r",
                  "\r",
                  "//Setting up the token to an environment variable to be used in subsequent requests\r",
                  "\r",
                  "postman.setEnvironmentVariable(\"umsToken\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.token);\r",
                  "\r",
                  "postman.setEnvironmentVariable(\"aiaClientNumber\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaClientNumber);\r",
                  "postman.setEnvironmentVariable(\"aiaVitalityMemberNumber\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaVitalityMemberNumber);\r",
                  "postman.setEnvironmentVariable(\"aiaDsyPolicyNumber\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaDsyPolicyNumber);\r",
                  "\r",
                  "postman.setEnvironmentVariable(\"aiaVitalityId\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaVitalityId);\r",
                  "\r",
                  "\r",
                  "}\r",
                  "\r",
                  "\r",
                  "catch(err){\r",
                  "    \r",
                  "  tests[\"Data in response does not exist\"] = false;  \r",
                  "\r",
                  "\r",
                  "}\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "{{UmsURL}}/{{UMSContext}}/UsermanagementService",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "text/xml",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:ser=\"http://service.usermanagement.aiaa.com.au\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <ser:searchUserRequest>\r\n         <source>VITALITY</source>\r\n         <userType></userType>\r\n         <userDetails>\r\n            <userName></userName>\r\n            <userId></userId>\r\n            <userDN></userDN>\r\n            <email>{{Email}}</email>\r\n            <givenName></givenName>\r\n            <surname></surname>\r\n            <webChannel></webChannel>\r\n            <token></token>\r\n            <fundIdentifier></fundIdentifier>\r\n            <eligibilityAssessorEmail></eligibilityAssessorEmail>\r\n            <activationURL></activationURL>\r\n            <consentURL></consentURL>\r\n            <!--1 or more repetitions:-->\r\n            <userRolesList></userRolesList>\r\n            <title></title>\r\n            <dateOfBirth></dateOfBirth>\r\n            <gender></gender>\r\n            <addressLine1></addressLine1>\r\n            <addressLine2></addressLine2>\r\n            <suburb></suburb>\r\n            <state></state>\r\n            <postcode></postcode>\r\n            <country></country>\r\n            <mobilePhone></mobilePhone>\r\n            <workPhone></workPhone>\r\n            <homePhone></homePhone>\r\n            <fax></fax>\r\n            <isRetailLifeInsured></isRetailLifeInsured>\r\n            <passwordRequestDate></passwordRequestDate>\r\n            <password></password>\r\n            <passwordRequestCount></passwordRequestCount>\r\n            <aiaProposalNumber></aiaProposalNumber>\r\n            <aiaProposalWritingAdviser></aiaProposalWritingAdviser>\r\n            <aiaCCAppTnCAcceptedDate></aiaCCAppTnCAcceptedDate>\r\n            <aiaCCAppTnCVersion></aiaCCAppTnCVersion>\r\n            <!--1 or more repetitions:-->\r\n            <userGroupsList></userGroupsList>\r\n            <!--1 or more repetitions:-->\r\n            <userGroupsDNList></userGroupsDNList>\r\n            <memberType></memberType>\r\n            <residentialPostcode></residentialPostcode>\r\n            <userStatus></userStatus>\r\n            <aiaClientNumber></aiaClientNumber>\r\n            <aiaVitalityMemberNumber></aiaVitalityMemberNumber>\r\n            <aiaDsyPolicyNumber></aiaDsyPolicyNumber>\r\n            <aiaVitalityCobrandingInfo></aiaVitalityCobrandingInfo>\r\n         </userDetails>\r\n      </ser:searchUserRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>\r\n\r\n"
            },
            "description": "A/C:\r\nGiven that members activated their membership\r\nWhen ESB gets the action\r\nThen their membership will be activated in UMS"
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "2932569e-621f-3b7a-2dfe-16e018dcdaa8",
      "name": "RA-92 : Validate T&Cs",
      "description": "",
      "item": [
        {
          "_postman_id": "ab24a887-51c7-d648-3c17-fec5f27417cd",
          "name": "RA-153: Enrolling a Member - New Process",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "",
                  "",
                  "tests[\"Verifying that Enrolment is successfull\"] =  body.status === \"Data Accepted\";",
                  "",
                  "",
                  "",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "",
                  "//Generating Random Email address to pass into the data so that user duplication does not happen",
                  "function makeEmail() {",
                  "  var strValues = \"qpotvghysbnxui56z\";",
                  "  var strEmail = \"\";",
                  "  var strTmp;",
                  "  for (var i = 0; i < 10; i++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strTmp = \"\";",
                  "  strEmail = strEmail + \"@\";",
                  "  for (var j = 0; j < 8; j++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strEmail = strEmail + \"testpii.com\";",
                  "  return strEmail;",
                  "}",
                  "",
                  "",
                  "//Setting up the random email to an environment variable",
                  "postman.setEnvironmentVariable(\"Email\", makeEmail());",
                  "",
                  "var firstName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);",
                  "",
                  "//Setting up the firstName to an environment variable",
                  "postman.setEnvironmentVariable(\"firstName\", firstName);",
                  "",
                  "",
                  "var lastName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 8);",
                  "",
                  "//Setting up the lastName to an environment variable",
                  "postman.setEnvironmentVariable(\"lastName\", lastName);",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"member\":{  \r\n      \"title\":\"Mr\",\r\n      \"firstName\":\"{{firstName}}\",\r\n      \"lastName\":\"{{lastName}}\",\r\n      \"gender\":\"M\",\r\n      \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n      \"email\":\"{{Email}}\",\r\n      \"memberId\":\"{{memberID}}\",\r\n      \"address\":{  \r\n         \"line1\":\"test street1\",\r\n         \"suburb\":\"Wiseman's Ferry\",\r\n         \"state\":\"VIC\",\r\n         \"country\":\"Australia\",\r\n         \"postcode\":\"{{postcode}}\"\r\n      },\r\n      \"phone\":{  \r\n         \"mobileNumber\":\"{{mobileNumber}}\",\r\n         \"homeNumber\":\"{{homeNumber}}\",\r\n         \"workNumber\":\"{{workNumber}}\"\r\n      },\r\n      \"membership\":{  \r\n         \"membershipType\":\"GROUP\",\r\n         \"clientNumber\":\"\"\r\n      },\r\n      \"vitalityPolicyDetails\":{  \r\n         \"vitalityPolicyId\":\"\"\r\n      }\r\n   },\r\n   \"reasonForJoining\":\"Unknown\",\r\n   \"acceptTnC\":\"Y\",\r\n   \"relationshipName\":\"{{relationshipName}}\",\r\n   \"transactionId\":\"randomtransactionid\",\r\n   \"source\":\"REST\",\r\n   \"uuid\": \"{{$guid}}\"\r\n}"
            },
            "description": ""
          },
          "response": [
            {
              "id": "029d89d8-be2f-0882-75db-caa94f5ad31e",
              "name": "response 3",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{  \r\n   \"member\":{  \r\n      \"title\":\"Mr\",\r\n      \"firstName\":\"{{firstName}}\",\r\n      \"lastName\":\"{{lastName}}\",\r\n      \"gender\":\"M\",\r\n      \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n      \"email\":\"{{Email}}\",\r\n      \"memberId\":\"{{memberID}}\",\r\n      \"address\":{  \r\n         \"line1\":\"test street1\",\r\n         \"suburb\":\"Wiseman's Ferry\",\r\n         \"state\":\"VIC\",\r\n         \"country\":\"Australia\",\r\n         \"postcode\":\"{{postcode}}\"\r\n      },\r\n      \"phone\":{  \r\n         \"mobileNumber\":\"{{mobileNumber}}\",\r\n         \"homeNumber\":\"{{homeNumber}}\",\r\n         \"workNumber\":\"{{workNumber}}\"\r\n      },\r\n      \"membership\":{  \r\n         \"membershipType\":\"GROUP\",\r\n         \"clientNumber\":\"\"\r\n      },\r\n      \"vitalityPolicyDetails\":{  \r\n         \"vitalityPolicyId\":\"\"\r\n      }\r\n   },\r\n   \"reasonForJoining\":\"Unknown\",\r\n   \"acceptTnC\":\"Y\",\r\n   \"relationshipName\":\"{{relationshipName}}\",\r\n   \"transactionId\":\"randomtransactionid\",\r\n   \"source\":\"REST\",\r\n   \"uuid\": \"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:17 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "1830",
              "body": "{\"token\":\"1ed2d16e-9fc9-46ed-af8e-49e5b5207e79\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "48a84559-3e56-8234-ffd1-15109c091fbd",
              "name": "response 2",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{  \r\n   \"member\":{  \r\n      \"title\":\"Mr\",\r\n      \"firstName\":\"{{firstName}}\",\r\n      \"lastName\":\"{{lastName}}\",\r\n      \"gender\":\"M\",\r\n      \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n      \"email\":\"{{Email}}\",\r\n      \"memberId\":\"{{memberID}}\",\r\n      \"address\":{  \r\n         \"line1\":\"test street1\",\r\n         \"suburb\":\"Wiseman's Ferry\",\r\n         \"state\":\"VIC\",\r\n         \"country\":\"Australia\",\r\n         \"postcode\":\"{{postcode}}\"\r\n      },\r\n      \"phone\":{  \r\n         \"mobileNumber\":\"{{mobileNumber}}\",\r\n         \"homeNumber\":\"{{homeNumber}}\",\r\n         \"workNumber\":\"{{workNumber}}\"\r\n      },\r\n      \"membership\":{  \r\n         \"membershipType\":\"GROUP\",\r\n         \"clientNumber\":\"\"\r\n      },\r\n      \"vitalityPolicyDetails\":{  \r\n         \"vitalityPolicyId\":\"\"\r\n      }\r\n   },\r\n   \"reasonForJoining\":\"Unknown\",\r\n   \"acceptTnC\":\"Y\",\r\n   \"relationshipName\":\"{{relationshipName}}\",\r\n   \"transactionId\":\"randomtransactionid\",\r\n   \"source\":\"REST\",\r\n   \"uuid\": \"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:07 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "237",
              "body": "{\"token\":\"a77eb61e-5dd3-4680-931e-49122ab21153\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "92c81a6e-eafb-50b5-3d32-f64d82f067ac",
              "name": "response 1",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{  \r\n   \"member\":{  \r\n      \"title\":\"Mr\",\r\n      \"firstName\":\"{{firstName}}\",\r\n      \"lastName\":\"{{lastName}}\",\r\n      \"gender\":\"M\",\r\n      \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n      \"email\":\"{{Email}}\",\r\n      \"memberId\":\"{{memberID}}\",\r\n      \"address\":{  \r\n         \"line1\":\"test street1\",\r\n         \"suburb\":\"Wiseman's Ferry\",\r\n         \"state\":\"VIC\",\r\n         \"country\":\"Australia\",\r\n         \"postcode\":\"{{postcode}}\"\r\n      },\r\n      \"phone\":{  \r\n         \"mobileNumber\":\"{{mobileNumber}}\",\r\n         \"homeNumber\":\"{{homeNumber}}\",\r\n         \"workNumber\":\"{{workNumber}}\"\r\n      },\r\n      \"membership\":{  \r\n         \"membershipType\":\"GROUP\",\r\n         \"clientNumber\":\"\"\r\n      },\r\n      \"vitalityPolicyDetails\":{  \r\n         \"vitalityPolicyId\":\"\"\r\n      }\r\n   },\r\n   \"reasonForJoining\":\"Unknown\",\r\n   \"acceptTnC\":\"Y\",\r\n   \"relationshipName\":\"{{relationshipName}}\",\r\n   \"transactionId\":\"randomtransactionid\",\r\n   \"source\":\"REST\",\r\n   \"uuid\": \"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:13:56 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "215",
              "body": "{\"token\":\"39b8615a-307d-419f-a503-4d4fa6c7021d\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "bb682975-09ce-55f6-3db6-dfae251e35fc",
              "name": "error",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{  \r\n   \"member\":{  \r\n      \"title\":\"Mr\",\r\n      \"firstName\":\"{{firstName}}\",\r\n      \"lastName\":\"{{lastName}}\",\r\n      \"gender\":\"M\",\r\n      \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n      \"email\":\"{{Email}}\",\r\n      \"memberId\":\"{{memberID}}\",\r\n      \"address\":{  \r\n         \"line1\":\"test street1\",\r\n         \"suburb\":\"Wiseman's Ferry\",\r\n         \"state\":\"VIC\",\r\n         \"country\":\"Australia\",\r\n         \"postcode\":\"{{postcode}}\"\r\n      },\r\n      \"phone\":{  \r\n         \"mobileNumber\":\"{{mobileNumber}}\",\r\n         \"homeNumber\":\"{{homeNumber}}\",\r\n         \"workNumber\":\"{{workNumber}}\"\r\n      },\r\n      \"membership\":{  \r\n         \"membershipType\":\"GROUP\",\r\n         \"clientNumber\":\"\"\r\n      },\r\n      \"vitalityPolicyDetails\":{  \r\n         \"vitalityPolicyId\":\"\"\r\n      }\r\n   },\r\n   \"reasonForJoining\":\"Unknown\",\r\n   \"acceptTnC\":\"Y\",\r\n   \"relationshipName\":\"{{relationshipName}}\",\r\n   \"transactionId\":\"randomtransactionid\",\r\n   \"source\":\"REST\",\r\n   \"uuid\": \"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "key": "Connection",
                  "value": "Keep-Alive",
                  "name": "Connection",
                  "description": ""
                },
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "name": "Content-Type",
                  "description": ""
                },
                {
                  "key": "Date",
                  "value": "Wed, 14 Dec 2016 00:42:55 GMT",
                  "name": "Date",
                  "description": ""
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked",
                  "name": "Transfer-Encoding",
                  "description": ""
                },
                {
                  "key": "X-Backside-Transport",
                  "value": "OK OK",
                  "name": "X-Backside-Transport",
                  "description": ""
                },
                {
                  "key": "X-Client-IP",
                  "value": "10.61.38.184",
                  "name": "X-Client-IP",
                  "description": ""
                },
                {
                  "key": "X-Global-Transaction-ID",
                  "value": "348720",
                  "name": "X-Global-Transaction-ID",
                  "description": ""
                }
              ],
              "cookie": [],
              "responseTime": "1537",
              "body": "{\"response\":{}}"
            }
          ]
        },
        {
          "_postman_id": "38275eba-8a33-4ba4-de0e-c862a5114288",
          "name": "Wait for enrollment to finish ",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{testPackageURL}}/rest/restTestPackage.ws.sleep?seconds=180",
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {},
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "a7fdfda3-8a6e-4836-96d0-d3929ff21ee5",
          "name": "RA-92 : Request in case when user has accepted T&Cs",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "",
                  "try{",
                  "    //Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "tests[\"Verifying that the request is returning registration successful when user has accepted T&C's\"] = body.status === \"Data Accepted\";",
                  "",
                  "",
                  "}",
                  "",
                  "catch(err){",
                  "    ",
                  "  tests[\"Data in response does not exist\"] = false;  ",
                  "",
                  "",
                  "}",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Generating Random Email address to pass into the data so that user duplication does not happen",
                  "function makeEmail() {",
                  "  var strValues = \"qpwoeufbncmakhfga597\";",
                  "  var strEmail = \"\";",
                  "  var strTmp;",
                  "  for (var i = 0; i < 10; i++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strTmp = \"\";",
                  "  strEmail = strEmail + \"@\";",
                  "  for (var j = 0; j < 8; j++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strEmail = strEmail + \"aiapiidata.com\";",
                  "  return strEmail;",
                  "}",
                  "",
                  "//Setting up the random email to an environment variable",
                  "postman.setEnvironmentVariable(\"Email\", makeEmail());",
                  "",
                  "//Generating Random 9 digit number to populate in variables to pass Id set 1 requests",
                  "var Txt1 = Math.floor(100000000 + Math.random() * 900000000);",
                  "",
                  "////Setting up the random numeric to an environment variable for AIA_VITALITY_ID",
                  "postman.setEnvironmentVariable(\"AIA_VITALITY_ID\", Txt1);",
                  "",
                  "//Generating Random 9 digit number to populate in variables to pass Id set 1 requests",
                  "var Txt2 = Math.floor(100000000 + Math.random() * 900000000);",
                  "postman.setEnvironmentVariable(\"AIA_CLIENT_NUMBER\", Txt2);",
                  "",
                  "//Generating Random name string to pass in first name ",
                  "var firstName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);",
                  "",
                  "//Setting up the firstName to an environment variable",
                  "postman.setEnvironmentVariable(\"firstName\", firstName);",
                  "",
                  "",
                  "",
                  "",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.ws.enrollMember.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"Last\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"01/01/1970\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{restMemberId}}\",\r\n    \"address\":{\r\n      \"line1\":\"15 harold street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"3144\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"0404040404\",\r\n      \"homeNumber\":\"0288911783\",\r\n      \"workNumber\":\"0288944513\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n\r\n      \r\n    }\r\n\r\n    },\r\n    \r\n     \r\n  \"reasonForJoining\":\"Unknown\",\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"transactionId\":\"abcd1234\"\r\n \r\n}"
            },
            "description": "Existing T&Cs\r\nGiven that a member did accept T&Cs\r\nWhen ESB validates member record\r\nThen enrollment process will continue"
          },
          "response": []
        },
        {
          "_postman_id": "34334360-ce7f-fd53-c90b-014c1c485d46",
          "name": "RA-92 : Request in case when user has not accepted T&Cs",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "try {",
                  "    //Verifying that the service is returning response code 400 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 400\"] = responseCode.code === 400;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "tests[\"Verifying that the request is returning Regsitration Failed when user has not accepted T&C's\"] = body.status === \"registration failed\";",
                  "",
                  "",
                  "//Doing a condition to handle the case when the Field does not exist in the response",
                  "",
                  "",
                  "tests[\"Verifying that the service is returning error when not accepting T&C's \"] = body.invalidFields.acceptTnC === \"cannot proceed as Terms and Conditions were not accepted\";",
                  "}",
                  "",
                  "catch(err) {",
                  "    ",
                  "    tests[\"Invalid field response does not exist\"] = false;",
                  "}",
                  "",
                  "",
                  "console.log(body.failureReason);",
                  "",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Generating Random Email address to pass into the data so that user duplication does not happen",
                  "function makeEmail() {",
                  "  var strValues = \"qpwoeufbncmakhfga597\";",
                  "  var strEmail = \"\";",
                  "  var strTmp;",
                  "  for (var i = 0; i < 10; i++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strTmp = \"\";",
                  "  strEmail = strEmail + \"@\";",
                  "  for (var j = 0; j < 8; j++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strEmail = strEmail + \".com\"",
                  "  return strEmail;",
                  "}",
                  "",
                  "//Setting up the random email to an environment variable",
                  "postman.setEnvironmentVariable(\"Email\", makeEmail());",
                  "",
                  "//Generating Random 9 digit number to populate in variables to pass Id set 1 requests",
                  "var Txt1 = Math.floor(100000000 + Math.random() * 900000000);",
                  "",
                  "////Setting up the random numeric to an environment variable for AIA_VITALITY_ID",
                  "postman.setEnvironmentVariable(\"AIA_VITALITY_ID\", Txt1);",
                  "",
                  "//Generating Random 9 digit number to populate in variables to pass Id set 1 requests",
                  "var Txt2 = Math.floor(100000000 + Math.random() * 900000000);",
                  "postman.setEnvironmentVariable(\"AIA_CLIENT_NUMBER\", Txt2);",
                  "",
                  "//Generating Random name string to pass in first name ",
                  "var firstName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);",
                  "",
                  "//Setting up the firstName to an environment variable",
                  "postman.setEnvironmentVariable(\"firstName\", firstName);",
                  "",
                  "",
                  "",
                  "",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.ws.enrollMember.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"Last\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"01/01/1970\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{restMemberId}}\",\r\n    \"address\":{\r\n      \"line1\":\"15 harold street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"3144\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"0404040404\",\r\n      \"homeNumber\":\"0288911783\",\r\n      \"workNumber\":\"0288944513\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n\r\n      \r\n    },\r\n     \r\n    \"vitalityPolicyDetails\":{\r\n\r\n    \r\n \r\n  }\r\n  },\r\n    \r\n     \r\n  \"reasonForJoining\":\"Unknown\",\r\n  \"acceptTnC\":\"N\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"transactionId\":\"abcd1234\"\r\n \r\n}"
            },
            "description": "A/C1: Missing T&Cs\r\nGiven that a member did not accept T&Cs\r\nWhen ESB validates member record\r\nThen ESB will send an error message \"missing T&Cs\"\r\nAnd ESB will quit the enrollment process for that member\r\nAND ESB will store the record in VMMp staging table with an error reason"
          },
          "response": []
        },
        {
          "_postman_id": "1ac0099d-f5c7-05e0-187b-2504453a6482",
          "name": "RA-92 : Request in case when user has passed random values in T&Cs",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "",
                  "//Doing a condition to handle the case when the Field does not exist in the response",
                  "try {",
                  "    ",
                  "    //Verifying that the service is returning response code 400 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 400\"] = responseCode.code === 400;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "",
                  "tests[\"Verifying that the request is returning Regsitration Failed when user has not accepted T&C's\"] = body.status === \"registration failed\";",
                  "",
                  "  tests[\"Verifying that the service is returning error when not accepting T&C's \"] = body.invalidFields.acceptTnC === \"cannot proceed as Terms and Conditions were not accepted\";",
                  "}",
                  "",
                  "catch(err) {",
                  "    ",
                  "    tests[\"Invalid field response does not exist\"] = false;",
                  "}",
                  "",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Generating Random Email address to pass into the data so that user duplication does not happen",
                  "function makeEmail() {",
                  "  var strValues = \"qpwoeufbncmakhfga597\";",
                  "  var strEmail = \"\";",
                  "  var strTmp;",
                  "  for (var i = 0; i < 10; i++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strTmp = \"\";",
                  "  strEmail = strEmail + \"@\";",
                  "  for (var j = 0; j < 8; j++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strEmail = strEmail + \".com\"",
                  "  return strEmail;",
                  "}",
                  "",
                  "//Setting up the random email to an environment variable",
                  "postman.setEnvironmentVariable(\"Email\", makeEmail());",
                  "",
                  "//Generating Random 9 digit number to populate in variables to pass Id set 1 requests",
                  "var Txt1 = Math.floor(100000000 + Math.random() * 900000000);",
                  "",
                  "////Setting up the random numeric to an environment variable for AIA_VITALITY_ID",
                  "postman.setEnvironmentVariable(\"AIA_VITALITY_ID\", Txt1);",
                  "",
                  "//Generating Random 9 digit number to populate in variables to pass Id set 1 requests",
                  "var Txt2 = Math.floor(100000000 + Math.random() * 900000000);",
                  "postman.setEnvironmentVariable(\"AIA_CLIENT_NUMBER\", Txt2);",
                  "",
                  "//Generating Random name string to pass in first name ",
                  "var firstName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);",
                  "",
                  "//Setting up the firstName to an environment variable",
                  "postman.setEnvironmentVariable(\"firstName\", firstName);",
                  "",
                  "",
                  "",
                  "",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.ws.enrollMember.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"Last\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"01/01/1970\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{restMemberId}}\",\r\n    \"address\":{\r\n      \"line1\":\"15 harold street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"3144\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"0404040404\",\r\n      \"homeNumber\":\"0288911783\",\r\n      \"workNumber\":\"0288944513\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n\r\n      \r\n    },\r\n     \r\n    \"vitalityPolicyDetails\":{\r\n\r\n    \r\n \r\n  }\r\n  },\r\n    \r\n     \r\n  \"reasonForJoining\":\"Unknown\",\r\n  \"acceptTnC\":\"BHGHDYJ\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"transactionId\":\"abcd1234\"\r\n \r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "ffe35958-5435-1e45-a955-2c62d438e583",
          "name": "RA-147 : Verifying user has been added to UMS and is InActive Status copy",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonObject = xml2Json(responseBody);\r",
                  "\r",
                  "try\r",
                  "{\r",
                  "\r",
                  "\r",
                  "tests[\"Verifying that User status is Not Activated\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userStatus === \"I\";\r",
                  "\r",
                  "tests[\"Verifying that User ID is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userId === environment.Email ;\r",
                  "\r",
                  "tests[\"Verifying that Email is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.email === environment.Email ;\r",
                  "\r",
                  "tests[\"Verifying that First Name is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.givenName === environment.firstName ;\r",
                  "\r",
                  "tests[\"Verifying that Last name is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.surname === environment.lastName ;\r",
                  "\r",
                  "tests[\"Verifying that Member Type is as passed to UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.memberType === \"GROUP\" ;\r",
                  "\r",
                  "tests[\"Verifying that User Groups List is VITALITY_AWAITING_ACTIVATION\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userGroupsList === \"VITALITY_AWAITING_ACTIVATION\" ;\r",
                  "\r",
                  "\r",
                  "\r",
                  "//Setting up the token to an environment variable to be used in subsequent requests\r",
                  "\r",
                  "postman.setEnvironmentVariable(\"umsToken\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.token);\r",
                  "\r",
                  "postman.setEnvironmentVariable(\"aiaClientNumber\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaClientNumber);\r",
                  "postman.setEnvironmentVariable(\"aiaVitalityMemberNumber\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaVitalityMemberNumber);\r",
                  "postman.setEnvironmentVariable(\"aiaDsyPolicyNumber\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaDsyPolicyNumber);\r",
                  "\r",
                  "postman.setEnvironmentVariable(\"aiaVitalityId\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaVitalityId);\r",
                  "\r",
                  "\r",
                  "}\r",
                  "\r",
                  "\r",
                  "catch(err){\r",
                  "    \r",
                  "  tests[\"Data in response does not exist\"] = false;  \r",
                  "\r",
                  "\r",
                  "}\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "{{UmsURL}}/{{UMSContext}}/UsermanagementService",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "text/xml",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:ser=\"http://service.usermanagement.aiaa.com.au\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <ser:searchUserRequest>\n         <source>VITALITY</source>\n         <userType></userType>\n         <userDetails>\n            <userName></userName>\n            <userId></userId>\n            <userDN></userDN>\n            <email>{{Email}}</email>\n            <givenName></givenName>\n            <surname></surname>\n            <webChannel></webChannel>\n            <token></token>\n            <fundIdentifier></fundIdentifier>\n            <eligibilityAssessorEmail></eligibilityAssessorEmail>\n            <activationURL></activationURL>\n            <consentURL></consentURL>\n            <!--1 or more repetitions:-->\n            <userRolesList></userRolesList>\n            <title></title>\n            <dateOfBirth></dateOfBirth>\n            <gender></gender>\n            <addressLine1></addressLine1>\n            <addressLine2></addressLine2>\n            <suburb></suburb>\n            <state></state>\n            <postcode></postcode>\n            <country></country>\n            <mobilePhone></mobilePhone>\n            <workPhone></workPhone>\n            <homePhone></homePhone>\n            <fax></fax>\n            <isRetailLifeInsured></isRetailLifeInsured>\n            <passwordRequestDate></passwordRequestDate>\n            <password></password>\n            <passwordRequestCount></passwordRequestCount>\n            <aiaProposalNumber></aiaProposalNumber>\n            <aiaProposalWritingAdviser></aiaProposalWritingAdviser>\n            <aiaCCAppTnCAcceptedDate></aiaCCAppTnCAcceptedDate>\n            <aiaCCAppTnCVersion></aiaCCAppTnCVersion>\n            <!--1 or more repetitions:-->\n            <userGroupsList></userGroupsList>\n            <!--1 or more repetitions:-->\n            <userGroupsDNList></userGroupsDNList>\n            <memberType></memberType>\n            <residentialPostcode></residentialPostcode>\n            <userStatus></userStatus>\n            <aiaClientNumber></aiaClientNumber>\n            <aiaVitalityMemberNumber></aiaVitalityMemberNumber>\n            <aiaDsyPolicyNumber></aiaDsyPolicyNumber>\n            <aiaVitalityCobrandingInfo></aiaVitalityCobrandingInfo>\n         </userDetails>\n      </ser:searchUserRequest>\n   </soapenv:Body>\n</soapenv:Envelope>\n\n"
            },
            "description": "A/C:\r\nGiven that members activated their membership\r\nWhen ESB gets the action\r\nThen their membership will be activated in UMS"
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "434994ab-d9ff-c0d0-75db-a93beef73e24",
      "name": "RA-147 : ESB to call 'Activate user' in UMS",
      "description": "As a member \r\nI want my membership to be activated\r\nSo that I can use Vitality\r\nThis story covers activating a user in UMS.\r\nA/C:\r\nGiven that members activated their membership\r\nWhen ESB gets the action\r\nThen their membership will be activated in UMS",
      "item": [
        {
          "_postman_id": "0a85ca66-9816-1131-810e-c852607e2fc3",
          "name": "RA-147: Create user in UMS",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 \r",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;\r",
                  "\r",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable \r",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;\r",
                  "var jsonObject = xml2Json(responseBody);\r",
                  "\r",
                  "try{\r",
                  "\r",
                  "//Setting up the token to an environment variable to be used in subsequent requests\r",
                  "postman.setEnvironmentVariable(\"umsToken\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:createUserResponse'].userDetails.token);\r",
                  "\r",
                  "\r",
                  "}\r",
                  "\r",
                  "catch(err){\r",
                  "    \r",
                  "  tests[\"Data in response does not exist\"] = false;  \r",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Generating Random Email address to pass into the data so that user duplication does not happen",
                  "function makeEmail() {",
                  "  var strValues = \"qwertyhgfdaszxc2873\";",
                  "  var strEmail = \"\";",
                  "  var strTmp;",
                  "  for (var i = 0; i < 10; i++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strTmp = \"\";",
                  "  strEmail = strEmail + \"@\";",
                  "  for (var j = 0; j < 8; j++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strEmail = strEmail + \".com\";",
                  "  return strEmail;",
                  "}",
                  "//Setting up the random email to an environment variable",
                  "postman.setEnvironmentVariable(\"Email\", makeEmail());",
                  "",
                  "//Setting up the lastName to an environment variable",
                  "var lastName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 8);",
                  "",
                  "//Setting up the random email to an environment variable",
                  "postman.setEnvironmentVariable(\"lastName\", lastName);",
                  "",
                  "//Generating Random name string to pass in first name ",
                  "var firstName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);",
                  "",
                  "//Setting up the firstName to an environment variable",
                  "postman.setEnvironmentVariable(\"firstName\", firstName);",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "{{UmsURL}}/{{UMSContext}}/UsermanagementService",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "text/xml",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:ser=\"http://service.usermanagement.aiaa.com.au\">\r\n \r\n<soapenv:Header/>\r\n<soapenv:Body>\r\n    <ser:createUserRequest>\r\n        <source>VITALITY</source>\r\n        <userDetails>\r\n            <userName>{{firstName}}</userName>\r\n            <userId>{{Email}}</userId>\r\n            <email>{{Email}}</email>\r\n            <givenName>{{firstName}}</givenName>\r\n            <surname>{{lastName}}</surname>\r\n            <memberType>GROUP</memberType>\r\n            <aiaClientNumber></aiaClientNumber>\r\n            <aiaVitalityMemberNumber></aiaVitalityMemberNumber>\r\n        </userDetails>\r\n    </ser:createUserRequest>\r\n</soapenv:Body>\r\n</soapenv:Envelope>"
            },
            "description": "As a member \r\nI want my membership to be activated\r\nSo that I can use Vitality\r\nThis story covers activating a user in UMS.\r\nA/C:\r\nGiven that members activated their membership\r\nWhen ESB gets the action\r\nThen their membership will be activated in UMS"
          },
          "response": []
        },
        {
          "_postman_id": "2ed134e2-1a26-a9f8-d890-b47879d8b58c",
          "name": "RA-147 : Activating user by ESB",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{testPackageURL}}/rest/restTestPackage.ws.activateUMSUser",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n                \"email\":\"{{Email}}\"\r\n}\r\n"
            },
            "description": "A/C:\r\nGiven that members activated their membership\r\nWhen ESB gets the action\r\nThen their membership will be activated in UMS"
          },
          "response": []
        },
        {
          "_postman_id": "6a5372a9-ea30-4a5c-dd85-b00e347b5b3f",
          "name": "RA-147: Verifying member has been activated",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonObject = xml2Json(responseBody);\r",
                  "\r",
                  "\r",
                  "try{\r",
                  "\r",
                  "\r",
                  "tests[\"Verifying that User ID is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userId === environment.Email ;\r",
                  "\r",
                  "tests[\"Verifying that Email is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.email === environment.Email ;\r",
                  "\r",
                  "tests[\"Verifying that First Name is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.givenName === environment.firstName ;\r",
                  "\r",
                  "tests[\"Verifying that Last name is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.surname === environment.lastName ;\r",
                  "\r",
                  "tests[\"Verifying that User status is Active\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userStatus === \"A\" ;\r",
                  "\r",
                  "tests[\"Verifying that Member Type is as passed to UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.memberType === \"GROUP\" ;\r",
                  "\r",
                  "\r",
                  "tests[\"Verifying that User Groups List is VITALITY_ACTIVE\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userGroupsList === \"VITALITY_ACTIVE\" ;\r",
                  "\r",
                  "\r",
                  "\r",
                  "}\r",
                  "\r",
                  "catch(err){\r",
                  "    \r",
                  "  tests[\"Data in response does not exist\"] = false;  \r",
                  "}\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "postman.clearEnvironmentVariable(\"umsToken\");"
                ]
              }
            }
          ],
          "request": {
            "url": "{{UmsURL}}/{{UMSContext}}/UsermanagementService",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "text/xml",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:ser=\"http://service.usermanagement.aiaa.com.au\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <ser:searchUserRequest>\r\n         <source>VITALITY</source>\r\n         <userType></userType>\r\n         <userDetails>\r\n            <userName></userName>\r\n            <userId></userId>\r\n            <userDN></userDN>\r\n            <email>{{Email}}</email>\r\n            <givenName></givenName>\r\n            <surname></surname>\r\n            <webChannel></webChannel>\r\n            <token></token>\r\n            <fundIdentifier></fundIdentifier>\r\n            <eligibilityAssessorEmail></eligibilityAssessorEmail>\r\n            <activationURL></activationURL>\r\n            <consentURL></consentURL>\r\n            <!--1 or more repetitions:-->\r\n            <userRolesList></userRolesList>\r\n            <title></title>\r\n            <dateOfBirth></dateOfBirth>\r\n            <gender></gender>\r\n            <addressLine1></addressLine1>\r\n            <addressLine2></addressLine2>\r\n            <suburb></suburb>\r\n            <state></state>\r\n            <postcode></postcode>\r\n            <country></country>\r\n            <mobilePhone></mobilePhone>\r\n            <workPhone></workPhone>\r\n            <homePhone></homePhone>\r\n            <fax></fax>\r\n            <isRetailLifeInsured></isRetailLifeInsured>\r\n            <passwordRequestDate></passwordRequestDate>\r\n            <password></password>\r\n            <passwordRequestCount></passwordRequestCount>\r\n            <aiaProposalNumber></aiaProposalNumber>\r\n            <aiaProposalWritingAdviser></aiaProposalWritingAdviser>\r\n            <aiaCCAppTnCAcceptedDate></aiaCCAppTnCAcceptedDate>\r\n            <aiaCCAppTnCVersion></aiaCCAppTnCVersion>\r\n            <!--1 or more repetitions:-->\r\n            <userGroupsList></userGroupsList>\r\n            <!--1 or more repetitions:-->\r\n            <userGroupsDNList></userGroupsDNList>\r\n            <memberType></memberType>\r\n            <residentialPostcode></residentialPostcode>\r\n            <userStatus></userStatus>\r\n            <aiaClientNumber></aiaClientNumber>\r\n            <aiaVitalityMemberNumber></aiaVitalityMemberNumber>\r\n            <aiaDsyPolicyNumber></aiaDsyPolicyNumber>\r\n            <aiaVitalityCobrandingInfo></aiaVitalityCobrandingInfo>\r\n         </userDetails>\r\n      </ser:searchUserRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>\r\n\r\n"
            },
            "description": ""
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "47228bc8-11c4-8f7b-141e-2bb6083b183f",
      "name": "RA-264 Returning error message for failed enrolment scenarios",
      "description": "As REST Member\r\nI want to know the reason for invalid member record\r\nSo that I can fix it",
      "item": [
        {
          "_postman_id": "c2206fea-1010-9838-ec80-fee705872752",
          "name": "RA-153: Enrolling a Member - New Process",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "tests[\"Verifying that Enrolment is successfull\"] =  body.status === \"Data Accepted\";"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Generating Random Email address to pass into the data so that user duplication does not happen",
                  "function makeEmail() {",
                  "  var strValues = \"qpotvghysbnxui56z\";",
                  "  var strEmail = \"\";",
                  "  var strTmp;",
                  "  for (var i = 0; i < 10; i++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strTmp = \"\";",
                  "  strEmail = strEmail + \"@\";",
                  "  for (var j = 0; j < 8; j++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strEmail = strEmail + \"esbpii.com\";",
                  "  return strEmail;",
                  "}",
                  "",
                  "//Setting up the random email to an environment variable",
                  "postman.setEnvironmentVariable(\"Email\", makeEmail());",
                  "",
                  "var firstName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);",
                  "",
                  "//Setting up the firstName to an environment variable",
                  "postman.setEnvironmentVariable(\"firstName\", firstName);",
                  "",
                  "var lastName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 8);",
                  "",
                  "//Setting up the lastName to an environment variable",
                  "postman.setEnvironmentVariable(\"lastName\", lastName);",
                  "",
                  "//Incrementing and Setting up the memberID to an environment variable",
                  "// var memberIdNumber = parseInt(environment.memberIdNumber)+1;",
                  "var memberIdNumber = Date.now();",
                  "postman.setEnvironmentVariable(\"memberIdNumber\", memberIdNumber);",
                  "postman.setEnvironmentVariable(\"memberID\", \"RA\"+memberIdNumber.toString());"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"test street1\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
            },
            "description": ""
          },
          "response": [
            {
              "id": "2f4df4c4-d99a-2b65-0cbb-03f0a4d6e5de",
              "name": "response 1",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"test street1\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:13:56 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "215",
              "body": "{\"token\":\"39b8615a-307d-419f-a503-4d4fa6c7021d\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "44838779-071e-07fc-80c5-a3cb708c06f4",
              "name": "response 2",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"test street1\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:07 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "237",
              "body": "{\"token\":\"a77eb61e-5dd3-4680-931e-49122ab21153\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "44bb5fc0-cdf2-9476-0f51-eab735321b74",
              "name": "response 3",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"test street1\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:17 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "1830",
              "body": "{\"token\":\"1ed2d16e-9fc9-46ed-af8e-49e5b5207e79\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "491dc4f2-209d-dfa3-3076-7e6f7a955940",
              "name": "error",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"test street1\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "key": "Connection",
                  "value": "Keep-Alive",
                  "name": "Connection",
                  "description": ""
                },
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "name": "Content-Type",
                  "description": ""
                },
                {
                  "key": "Date",
                  "value": "Wed, 14 Dec 2016 00:42:55 GMT",
                  "name": "Date",
                  "description": ""
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked",
                  "name": "Transfer-Encoding",
                  "description": ""
                },
                {
                  "key": "X-Backside-Transport",
                  "value": "OK OK",
                  "name": "X-Backside-Transport",
                  "description": ""
                },
                {
                  "key": "X-Client-IP",
                  "value": "10.61.38.184",
                  "name": "X-Client-IP",
                  "description": ""
                },
                {
                  "key": "X-Global-Transaction-ID",
                  "value": "348720",
                  "name": "X-Global-Transaction-ID",
                  "description": ""
                }
              ],
              "cookie": [],
              "responseTime": "1537",
              "body": "{\"response\":{}}"
            }
          ]
        },
        {
          "_postman_id": "f75b4b31-d35e-57e0-5722-bc5b079e0f14",
          "name": "RA-93 : Relationship Name format is invalid",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 400 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 400\"] = responseCode.code === 400;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "try{",
                  "    tests[\"Verifying that the status is 'registration failed'\"] = body.status === \"registration failed\";",
                  "    tests[\"Verifying that the failure reason is 'Invalid Fields'\"] = body.failureReason === \"Invalid Fields\";",
                  "    tests[\"Verifying that the invalid fields are listed in the response\"] = body.invalidFields.relationshipName === \"Relationship Name must be less than or equal to 50 characters\";",
                  "}",
                  "catch(err){",
                  "  tests[\"Data in response does not exist\"] = false;  ",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "",
                  "//Generating Random Email address to pass into the data so that user duplication does not happen",
                  "function makeEmail() {",
                  "  var strValues = \"qpotvghysbnxui56z\";",
                  "  var strEmail = \"\";",
                  "  var strTmp;",
                  "  for (var i = 0; i < 10; i++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strTmp = \"\";",
                  "  strEmail = strEmail + \"@\";",
                  "  for (var j = 0; j < 8; j++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strEmail = strEmail + \"esbpii.com\";",
                  "  return strEmail;",
                  "}",
                  "",
                  "",
                  "//Setting up the random email to an environment variable",
                  "postman.setEnvironmentVariable(\"Email\", makeEmail());",
                  "console.log(\"Email: \"+environment.Email);",
                  "",
                  "var firstName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);",
                  "",
                  "//Setting up the firstName to an environment variable",
                  "postman.setEnvironmentVariable(\"firstName\", firstName);",
                  "",
                  "var lastName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 8);",
                  "",
                  "//Setting up the lastName to an environment variable",
                  "postman.setEnvironmentVariable(\"lastName\", lastName);",
                  "",
                  "",
                  "//Incrementing and Setting up the memberID to an environment variable",
                  "// var memberIdNumber = parseInt(environment.memberIdNumber)+1;",
                  "var memberIdNumber = Date.now();",
                  "postman.setEnvironmentVariable(\"memberIdNumber\", memberIdNumber);",
                  "postman.setEnvironmentVariable(\"memberID\", \"RA\"+memberIdNumber.toString());"
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"GRDDESTSGRDGRDDESTSDESTSGRDGRDDESTSDESGRDDESTSTSGRDDESTS\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "9483e0e0-a8e2-22cf-57a8-0fa45cc34e79",
          "name": "RA-93 : Verify that Relationship Name is stored as blank in VMMP stage DB with failure reason",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "try{",
                  "    tests[\"Verifying that Status in staging VMMP DB is Invalid\"] = body.getMemberInfoStagingOutput.results[0].STATUS === \"INVALID\";",
                  "    tests[\"Verifying that Failure reason in staging VMMP DB is Relationship ID has invalid characters\"] = body.getMemberInfoStagingOutput.results[0].FAILURE_REASON === \"relationshipName-Relationship Name must be less than or equal to 50 characters\";",
                  "    tests[\"Verifying that Relationship ID in staging VMMP DB is null\"] = body.getMemberInfoStagingOutput.results[0].RELATIONSHIP_NAME === null;",
                  "}",
                  "catch(err){",
                  "  tests[\"Data in response does not exist\"] = false;  ",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "{{StageDB}}",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"email\":\"{{Email}}\"} "
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "967659a9-0d80-7cb0-2842-614e434684c4",
          "name": "RA-93 : Relationship Name  is null",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 400 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 400\"] = responseCode.code === 400;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "try{",
                  "    tests[\"Verifying that the status is 'registration failed'\"] = body.status === \"registration failed\";",
                  "    tests[\"Verifying that the failure reason is 'Invalid Fields'\"] = body.failureReason === \"Invalid Fields\";",
                  "    tests[\"Verifying that the invalid fields are listed in the response\"] = body.invalidFields.relationshipName === \"Relationship Name must exist\";",
                  "}",
                  "catch(err){",
                  "  tests[\"Data in response does not exist\"] = false;  ",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "",
                  "//Generating Random Email address to pass into the data so that user duplication does not happen",
                  "function makeEmail() {",
                  "  var strValues = \"qpotvghysbnxui56z\";",
                  "  var strEmail = \"\";",
                  "  var strTmp;",
                  "  for (var i = 0; i < 10; i++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strTmp = \"\";",
                  "  strEmail = strEmail + \"@\";",
                  "  for (var j = 0; j < 8; j++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strEmail = strEmail + \"esbpii.com\";",
                  "  return strEmail;",
                  "}",
                  "",
                  "",
                  "//Setting up the random email to an environment variable",
                  "postman.setEnvironmentVariable(\"Email\", makeEmail());",
                  "console.log(\"Email: \"+environment.Email);",
                  "",
                  "var firstName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);",
                  "",
                  "//Setting up the firstName to an environment variable",
                  "postman.setEnvironmentVariable(\"firstName\", firstName);",
                  "",
                  "var lastName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 8);",
                  "",
                  "//Setting up the lastName to an environment variable",
                  "postman.setEnvironmentVariable(\"lastName\", lastName);",
                  "",
                  "",
                  "//Incrementing and Setting up the memberID to an environment variable",
                  "// var memberIdNumber = parseInt(environment.memberIdNumber)+1;",
                  "var memberIdNumber = Date.now();",
                  "postman.setEnvironmentVariable(\"memberIdNumber\", memberIdNumber);",
                  "postman.setEnvironmentVariable(\"memberID\", \"RA\"+memberIdNumber.toString());"
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": null,\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "f2ec10aa-1185-5b7a-3e39-5618a0beb32b",
          "name": "RA-93 : Verify that Relationship Name is stored as blank in VMMP stage DB with failure reason",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "try{",
                  "    tests[\"Verifying that Status in staging VMMP DB is Invalid\"] = body.getMemberInfoStagingOutput.results[0].STATUS === \"INVALID\";",
                  "    tests[\"Verifying that Failure reason in staging VMMP DB is Relationship ID has invalid characters\"] = body.getMemberInfoStagingOutput.results[0].FAILURE_REASON === \"relationshipName-Relationship Name must exist\";",
                  "    tests[\"Verifying that Relationship ID in staging VMMP DB is null\"] = body.getMemberInfoStagingOutput.results[0].RELATIONSHIP_NAME === null;",
                  "}",
                  "catch(err){",
                  "  tests[\"Data in response does not exist\"] = false;  ",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "{{StageDB}}",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"email\":\"{{Email}}\"} "
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "df937f05-fc69-ae68-78bf-e3ce934ef823",
          "name": "RA-93 : Relationship Name  is empty",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 400 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 400\"] = responseCode.code === 400;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "try{",
                  "    tests[\"Verifying that the status is 'registration failed'\"] = body.status === \"registration failed\";",
                  "    tests[\"Verifying that the failure reason is 'Invalid Fields'\"] = body.failureReason === \"Invalid Fields\";",
                  "    tests[\"Verifying that the invalid fields are listed in the response\"] = body.invalidFields.relationshipName === \"Relationship Name must exist\";",
                  "}",
                  "catch(err){",
                  "  tests[\"Data in response does not exist\"] = false;  ",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "",
                  "//Generating Random Email address to pass into the data so that user duplication does not happen",
                  "function makeEmail() {",
                  "  var strValues = \"qpotvghysbnxui56z\";",
                  "  var strEmail = \"\";",
                  "  var strTmp;",
                  "  for (var i = 0; i < 10; i++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strTmp = \"\";",
                  "  strEmail = strEmail + \"@\";",
                  "  for (var j = 0; j < 8; j++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strEmail = strEmail + \"esbpii.com\";",
                  "  return strEmail;",
                  "}",
                  "",
                  "",
                  "//Setting up the random email to an environment variable",
                  "postman.setEnvironmentVariable(\"Email\", makeEmail());",
                  "console.log(\"Email: \"+environment.Email);",
                  "",
                  "var firstName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);",
                  "",
                  "//Setting up the firstName to an environment variable",
                  "postman.setEnvironmentVariable(\"firstName\", firstName);",
                  "",
                  "var lastName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 8);",
                  "",
                  "//Setting up the lastName to an environment variable",
                  "postman.setEnvironmentVariable(\"lastName\", lastName);",
                  "",
                  "",
                  "//Incrementing and Setting up the memberID to an environment variable",
                  "// var memberIdNumber = parseInt(environment.memberIdNumber)+1;",
                  "var memberIdNumber = Date.now();",
                  "postman.setEnvironmentVariable(\"memberIdNumber\", memberIdNumber);",
                  "postman.setEnvironmentVariable(\"memberID\", \"RA\"+memberIdNumber.toString());"
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "cf842b84-f100-9405-fe46-c0ddfa403894",
          "name": "RA-93 : Verify that Relationship Name is stored as blank in VMMP stage DB with failure reason",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "try{",
                  "    tests[\"Verifying that Status in staging VMMP DB is Invalid\"] = body.getMemberInfoStagingOutput.results[0].STATUS === \"INVALID\";",
                  "    tests[\"Verifying that Failure reason in staging VMMP DB is Relationship ID has invalid characters\"] = body.getMemberInfoStagingOutput.results[0].FAILURE_REASON === \"relationshipName-Relationship Name must exist\";",
                  "    tests[\"Verifying that Relationship ID in staging VMMP DB is null\"] = body.getMemberInfoStagingOutput.results[0].RELATIONSHIP_NAME === null;",
                  "}",
                  "catch(err){",
                  "  tests[\"Data in response does not exist\"] = false;  ",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "{{StageDB}}",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"email\":\"{{Email}}\"} "
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "49f8a4e9-55d5-db1e-4be5-03fdfe7aa17d",
          "name": "RA-93 : Relationship Name is incorrect",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 400 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 400\"] = responseCode.code === 400;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "try{",
                  "    tests[\"Verifying that the status is 'registration failed'\"] = body.status === \"registration failed\";",
                  "    tests[\"Verifying that the failure reason is 'An invalid relationship name has been sent.'\"] = body.failureReason === \"An invalid relationship name has been sent.\";",
                  "}",
                  "catch(err){",
                  "  tests[\"Data in response does not exist\"] = false;  ",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "",
                  "//Generating Random Email address to pass into the data so that user duplication does not happen",
                  "function makeEmail() {",
                  "  var strValues = \"qpotvghysbnxui56z\";",
                  "  var strEmail = \"\";",
                  "  var strTmp;",
                  "  for (var i = 0; i < 10; i++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strTmp = \"\";",
                  "  strEmail = strEmail + \"@\";",
                  "  for (var j = 0; j < 8; j++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strEmail = strEmail + \"esbpii.com\";",
                  "  return strEmail;",
                  "}",
                  "",
                  "",
                  "//Setting up the random email to an environment variable",
                  "postman.setEnvironmentVariable(\"Email\", makeEmail());",
                  "console.log(\"Email: \"+environment.Email);",
                  "",
                  "var firstName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);",
                  "",
                  "//Setting up the firstName to an environment variable",
                  "postman.setEnvironmentVariable(\"firstName\", firstName);",
                  "",
                  "var lastName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 8);",
                  "",
                  "//Setting up the lastName to an environment variable",
                  "postman.setEnvironmentVariable(\"lastName\", lastName);",
                  "",
                  "",
                  "//Incrementing and Setting up the memberID to an environment variable",
                  "// var memberIdNumber = parseInt(environment.memberIdNumber)+1;",
                  "var memberIdNumber = Date.now();",
                  "postman.setEnvironmentVariable(\"memberIdNumber\", memberIdNumber);",
                  "postman.setEnvironmentVariable(\"memberID\", \"RA\"+memberIdNumber.toString());"
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"notARelationship\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "0471d014-2234-68f1-73c2-c5bf5dcad272",
          "name": "RA-93 : Verify that Relationship Name is stored as is in VMMP stage DB with failure reason",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "try{",
                  "    tests[\"Verifying that Status in staging VMMP DB is Invalid\"] = body.getMemberInfoStagingOutput.results[0].STATUS === \"INVALID\";",
                  "    tests[\"Verifying that Failure reason in staging VMMP DB is INVALID_RELATIONSHIP\"] = body.getMemberInfoStagingOutput.results[0].FAILURE_REASON === \"INVALID_RELATIONSHIP\";",
                  "    tests[\"Verifying that Relationship Name in staging VMMP DB is not null\"] = body.getMemberInfoStagingOutput.results[0].RELATIONSHIP_NAME === \"notARelationship\";",
                  "}",
                  "catch(err){",
                  "  tests[\"Data in response does not exist\"] = false;  ",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "{{StageDB}}",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"email\":\"{{Email}}\"} "
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "98338454-ebf0-4777-4ca4-88a1f23d7d78",
          "name": "RA-93 : Date Of Birth is null",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 400 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 400\"] = responseCode.code === 400;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "try{",
                  "    tests[\"Verifying that the status is 'registration failed'\"] = body.status === \"registration failed\";",
                  "    tests[\"Verifying that the failure reason is 'Invalid Fields'\"] = body.failureReason === \"Invalid Fields\";",
                  "    tests[\"Verifying that the invalid fields are listed in the response\"] = body.invalidFields.dateOfBirth === \"Date of birth is required. Please add date of birth and try again.\";",
                  "}",
                  "catch(err){",
                  "  tests[\"Data in response does not exist\"] = false;  ",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "",
                  "//Generating Random Email address to pass into the data so that user duplication does not happen",
                  "function makeEmail() {",
                  "  var strValues = \"qpotvghysbnxui56z\";",
                  "  var strEmail = \"\";",
                  "  var strTmp;",
                  "  for (var i = 0; i < 10; i++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strTmp = \"\";",
                  "  strEmail = strEmail + \"@\";",
                  "  for (var j = 0; j < 8; j++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strEmail = strEmail + \"esbpii.com\";",
                  "  return strEmail;",
                  "}",
                  "",
                  "",
                  "//Setting up the random email to an environment variable",
                  "postman.setEnvironmentVariable(\"Email\", makeEmail());",
                  "console.log(\"Email: \"+environment.Email);",
                  "",
                  "var firstName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);",
                  "",
                  "//Setting up the firstName to an environment variable",
                  "postman.setEnvironmentVariable(\"firstName\", firstName);",
                  "",
                  "var lastName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 8);",
                  "",
                  "//Setting up the lastName to an environment variable",
                  "postman.setEnvironmentVariable(\"lastName\", lastName);",
                  "",
                  "",
                  "//Incrementing and Setting up the memberID to an environment variable",
                  "// var memberIdNumber = parseInt(environment.memberIdNumber)+1;",
                  "var memberIdNumber = Date.now();",
                  "postman.setEnvironmentVariable(\"memberIdNumber\", memberIdNumber);",
                  "postman.setEnvironmentVariable(\"memberID\", \"RA\"+memberIdNumber.toString());"
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":null,\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"test street1\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "d2a53111-ffdb-6220-0d75-cb0202033f6f",
          "name": "RA-93 : Verify that Date Of Birth is stored as blank in VMMP stage DB with relevent failure reason stored",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "try{",
                  "    tests[\"Verifying that Status in staging VMMP DB is Invalid\"] = body.getMemberInfoStagingOutput.results[0].STATUS === \"INVALID\";",
                  "    tests[\"Verifying that Failure reason in staging VMMP DB is dateOfBirth-Date of birth is required. Please add date of birth and try again.\"] = body.getMemberInfoStagingOutput.results[0].FAILURE_REASON === \"dateOfBirth-Date of birth is required. Please add date of birth and try again.\";",
                  "    tests[\"Verifying that DOB in staging VMMP DB is null\"] = body.getMemberInfoStagingOutput.results[0].DOB === null;",
                  "}",
                  "catch(err){",
                  "  tests[\"Data in response does not exist\"] = false;  ",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "{{StageDB}}",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"email\":\"{{Email}}\"} "
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "33451516-c75f-a768-9bc1-cd0901eb90c7",
          "name": "RA-93 : Date Of Birth format is invalid",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 400 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 400\"] = responseCode.code === 400;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "try{",
                  "    tests[\"Verifying that the status is 'registration failed'\"] = body.status === \"registration failed\";",
                  "    tests[\"Verifying that the failure reason is 'Invalid Fields'\"] = body.failureReason === \"Invalid Fields\";",
                  "    tests[\"Verifying that the invalid fields are listed in the response\"] = body.invalidFields.dateOfBirth === \"Date of birth format is incorrect. Please ensure date of birth follows the format of dd/MM/yyyy.\";",
                  "}",
                  "catch(err){",
                  "  tests[\"Data in response does not exist\"] = false;  ",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Generating Random Email address to pass into the data so that user duplication does not happen",
                  "function makeEmail() {",
                  "  var strValues = \"qpwoeufbncmakhfga597\";",
                  "  var strEmail = \"\";",
                  "  var strTmp;",
                  "  for (var i = 0; i < 10; i++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strTmp = \"\";",
                  "  strEmail = strEmail + \"@\";",
                  "  for (var j = 0; j < 8; j++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strEmail = strEmail + \".com\"",
                  "  return strEmail;",
                  "}",
                  "",
                  "//Setting up the random email to an environment variable",
                  "postman.setEnvironmentVariable(\"Email\", makeEmail());",
                  "",
                  "//Generating Random 9 digit number to populate in variables to pass Id set 1 requests",
                  "var Txt1 = Math.floor(100000000 + Math.random() * 900000000);",
                  "",
                  "////Setting up the random numeric to an environment variable for AIA_VITALITY_ID",
                  "postman.setEnvironmentVariable(\"AIA_VITALITY_ID\", Txt1);",
                  "",
                  "//Generating Random 9 digit number to populate in variables to pass Id set 1 requests",
                  "var Txt2 = Math.floor(100000000 + Math.random() * 900000000);",
                  "postman.setEnvironmentVariable(\"AIA_CLIENT_NUMBER\", Txt2);",
                  "",
                  "//Generating Random name string to pass in first name ",
                  "var firstName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);",
                  "",
                  "//Setting up the firstName to an environment variable",
                  "postman.setEnvironmentVariable(\"firstName\", firstName);",
                  "",
                  "",
                  "",
                  "",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"blahblahblah\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"test street1\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "287e2651-1dc2-f94c-da4a-4a986e999be1",
          "name": "RA-93 : Verify that Date Of Birth is stored as is in VMMP stage DB with relevent failure reason stored copy",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "try{",
                  "    tests[\"Verifying that Status in staging VMMP DB is Invalid\"] = body.getMemberInfoStagingOutput.results[0].STATUS === \"INVALID\";",
                  "    tests[\"Verifying that Failure reason in staging VMMP DB is Relationship ID has invalid characters\"] = body.getMemberInfoStagingOutput.results[0].FAILURE_REASON === \"dateOfBirth-Date of birth format is incorrect. Please ensure date of birth follows the format of dd/MM/yyyy.\";",
                  "    tests[\"Verifying that DOB in staging VMMP DB is null\"] = body.getMemberInfoStagingOutput.results[0].DOB === null;",
                  "}",
                  "catch(err){",
                  "  tests[\"Data in response does not exist\"] = false;  ",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "{{StageDB}}",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"email\":\"{{Email}}\"} "
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "966e781e-ba87-68e1-8262-7b5b1b94d280",
          "name": "RA-93 : Address Line 1 has invalid characters",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 400 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 400\"] = responseCode.code === 400;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "try{",
                  "    tests[\"Verifying that the status is 'registration failed'\"] = body.status === \"registration failed\";",
                  "    tests[\"Verifying that the failure reason is 'Invalid Fields'\"] = body.failureReason === \"Invalid Fields\";",
                  "    tests[\"Verifying that the invalid fields are listed in the response\"] = body.invalidFields.addrLine1 === \"Address line 1 has invalid characters\";",
                  "}",
                  "catch(err){",
                  "  tests[\"Data in response does not exist\"] = false;  ",
                  "}",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Generating Random Email address to pass into the data so that user duplication does not happen",
                  "function makeEmail() {",
                  "  var strValues = \"qpotvghysbnxui56z\";",
                  "  var strEmail = \"\";",
                  "  var strTmp;",
                  "  for (var i = 0; i < 10; i++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strTmp = \"\";",
                  "  strEmail = strEmail + \"@\";",
                  "  for (var j = 0; j < 8; j++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strEmail = strEmail + \"esbpii.com\";",
                  "  return strEmail;",
                  "}",
                  "",
                  "//Setting up the random email to an environment variable",
                  "postman.setEnvironmentVariable(\"Email\", makeEmail());",
                  "",
                  "var firstName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);",
                  "",
                  "//Setting up the firstName to an environment variable",
                  "postman.setEnvironmentVariable(\"firstName\", firstName);",
                  "",
                  "var lastName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 8);",
                  "",
                  "//Setting up the lastName to an environment variable",
                  "postman.setEnvironmentVariable(\"lastName\", lastName);",
                  "",
                  "",
                  "//Incrementing and Setting up the memberID to an environment variable",
                  "// var memberIdNumber = parseInt(environment.memberIdNumber)+1;",
                  "var memberIdNumber = Date.now();",
                  "postman.setEnvironmentVariable(\"memberIdNumber\", memberIdNumber);",
                  "postman.setEnvironmentVariable(\"memberID\", \"RA\"+memberIdNumber.toString());"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"Last\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"01/01/1970\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"4*&^%)&((&@$@nt Road\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}\r\n"
            },
            "description": "Given that an invalid record was received by ESB \r\nWhen ESB identifies an invalid record,\r\nThen it will store it in VMMP staging DB in the following manner:\r\n1 - The invalid field will be left blank\r\n2 - The invalid value and the reason will be captured in the reason field\r\n"
          },
          "response": []
        },
        {
          "_postman_id": "aeb3395b-e99c-480f-06ff-b26e14fdd4d6",
          "name": "RA-93 : Verify that Address Line 1 is stored as blank in VMMP stage with relevent failure reason stored",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "try{",
                  "    tests[\"Verifying that Status in staging VMMP DB is Invalid\"] = body.getMemberInfoStagingOutput.results[0].STATUS === \"INVALID\";",
                  "    tests[\"Verifying that Failure reason in staging VMMP DB is addressLine1 has invalid characters\"] = body.getMemberInfoStagingOutput.results[0].FAILURE_REASON === \"addrLine1-Address line 1 has invalid characters\";",
                  "    tests[\"Verifying that addressLine1 in staging VMMP DB is null\"] = body.getMemberInfoStagingOutput.results[0].MAILING_ADDRESS1 === null; ",
                  "}",
                  "catch(err){",
                  "    tests[\"Data does not exist\"] = false;",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "{{StageDB}}",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"email\":\"{{Email}}\"} "
            },
            "description": ""
          },
          "response": [
            {
              "id": "db3cac08-0a8b-93c4-6d56-ba2e3cd492e6",
              "name": "response for esb",
              "originalRequest": {
                "url": "{{StageDB}}",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\"email\":\"{{Email}}\"} "
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "javascript",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Content-Length",
                  "name": "Content-Length",
                  "value": "1001"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json; charset=UTF-8"
                }
              ],
              "cookie": [
                {
                  "expires": "Invalid Date",
                  "httpOnly": false,
                  "domain": "10.61.38.165",
                  "path": "/",
                  "secure": false,
                  "value": "",
                  "key": "ssnid"
                }
              ],
              "responseTime": "35",
              "body": "{\"email\":\"hu75m5appa@m95anefu.com\",\"getMemberInfoStagingOutput\":{\"results\":[{\"ID\":101517,\"TITLE\":\"Mr\",\"FIRST_NAME\":\"gwlcgefblm\",\"LAST_NAME\":\"Last\",\"GENDER\":\"M\",\"DOB\":\"1970-01-01\",\"EMAIL\":\"hu75m5appa@m95anefu.com\",\"MOBILE\":\"0404040404\",\"MAILING_ADDRESS1\":null,\"MAILING_ADDRESS2\":null,\"MAILING_CITY\":\"Wiseman's Ferry\",\"MAILING_STATE\":\"VIC\",\"MAILING_POSTCODE\":\"3144\",\"RESIDENTIAL_ADDRESS1\":null,\"RESIDENTIAL_ADDRESS2\":null,\"RESIDENTIAL_CITY\":null,\"RESIDENTIAL_STATE\":null,\"RESIDENTIAL_POSTCODE\":null,\"MEMBER_TYPE\":\"GROUP\",\"ADVISER_CODE\":null,\"PAYING_POLICY_NUMBER\":null,\"WORK_PHONE\":\"0288944513\",\"HOME_PHONE\":\"0288911783\",\"CREATED_DATE\":\"2016-10-03 09:47:05.866504\",\"POLICY_ISSUE_DATE\":null,\"VITALITY_POLICY_STATUS\":null,\"EFFECTIVE_DATE\":null,\"INFORCE_POLICY_INDICATOR\":null,\"RELATIONSHIP_NAME\":\"{{relationshipName}}\",\"AIA_CLIENT_NUMBER\":null,\"AIA_VITALITY_ID\":null,\"PROCESSED_FILE\":null,\"NOMINATION_ID\":\"abcd1234\",\"STATUS\":\"INVALID\",\"FAILURE_REASON\":\"addrLine1-addressLine1 has invalid characters\",\"REC_TYPE\":null}]}}"
            }
          ]
        },
        {
          "_postman_id": "dbe2429a-39b5-9ef4-f7a4-8604ea1d73eb",
          "name": "RA-93 : Address Line 1 has greater than 100 characters",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 400 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 400\"] = responseCode.code === 400;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "try{",
                  "    tests[\"Verifying that the status is 'registration failed'\"] = body.status === \"registration failed\";",
                  "    tests[\"Verifying that the failure reason is 'Invalid Fields'\"] = body.failureReason === \"Invalid Fields\";",
                  "    tests[\"Verifying that the invalid fields are listed in the response\"] = body.invalidFields.addrLine1 === \"Address line 1 must be less than or equal to 100 characters\";",
                  "}",
                  "catch(err){",
                  "  tests[\"Data in response does not exist\"] = false;  ",
                  "}",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Generating Random Email address to pass into the data so that user duplication does not happen",
                  "function makeEmail() {",
                  "  var strValues = \"qpotvghysbnxui56z\";",
                  "  var strEmail = \"\";",
                  "  var strTmp;",
                  "  for (var i = 0; i < 10; i++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strTmp = \"\";",
                  "  strEmail = strEmail + \"@\";",
                  "  for (var j = 0; j < 8; j++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strEmail = strEmail + \"esbpii.com\";",
                  "  return strEmail;",
                  "}",
                  "",
                  "//Setting up the random email to an environment variable",
                  "postman.setEnvironmentVariable(\"Email\", makeEmail());",
                  "",
                  "var firstName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);",
                  "",
                  "//Setting up the firstName to an environment variable",
                  "postman.setEnvironmentVariable(\"firstName\", firstName);",
                  "",
                  "var lastName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 8);",
                  "",
                  "//Setting up the lastName to an environment variable",
                  "postman.setEnvironmentVariable(\"lastName\", lastName);",
                  "",
                  "",
                  "//Incrementing and Setting up the memberID to an environment variable",
                  "// var memberIdNumber = parseInt(environment.memberIdNumber)+1;",
                  "var memberIdNumber = Date.now();",
                  "postman.setEnvironmentVariable(\"memberIdNumber\", memberIdNumber);",
                  "postman.setEnvironmentVariable(\"memberID\", \"RA\"+memberIdNumber.toString());"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"Last\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"01/01/1970\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"12345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}\r\n"
            },
            "description": "Given that an invalid record was received by ESB \r\nWhen ESB identifies an invalid record,\r\nThen it will store it in VMMP staging DB in the following manner:\r\n1 - The invalid field will be left blank\r\n2 - The invalid value and the reason will be captured in the reason field\r\n"
          },
          "response": []
        },
        {
          "_postman_id": "99de2556-e24b-6c78-2221-a2d262fd593f",
          "name": "RA-93 : Verify that Address Line 1 is stored as blank in VMMP stage with relevent failure reason stored",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "try{",
                  "    tests[\"Verifying that Status in staging VMMP DB is Invalid\"] = body.getMemberInfoStagingOutput.results[0].STATUS === \"INVALID\";",
                  "    tests[\"Verifying that Failure reason in staging VMMP DB is addressLine1 has invalid characters\"] = body.getMemberInfoStagingOutput.results[0].FAILURE_REASON === \"addrLine1-Address line 1 must be less than or equal to 100 characters\";",
                  "    tests[\"Verifying that addressLine1 in staging VMMP DB is null\"] = body.getMemberInfoStagingOutput.results[0].MAILING_ADDRESS1 === null; ",
                  "}",
                  "catch(err){",
                  "    tests[\"Data does not exist\"] = false;",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "{{StageDB}}",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"email\":\"{{Email}}\"} "
            },
            "description": ""
          },
          "response": [
            {
              "id": "c898def7-8a82-2e04-a23c-6ddb85fc408e",
              "name": "response for esb",
              "originalRequest": {
                "url": "{{StageDB}}",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\"email\":\"{{Email}}\"} "
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "javascript",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Content-Length",
                  "name": "Content-Length",
                  "value": "1001"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json; charset=UTF-8"
                }
              ],
              "cookie": [
                {
                  "expires": "Invalid Date",
                  "httpOnly": false,
                  "domain": "10.61.38.165",
                  "path": "/",
                  "secure": false,
                  "value": "",
                  "key": "ssnid"
                }
              ],
              "responseTime": "35",
              "body": "{\"email\":\"hu75m5appa@m95anefu.com\",\"getMemberInfoStagingOutput\":{\"results\":[{\"ID\":101517,\"TITLE\":\"Mr\",\"FIRST_NAME\":\"gwlcgefblm\",\"LAST_NAME\":\"Last\",\"GENDER\":\"M\",\"DOB\":\"1970-01-01\",\"EMAIL\":\"hu75m5appa@m95anefu.com\",\"MOBILE\":\"0404040404\",\"MAILING_ADDRESS1\":null,\"MAILING_ADDRESS2\":null,\"MAILING_CITY\":\"Wiseman's Ferry\",\"MAILING_STATE\":\"VIC\",\"MAILING_POSTCODE\":\"3144\",\"RESIDENTIAL_ADDRESS1\":null,\"RESIDENTIAL_ADDRESS2\":null,\"RESIDENTIAL_CITY\":null,\"RESIDENTIAL_STATE\":null,\"RESIDENTIAL_POSTCODE\":null,\"MEMBER_TYPE\":\"GROUP\",\"ADVISER_CODE\":null,\"PAYING_POLICY_NUMBER\":null,\"WORK_PHONE\":\"0288944513\",\"HOME_PHONE\":\"0288911783\",\"CREATED_DATE\":\"2016-10-03 09:47:05.866504\",\"POLICY_ISSUE_DATE\":null,\"VITALITY_POLICY_STATUS\":null,\"EFFECTIVE_DATE\":null,\"INFORCE_POLICY_INDICATOR\":null,\"RELATIONSHIP_NAME\":\"{{relationshipName}}\",\"AIA_CLIENT_NUMBER\":null,\"AIA_VITALITY_ID\":null,\"PROCESSED_FILE\":null,\"NOMINATION_ID\":\"abcd1234\",\"STATUS\":\"INVALID\",\"FAILURE_REASON\":\"addrLine1-addressLine1 has invalid characters\",\"REC_TYPE\":null}]}}"
            }
          ]
        },
        {
          "_postman_id": "cd419127-3b12-ab3d-fb09-8e09fc9c1620",
          "name": "RA-93 : Address Line 1 is null",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "tests[\"Verifying that Enrolment is successfull\"] =  body.status === \"Data Accepted\";"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Generating Random Email address to pass into the data so that user duplication does not happen",
                  "function makeEmail() {",
                  "  var strValues = \"qpotvghysbnxui56z\";",
                  "  var strEmail = \"\";",
                  "  var strTmp;",
                  "  for (var i = 0; i < 10; i++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strTmp = \"\";",
                  "  strEmail = strEmail + \"@\";",
                  "  for (var j = 0; j < 8; j++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strEmail = strEmail + \"esbpii.com\";",
                  "  return strEmail;",
                  "}",
                  "",
                  "//Setting up the random email to an environment variable",
                  "postman.setEnvironmentVariable(\"Email\", makeEmail());",
                  "",
                  "var firstName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);",
                  "",
                  "//Setting up the firstName to an environment variable",
                  "postman.setEnvironmentVariable(\"firstName\", firstName);",
                  "",
                  "var lastName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 8);",
                  "",
                  "//Setting up the lastName to an environment variable",
                  "postman.setEnvironmentVariable(\"lastName\", lastName);",
                  "",
                  "",
                  "//Incrementing and Setting up the memberID to an environment variable",
                  "// var memberIdNumber = parseInt(environment.memberIdNumber)+1;",
                  "var memberIdNumber = Date.now();",
                  "postman.setEnvironmentVariable(\"memberIdNumber\", memberIdNumber);",
                  "postman.setEnvironmentVariable(\"memberID\", \"RA\"+memberIdNumber.toString());"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"Last\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"01/01/1970\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":null,\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}\r\n"
            },
            "description": "Given that an invalid record was received by ESB \r\nWhen ESB identifies an invalid record,\r\nThen it will store it in VMMP staging DB in the following manner:\r\n1 - The invalid field will be left blank\r\n2 - The invalid value and the reason will be captured in the reason field\r\n"
          },
          "response": []
        },
        {
          "_postman_id": "31b8bf03-cdcc-14d9-b0aa-66401a1a094a",
          "name": "RA-93 : Verify that all the Address fields are stored as blank in VMMP stage without any failure reason",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "try{",
                  "    tests[\"Verifying that Status in staging VMMP DB is Invalid\"] = body.getMemberInfoStagingOutput.results[0].STATUS === \"VALID_SHORT_PROCESS\" || body.getMemberInfoStagingOutput.results[0].STATUS === null;",
                  "    tests[\"Verifying that Failure reason in staging VMMP DB is addressLine1 has invalid characters\"] = body.getMemberInfoStagingOutput.results[0].FAILURE_REASON === null;",
                  "    tests[\"Verifying that addressLine1 in staging VMMP DB is null\"] = body.getMemberInfoStagingOutput.results[0].MAILING_ADDRESS1 === null; ",
                  "    tests[\"Verifying that addressLine1 in staging VMMP DB is null\"] = body.getMemberInfoStagingOutput.results[0].MAILING_ADDRESS2 === null; ",
                  "    tests[\"Verifying that addressLine1 in staging VMMP DB is null\"] = body.getMemberInfoStagingOutput.results[0].MAILING_CITY === null; ",
                  "    tests[\"Verifying that addressLine1 in staging VMMP DB is null\"] = body.getMemberInfoStagingOutput.results[0].MAILING_STATE === null; ",
                  "    tests[\"Verifying that addressLine1 in staging VMMP DB is null\"] = body.getMemberInfoStagingOutput.results[0].MAILING_POSTCODE === null; ",
                  "}",
                  "catch(err){",
                  "    tests[\"Data does not exist\"] = false;",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "{{StageDB}}",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"email\":\"{{Email}}\"} "
            },
            "description": ""
          },
          "response": [
            {
              "id": "9d77ad9c-1174-c8c0-8da7-beef0164a350",
              "name": "response for esb",
              "originalRequest": {
                "url": "{{StageDB}}",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\"email\":\"{{Email}}\"} "
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "javascript",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Content-Length",
                  "name": "Content-Length",
                  "value": "1001"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json; charset=UTF-8"
                }
              ],
              "cookie": [
                {
                  "expires": "Invalid Date",
                  "httpOnly": false,
                  "domain": "10.61.38.165",
                  "path": "/",
                  "secure": false,
                  "value": "",
                  "key": "ssnid"
                }
              ],
              "responseTime": "35",
              "body": "{\"email\":\"hu75m5appa@m95anefu.com\",\"getMemberInfoStagingOutput\":{\"results\":[{\"ID\":101517,\"TITLE\":\"Mr\",\"FIRST_NAME\":\"gwlcgefblm\",\"LAST_NAME\":\"Last\",\"GENDER\":\"M\",\"DOB\":\"1970-01-01\",\"EMAIL\":\"hu75m5appa@m95anefu.com\",\"MOBILE\":\"0404040404\",\"MAILING_ADDRESS1\":null,\"MAILING_ADDRESS2\":null,\"MAILING_CITY\":\"Wiseman's Ferry\",\"MAILING_STATE\":\"VIC\",\"MAILING_POSTCODE\":\"3144\",\"RESIDENTIAL_ADDRESS1\":null,\"RESIDENTIAL_ADDRESS2\":null,\"RESIDENTIAL_CITY\":null,\"RESIDENTIAL_STATE\":null,\"RESIDENTIAL_POSTCODE\":null,\"MEMBER_TYPE\":\"GROUP\",\"ADVISER_CODE\":null,\"PAYING_POLICY_NUMBER\":null,\"WORK_PHONE\":\"0288944513\",\"HOME_PHONE\":\"0288911783\",\"CREATED_DATE\":\"2016-10-03 09:47:05.866504\",\"POLICY_ISSUE_DATE\":null,\"VITALITY_POLICY_STATUS\":null,\"EFFECTIVE_DATE\":null,\"INFORCE_POLICY_INDICATOR\":null,\"RELATIONSHIP_NAME\":\"{{relationshipName}}\",\"AIA_CLIENT_NUMBER\":null,\"AIA_VITALITY_ID\":null,\"PROCESSED_FILE\":null,\"NOMINATION_ID\":\"abcd1234\",\"STATUS\":\"INVALID\",\"FAILURE_REASON\":\"addrLine1-addressLine1 has invalid characters\",\"REC_TYPE\":null}]}}"
            }
          ]
        },
        {
          "_postman_id": "951d3ae0-b5a6-735d-d357-bd3a9ac21b98",
          "name": "RA-93 :Address Line 2 has invalid characters",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 400\"] = responseCode.code === 400;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "tests[\"Verifying that the failure reason says Invalid Fields\"] = body.failureReason === \"Invalid Fields\";",
                  "tests[\"Verifying that the request is returing Invalid Field Error Message\"] = body.invalidFields.addrLine2 === \"Address line 2 has invalid characters\";"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Generating Random Email address to pass into the data so that user duplication does not happen",
                  "function makeEmail() {",
                  "  var strValues = \"qpotvghysbnxui56z\";",
                  "  var strEmail = \"\";",
                  "  var strTmp;",
                  "  for (var i = 0; i < 10; i++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strTmp = \"\";",
                  "  strEmail = strEmail + \"@\";",
                  "  for (var j = 0; j < 8; j++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strEmail = strEmail + \"esbpii.com\";",
                  "  return strEmail;",
                  "}",
                  "",
                  "//Setting up the random email to an environment variable",
                  "postman.setEnvironmentVariable(\"Email\", makeEmail());",
                  "",
                  "var firstName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);",
                  "",
                  "//Setting up the firstName to an environment variable",
                  "postman.setEnvironmentVariable(\"firstName\", firstName);",
                  "",
                  "var lastName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 8);",
                  "",
                  "//Setting up the lastName to an environment variable",
                  "postman.setEnvironmentVariable(\"lastName\", lastName);",
                  "",
                  "//Incrementing and Setting up the memberID to an environment variable",
                  "// var memberIdNumber = parseInt(environment.memberIdNumber)+1;",
                  "var memberIdNumber = Date.now();",
                  "postman.setEnvironmentVariable(\"memberIdNumber\", memberIdNumber);",
                  "postman.setEnvironmentVariable(\"memberID\", \"RA\"+memberIdNumber.toString());"
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"test street1\",\r\n      \"line2\":\"4*&^%)&((&@$@nt Road\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "8275ce46-9579-eb67-7740-36c8c64bc73f",
          "name": "RA-93 : Verify that Address Line 2 is stored as blank in VMMP stage with relevent failure reason stored",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "try{",
                  "    tests[\"Verifying that Status in staging VMMP DB is Invalid\"] = body.getMemberInfoStagingOutput.results[0].STATUS === \"INVALID\";",
                  "    tests[\"Verifying that Failure reason in staging VMMP DB is addressLine2 has invalid characters\"] = body.getMemberInfoStagingOutput.results[0].FAILURE_REASON === \"addrLine2-Address line 2 has invalid characters\";",
                  "    tests[\"Verifying that addressLin21 in staging VMMP DB is null\"] = body.getMemberInfoStagingOutput.results[0].MAILING_ADDRESS2 === null; ",
                  "}",
                  "catch(err)",
                  "{",
                  "    tests[\"Data does not exist\"] = false;",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "{{StageDB}}",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"email\":\"{{Email}}\"} "
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "56f2a132-60b9-f0a4-8dad-4473f7ca43d2",
          "name": "RA-93 : Address Line 2 has greater than 100 characters",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 400 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 400\"] = responseCode.code === 400;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "try{",
                  "    tests[\"Verifying that the status is 'registration failed'\"] = body.status === \"registration failed\";",
                  "    tests[\"Verifying that the failure reason is 'Invalid Fields'\"] = body.failureReason === \"Invalid Fields\";",
                  "    tests[\"Verifying that the invalid fields are listed in the response\"] = body.invalidFields.addrLine2 === \"Address line 2 must be less than or equal to 100 characters\";",
                  "}",
                  "catch(err){",
                  "  tests[\"Data in response does not exist\"] = false;  ",
                  "}",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Generating Random Email address to pass into the data so that user duplication does not happen",
                  "function makeEmail() {",
                  "  var strValues = \"qpotvghysbnxui56z\";",
                  "  var strEmail = \"\";",
                  "  var strTmp;",
                  "  for (var i = 0; i < 10; i++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strTmp = \"\";",
                  "  strEmail = strEmail + \"@\";",
                  "  for (var j = 0; j < 8; j++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strEmail = strEmail + \"esbpii.com\";",
                  "  return strEmail;",
                  "}",
                  "",
                  "//Setting up the random email to an environment variable",
                  "postman.setEnvironmentVariable(\"Email\", makeEmail());",
                  "",
                  "var firstName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);",
                  "",
                  "//Setting up the firstName to an environment variable",
                  "postman.setEnvironmentVariable(\"firstName\", firstName);",
                  "",
                  "var lastName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 8);",
                  "",
                  "//Setting up the lastName to an environment variable",
                  "postman.setEnvironmentVariable(\"lastName\", lastName);",
                  "",
                  "",
                  "//Incrementing and Setting up the memberID to an environment variable",
                  "// var memberIdNumber = parseInt(environment.memberIdNumber)+1;",
                  "var memberIdNumber = Date.now();",
                  "postman.setEnvironmentVariable(\"memberIdNumber\", memberIdNumber);",
                  "postman.setEnvironmentVariable(\"memberID\", \"RA\"+memberIdNumber.toString());"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"Last\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"01/01/1970\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"test street1\",\r\n      \"line2\":\"12345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}\r\n"
            },
            "description": "Given that an invalid record was received by ESB \r\nWhen ESB identifies an invalid record,\r\nThen it will store it in VMMP staging DB in the following manner:\r\n1 - The invalid field will be left blank\r\n2 - The invalid value and the reason will be captured in the reason field\r\n"
          },
          "response": []
        },
        {
          "_postman_id": "bf488f9c-cd83-777a-451a-0f99fd35251b",
          "name": "RA-93 : Verify that Address Line 2 is stored as blank in VMMP stage with relevent failure reason stored",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "try{",
                  "    tests[\"Verifying that Status in staging VMMP DB is Invalid\"] = body.getMemberInfoStagingOutput.results[0].STATUS === \"INVALID\";",
                  "    tests[\"Verifying that Failure reason in staging VMMP DB is addressLine2 has invalid characters\"] = body.getMemberInfoStagingOutput.results[0].FAILURE_REASON === \"addrLine2-Address line 2 must be less than or equal to 100 characters\";",
                  "    tests[\"Verifying that addressLine2 in staging VMMP DB is null\"] = body.getMemberInfoStagingOutput.results[0].MAILING_ADDRESS2 === null; ",
                  "}",
                  "catch(err)",
                  "{",
                  "    tests[\"Data does not exist\"] = false;",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "{{StageDB}}",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"email\":\"{{Email}}\"} "
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "5c013abb-820d-dbbb-2c15-784ac31aed36",
          "name": "RA-93 : Address Line 2 is null",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "tests[\"Verifying that Enrolment is successfull\"] =  body.status === \"Data Accepted\";"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Generating Random Email address to pass into the data so that user duplication does not happen",
                  "function makeEmail() {",
                  "  var strValues = \"qpotvghysbnxui56z\";",
                  "  var strEmail = \"\";",
                  "  var strTmp;",
                  "  for (var i = 0; i < 10; i++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strTmp = \"\";",
                  "  strEmail = strEmail + \"@\";",
                  "  for (var j = 0; j < 8; j++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strEmail = strEmail + \"esbpii.com\";",
                  "  return strEmail;",
                  "}",
                  "",
                  "//Setting up the random email to an environment variable",
                  "postman.setEnvironmentVariable(\"Email\", makeEmail());",
                  "",
                  "var firstName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);",
                  "",
                  "//Setting up the firstName to an environment variable",
                  "postman.setEnvironmentVariable(\"firstName\", firstName);",
                  "",
                  "var lastName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 8);",
                  "",
                  "//Setting up the lastName to an environment variable",
                  "postman.setEnvironmentVariable(\"lastName\", lastName);",
                  "",
                  "",
                  "//Incrementing and Setting up the memberID to an environment variable",
                  "// var memberIdNumber = parseInt(environment.memberIdNumber)+1;",
                  "var memberIdNumber = Date.now();",
                  "postman.setEnvironmentVariable(\"memberIdNumber\", memberIdNumber);",
                  "postman.setEnvironmentVariable(\"memberID\", \"RA\"+memberIdNumber.toString());"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"Last\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"01/01/1970\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"test street1\",\r\n      \"line2\":null,\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}\r\n"
            },
            "description": "Given that an invalid record was received by ESB \r\nWhen ESB identifies an invalid record,\r\nThen it will store it in VMMP staging DB in the following manner:\r\n1 - The invalid field will be left blank\r\n2 - The invalid value and the reason will be captured in the reason field\r\n"
          },
          "response": []
        },
        {
          "_postman_id": "a208bc9f-1c3e-599c-dc23-ed045bc03282",
          "name": "RA-93 : Verify that Address line 2 is stored as blank in VMMP stage without any failure reason",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "try{",
                  "    tests[\"Verifying that Status in staging VMMP DB is Invalid\"] = body.getMemberInfoStagingOutput.results[0].STATUS === \"VALID_SHORT_PROCESS\" || body.getMemberInfoStagingOutput.results[0].STATUS === null;",
                  "    tests[\"Verifying that Failure reason in staging VMMP DB is null\"] = body.getMemberInfoStagingOutput.results[0].FAILURE_REASON === null;",
                  "    tests[\"Verifying that addressLine2 in staging VMMP DB is null\"] = body.getMemberInfoStagingOutput.results[0].MAILING_ADDRESS2 === null; ",
                  "}",
                  "catch(err){",
                  "    tests[\"Data does not exist\"] = false;",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "{{StageDB}}",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"email\":\"{{Email}}\"} "
            },
            "description": ""
          },
          "response": [
            {
              "id": "9dd16241-cd5c-4bd6-febb-85bf1a4f7bb8",
              "name": "response for esb",
              "originalRequest": {
                "url": "{{StageDB}}",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\"email\":\"{{Email}}\"} "
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "javascript",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Content-Length",
                  "name": "Content-Length",
                  "value": "1001"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json; charset=UTF-8"
                }
              ],
              "cookie": [
                {
                  "expires": "Invalid Date",
                  "httpOnly": false,
                  "domain": "10.61.38.165",
                  "path": "/",
                  "secure": false,
                  "value": "",
                  "key": "ssnid"
                }
              ],
              "responseTime": "35",
              "body": "{\"email\":\"hu75m5appa@m95anefu.com\",\"getMemberInfoStagingOutput\":{\"results\":[{\"ID\":101517,\"TITLE\":\"Mr\",\"FIRST_NAME\":\"gwlcgefblm\",\"LAST_NAME\":\"Last\",\"GENDER\":\"M\",\"DOB\":\"1970-01-01\",\"EMAIL\":\"hu75m5appa@m95anefu.com\",\"MOBILE\":\"0404040404\",\"MAILING_ADDRESS1\":null,\"MAILING_ADDRESS2\":null,\"MAILING_CITY\":\"Wiseman's Ferry\",\"MAILING_STATE\":\"VIC\",\"MAILING_POSTCODE\":\"3144\",\"RESIDENTIAL_ADDRESS1\":null,\"RESIDENTIAL_ADDRESS2\":null,\"RESIDENTIAL_CITY\":null,\"RESIDENTIAL_STATE\":null,\"RESIDENTIAL_POSTCODE\":null,\"MEMBER_TYPE\":\"GROUP\",\"ADVISER_CODE\":null,\"PAYING_POLICY_NUMBER\":null,\"WORK_PHONE\":\"0288944513\",\"HOME_PHONE\":\"0288911783\",\"CREATED_DATE\":\"2016-10-03 09:47:05.866504\",\"POLICY_ISSUE_DATE\":null,\"VITALITY_POLICY_STATUS\":null,\"EFFECTIVE_DATE\":null,\"INFORCE_POLICY_INDICATOR\":null,\"RELATIONSHIP_NAME\":\"{{relationshipName}}\",\"AIA_CLIENT_NUMBER\":null,\"AIA_VITALITY_ID\":null,\"PROCESSED_FILE\":null,\"NOMINATION_ID\":\"abcd1234\",\"STATUS\":\"INVALID\",\"FAILURE_REASON\":\"addrLine1-addressLine1 has invalid characters\",\"REC_TYPE\":null}]}}"
            }
          ]
        },
        {
          "_postman_id": "b879f4e2-e9ab-a741-d7e1-42cd09a44595",
          "name": "RA-93 : Suburb is has invalid characters",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 400 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 400\"] = responseCode.code === 400;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "try{",
                  "    tests[\"Verifying that the status is 'registration failed'\"] = body.status === \"registration failed\";",
                  "    tests[\"Verifying that the failure reason is 'Invalid Fields'\"] = body.failureReason === \"Invalid Fields\";",
                  "    tests[\"Verifying that the invalid fields are listed in the response\"] = body.invalidFields.suburb === \"suburb has invalid characters\";",
                  "}",
                  "catch(err){",
                  "  tests[\"Data in response does not exist\"] = false;  ",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "",
                  "//Generating Random Email address to pass into the data so that user duplication does not happen",
                  "function makeEmail() {",
                  "  var strValues = \"qpotvghysbnxui56z\";",
                  "  var strEmail = \"\";",
                  "  var strTmp;",
                  "  for (var i = 0; i < 10; i++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strTmp = \"\";",
                  "  strEmail = strEmail + \"@\";",
                  "  for (var j = 0; j < 8; j++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strEmail = strEmail + \"esbpii.com\";",
                  "  return strEmail;",
                  "}",
                  "",
                  "",
                  "//Setting up the random email to an environment variable",
                  "postman.setEnvironmentVariable(\"Email\", makeEmail());",
                  "console.log(\"Email: \"+environment.Email);",
                  "",
                  "var firstName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);",
                  "",
                  "//Setting up the firstName to an environment variable",
                  "postman.setEnvironmentVariable(\"firstName\", firstName);",
                  "",
                  "var lastName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 8);",
                  "",
                  "//Setting up the lastName to an environment variable",
                  "postman.setEnvironmentVariable(\"lastName\", lastName);",
                  "",
                  "",
                  "//Incrementing and Setting up the memberID to an environment variable",
                  "// var memberIdNumber = parseInt(environment.memberIdNumber)+1;",
                  "var memberIdNumber = Date.now();",
                  "postman.setEnvironmentVariable(\"memberIdNumber\", memberIdNumber);",
                  "postman.setEnvironmentVariable(\"memberID\", \"RA\"+memberIdNumber.toString());"
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"test street1\",\r\n      \"suburb\":\"KILO*H&\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}\r\n\r\n\r\n{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"Last\",\r\n    \"gender\":\"F\",\r\n    \"dateOfBirth\":\"10/10/1970\",\r\n    \"email\":\"{{Email}}\",\r\n    \"nominationId\":\"abcd1234\",\r\n    \"address\":{\r\n      \"line1\":\"50 Punt Road\",\r\n      \"suburb\":\"KILO*H&\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"3144\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"0404040404\",\r\n      \"homeNumber\":\"0288911784\",\r\n      \"workNumber\":\"0288944514\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n\r\n      \r\n    },\r\n     \r\n    \"vitalityPolicyDetails\":{\r\n\r\n    \r\n \r\n  }\r\n  },\r\n    \r\n     \r\n  \"reasonForJoining\":\"Unknown\",\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"transactionId\":\"abcd1234\"\r\n \r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "a86b69ce-431f-13bd-5b47-d5a151ce48de",
          "name": "RA-93 : Verify that Suburb is stored as blank in VMMP stage DB with failure reason",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "try{",
                  "    tests[\"Verifying that Status in staging VMMP DB is Invalid\"] = body.getMemberInfoStagingOutput.results[0].STATUS === \"INVALID\";",
                  "    tests[\"Verifying that Failure reason in staging VMMP DB is Suburb has invalid characters\"] = body.getMemberInfoStagingOutput.results[0].FAILURE_REASON === \"suburb-suburb has invalid characters\";",
                  "    tests[\"Verifying that Suburb in staging VMMP DB is null\"] = body.getMemberInfoStagingOutput.results[0].MAILING_CITY === null;",
                  "}",
                  "catch(err){",
                  "  tests[\"Data in response does not exist\"] = false;  ",
                  "}",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "{{StageDB}}",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"email\":\"{{Email}}\"} "
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "e1f402e1-5923-00b6-6530-593531436b59",
          "name": "RA-93 : Suburb is null",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 400 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 400\"] = responseCode.code === 400;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "try{",
                  "    tests[\"Verifying that the status is 'registration failed'\"] = body.status === \"registration failed\";",
                  "    tests[\"Verifying that the failure reason is 'Invalid Fields'\"] = body.failureReason === \"Invalid Fields\";",
                  "    tests[\"Verifying that the invalid fields are listed in the response\"] = body.invalidFields.suburb === \"Missing suburb\";",
                  "}",
                  "catch(err){",
                  "  tests[\"Data in response does not exist\"] = false;  ",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "",
                  "//Generating Random Email address to pass into the data so that user duplication does not happen",
                  "function makeEmail() {",
                  "  var strValues = \"qpotvghysbnxui56z\";",
                  "  var strEmail = \"\";",
                  "  var strTmp;",
                  "  for (var i = 0; i < 10; i++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strTmp = \"\";",
                  "  strEmail = strEmail + \"@\";",
                  "  for (var j = 0; j < 8; j++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strEmail = strEmail + \"esbpii.com\";",
                  "  return strEmail;",
                  "}",
                  "",
                  "",
                  "//Setting up the random email to an environment variable",
                  "postman.setEnvironmentVariable(\"Email\", makeEmail());",
                  "console.log(\"Email: \"+environment.Email);",
                  "",
                  "var firstName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);",
                  "",
                  "//Setting up the firstName to an environment variable",
                  "postman.setEnvironmentVariable(\"firstName\", firstName);",
                  "",
                  "var lastName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 8);",
                  "",
                  "//Setting up the lastName to an environment variable",
                  "postman.setEnvironmentVariable(\"lastName\", lastName);",
                  "",
                  "",
                  "//Incrementing and Setting up the memberID to an environment variable",
                  "// var memberIdNumber = parseInt(environment.memberIdNumber)+1;",
                  "var memberIdNumber = Date.now();",
                  "postman.setEnvironmentVariable(\"memberIdNumber\", memberIdNumber);",
                  "postman.setEnvironmentVariable(\"memberID\", \"RA\"+memberIdNumber.toString());"
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"test street1\",\r\n      \"suburb\":null,\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "bd13bbd8-958c-283a-2aa1-d20ecb7d8b0e",
          "name": "RA-93 : Verify that Suburb is stored as blank in VMMP stage DB with failure reason",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "try{",
                  "    tests[\"Verifying that Status in staging VMMP DB is Invalid\"] = body.getMemberInfoStagingOutput.results[0].STATUS === \"INVALID\";",
                  "    tests[\"Verifying that Failure reason in staging VMMP DB is Missing suburb\"] = body.getMemberInfoStagingOutput.results[0].FAILURE_REASON === \"suburb-Missing suburb\";",
                  "    tests[\"Verifying that Suburb in staging VMMP DB is null\"] = body.getMemberInfoStagingOutput.results[0].MAILING_CITY === null;",
                  "}",
                  "catch(err){",
                  "  tests[\"Data in response does not exist\"] = false;  ",
                  "}",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "{{StageDB}}",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"email\":\"{{Email}}\"} "
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "0255e097-1894-fd57-bd63-f6b7644ad082",
          "name": "RA-93 : Suburb has greater than 100 characters",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 400 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 400\"] = responseCode.code === 400;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "try{",
                  "    tests[\"Verifying that the status is 'registration failed'\"] = body.status === \"registration failed\";",
                  "    tests[\"Verifying that the failure reason is 'Invalid Fields'\"] = body.failureReason === \"Invalid Fields\";",
                  "    tests[\"Verifying that the invalid fields are listed in the response\"] = body.invalidFields.suburb === \"Suburb must be less than or equal to 100 characters\";",
                  "}",
                  "catch(err){",
                  "  tests[\"Data in response does not exist\"] = false;  ",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Generating Random Email address to pass into the data so that user duplication does not happen",
                  "function makeEmail() {",
                  "  var strValues = \"qpotvghysbnxui56z\";",
                  "  var strEmail = \"\";",
                  "  var strTmp;",
                  "  for (var i = 0; i < 10; i++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strTmp = \"\";",
                  "  strEmail = strEmail + \"@\";",
                  "  for (var j = 0; j < 8; j++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strEmail = strEmail + \"esbpii.com\";",
                  "  return strEmail;",
                  "}",
                  "",
                  "//Setting up the random email to an environment variable",
                  "postman.setEnvironmentVariable(\"Email\", makeEmail());",
                  "",
                  "var firstName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);",
                  "",
                  "//Setting up the firstName to an environment variable",
                  "postman.setEnvironmentVariable(\"firstName\", firstName);",
                  "",
                  "var lastName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 8);",
                  "",
                  "//Setting up the lastName to an environment variable",
                  "postman.setEnvironmentVariable(\"lastName\", lastName);",
                  "",
                  "//Incrementing and Setting up the memberID to an environment variable",
                  "// var memberIdNumber = parseInt(environment.memberIdNumber)+1;",
                  "var memberIdNumber = Date.now();",
                  "postman.setEnvironmentVariable(\"memberIdNumber\", memberIdNumber);",
                  "postman.setEnvironmentVariable(\"memberID\", \"RA\"+memberIdNumber.toString());"
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"test street1\",\r\n      \"suburb\":\"qwertyuiopasdfghjklzxcvbnmwqertyuiopasdfghklwejkdfhjksdbrhfbdhbfajkdhbfaoduihuruinakjdflajdnjjjjsdfka\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "b1d3d798-2bef-1465-68b5-a35ce1c0d463",
          "name": "RA-93 : Verify that Suburb is stored as blank in VMMP stage DB with failure reason copy",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "try{",
                  "    tests[\"Verifying that Status in staging VMMP DB is Invalid\"] = body.getMemberInfoStagingOutput.results[0].STATUS === \"INVALID\";",
                  "    tests[\"Verifying that Failure reason in staging VMMP DB is Suburb must be less than or equal to 100 characters\"] = body.getMemberInfoStagingOutput.results[0].FAILURE_REASON === \"suburb-Suburb must be less than or equal to 100 characters\";",
                  "    tests[\"Verifying that Suburb in staging VMMP DB is null\"] = body.getMemberInfoStagingOutput.results[0].MAILING_CITY === null;",
                  "}",
                  "catch(err){",
                  "  tests[\"Data in response does not exist\"] = false;  ",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "{{StageDB}}",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"email\":\"{{Email}}\"} "
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "c3e2364c-9e69-ccb3-a9b8-30f7728da374",
          "name": "RA-93 : State has more than 3 characters",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 400 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 400\"] = responseCode.code === 400;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "try{",
                  "    tests[\"Verifying that the status is 'registration failed'\"] = body.status === \"registration failed\";",
                  "    tests[\"Verifying that the failure reason is 'Invalid Fields'\"] = body.failureReason === \"Invalid Fields\";",
                  "    tests[\"Verifying that the invalid fields are listed in the response\"] = body.invalidFields.state === \"State must be less than or equal to 3 characters\";",
                  "}",
                  "catch(err){",
                  "  tests[\"Data in response does not exist\"] = false;  ",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "",
                  "//Generating Random Email address to pass into the data so that user duplication does not happen",
                  "function makeEmail() {",
                  "  var strValues = \"qpotvghysbnxui56z\";",
                  "  var strEmail = \"\";",
                  "  var strTmp;",
                  "  for (var i = 0; i < 10; i++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strTmp = \"\";",
                  "  strEmail = strEmail + \"@\";",
                  "  for (var j = 0; j < 8; j++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strEmail = strEmail + \"esbpii.com\";",
                  "  return strEmail;",
                  "}",
                  "",
                  "",
                  "//Setting up the random email to an environment variable",
                  "postman.setEnvironmentVariable(\"Email\", makeEmail());",
                  "console.log(\"Email: \"+environment.Email);",
                  "",
                  "var firstName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);",
                  "",
                  "//Setting up the firstName to an environment variable",
                  "postman.setEnvironmentVariable(\"firstName\", firstName);",
                  "",
                  "var lastName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 8);",
                  "",
                  "//Setting up the lastName to an environment variable",
                  "postman.setEnvironmentVariable(\"lastName\", lastName);",
                  "",
                  "",
                  "//Incrementing and Setting up the memberID to an environment variable",
                  "// var memberIdNumber = parseInt(environment.memberIdNumber)+1;",
                  "var memberIdNumber = Date.now();",
                  "postman.setEnvironmentVariable(\"memberIdNumber\", memberIdNumber);",
                  "postman.setEnvironmentVariable(\"memberID\", \"RA\"+memberIdNumber.toString());"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"test street1\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VICC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "0141f708-d66a-9df6-6bb3-0e44d41799a9",
          "name": "RA-93 : Verify that State is stored as blank in VMMP stage DB with failure reason",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "try{",
                  "    tests[\"Verifying that Status in staging VMMP DB is Invalid\"] = body.getMemberInfoStagingOutput.results[0].STATUS === \"INVALID\";",
                  "    tests[\"Verifying that Failure reason in staging VMMP DB is State must be less than or equal to 3 characters\"] = body.getMemberInfoStagingOutput.results[0].FAILURE_REASON === \"state-State must be less than or equal to 3 characters\";",
                  "    tests[\"Verifying that MAILING_STATE in staging VMMP DB is not null\"] = body.getMemberInfoStagingOutput.results[0].MAILING_STATE === null;",
                  "}",
                  "catch(err){",
                  "  tests[\"Data in response does not exist\"] = false;  ",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "{{StageDB}}",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"email\":\"{{Email}}\"} "
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "d4f7de90-f51b-1f5d-0a8d-9a9b0ae9894a",
          "name": "RA-93 : MemberID is null",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 400 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 400\"] = responseCode.code === 400;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "try{",
                  "    tests[\"Verifying that the status is 'registration failed'\"] = body.status === \"registration failed\";",
                  "    tests[\"Verifying that the failure reason is 'Invalid Fields'\"] = body.failureReason === \"Invalid Fields\";",
                  "    tests[\"Verifying that the invalid fields are listed in the response\"] = body.invalidFields.memberId === \"Missing MemberID\";",
                  "}",
                  "catch(err){",
                  "  tests[\"Data in response does not exist\"] = false;  ",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Generating Random Email address to pass into the data so that user duplication does not happen",
                  "function makeEmail() {",
                  "  var strValues = \"qpotvghysbnxui56z\";",
                  "  var strEmail = \"\";",
                  "  var strTmp;",
                  "  for (var i = 0; i < 10; i++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strTmp = \"\";",
                  "  strEmail = strEmail + \"@\";",
                  "  for (var j = 0; j < 8; j++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strEmail = strEmail + \"esbpii.com\";",
                  "  return strEmail;",
                  "}",
                  "",
                  "//Setting up the random email to an environment variable",
                  "postman.setEnvironmentVariable(\"Email\", makeEmail());",
                  "",
                  "var firstName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);",
                  "",
                  "//Setting up the firstName to an environment variable",
                  "postman.setEnvironmentVariable(\"firstName\", firstName);",
                  "",
                  "var lastName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 8);",
                  "",
                  "//Setting up the lastName to an environment variable",
                  "postman.setEnvironmentVariable(\"lastName\", lastName);",
                  "",
                  "//Incrementing and Setting up the memberID to an environment variable",
                  "// var memberIdNumber = parseInt(environment.memberIdNumber)+1;",
                  "var memberIdNumber = Date.now();",
                  "postman.setEnvironmentVariable(\"memberIdNumber\", memberIdNumber);",
                  "postman.setEnvironmentVariable(\"memberID\", \"RA\"+memberIdNumber.toString());"
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":null,\r\n    \"address\":{\r\n      \"line1\":\"test street1\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "c48879f2-d96c-c100-e270-e23b308e14b1",
          "name": "RA-93 : Verify that MemberID is stored as blank in VMMP stage DB with failure reason",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "try{",
                  "    tests[\"Verifying that Status in staging VMMP DB is Invalid\"] = body.getMemberInfoStagingOutput.results[0].STATUS === \"INVALID\";",
                  "    tests[\"Verifying that Failure reason in staging VMMP DB is memberId-Missing MemberID\"] = body.getMemberInfoStagingOutput.results[0].FAILURE_REASON === \"memberId-Missing MemberID\";",
                  "    tests[\"Verifying that NOMINATION_ID in staging VMMP DB is null\"] = body.getMemberInfoStagingOutput.results[0].NOMINATION_ID === null;",
                  "}",
                  "catch(err){",
                  "  tests[\"Data in response does not exist\"] = false;  ",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "{{StageDB}}",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"email\":\"{{Email}}\"} "
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "ed7834de-eeba-74db-fe67-c66c2bdf599c",
          "name": "RA-93 : Title is null",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 400 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 400\"] = responseCode.code === 400;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "try{",
                  "    tests[\"Verifying that the status is 'registration failed'\"] = body.status === \"registration failed\";",
                  "    tests[\"Verifying that the failure reason is 'Invalid Fields'\"] = body.failureReason === \"Invalid Fields\";",
                  "    tests[\"Verifying that the invalid fields are listed in the response\"] = body.invalidFields.title === \"Title must be entered\";",
                  "}",
                  "catch(err){",
                  "  tests[\"Data in response does not exist\"] = false;  ",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Generating Random Email address to pass into the data so that user duplication does not happen",
                  "function makeEmail() {",
                  "  var strValues = \"qpotvghysbnxui56z\";",
                  "  var strEmail = \"\";",
                  "  var strTmp;",
                  "  for (var i = 0; i < 10; i++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strTmp = \"\";",
                  "  strEmail = strEmail + \"@\";",
                  "  for (var j = 0; j < 8; j++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strEmail = strEmail + \"esbpii.com\";",
                  "  return strEmail;",
                  "}",
                  "",
                  "//Setting up the random email to an environment variable",
                  "postman.setEnvironmentVariable(\"Email\", makeEmail());",
                  "",
                  "var firstName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);",
                  "",
                  "//Setting up the firstName to an environment variable",
                  "postman.setEnvironmentVariable(\"firstName\", firstName);",
                  "",
                  "var lastName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 8);",
                  "",
                  "//Setting up the lastName to an environment variable",
                  "postman.setEnvironmentVariable(\"lastName\", lastName);",
                  "",
                  "//Incrementing and Setting up the memberID to an environment variable",
                  "// var memberIdNumber = parseInt(environment.memberIdNumber)+1;",
                  "var memberIdNumber = Date.now();",
                  "postman.setEnvironmentVariable(\"memberIdNumber\", memberIdNumber);",
                  "postman.setEnvironmentVariable(\"memberID\", \"RA\"+memberIdNumber.toString());"
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"member\":{\r\n    \"title\":null,\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"test street1\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "8dd5ec8a-7967-cdc7-1640-613c08a0e17c",
          "name": "RA-93 : Verify that Title is stored as blank in VMMP stage DB with failure reason",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "try{",
                  "    tests[\"Verifying that Status in staging VMMP DB is Invalid\"] = body.getMemberInfoStagingOutput.results[0].STATUS === \"INVALID\";",
                  "    tests[\"Verifying that Failure reason in staging VMMP DB is title-Title must be entered\"] = body.getMemberInfoStagingOutput.results[0].FAILURE_REASON === \"title-Title must be entered\";",
                  "    tests[\"Verifying that Title in staging VMMP DB is null\"] = body.getMemberInfoStagingOutput.results[0].TITLE === null;",
                  "}",
                  "catch(err){",
                  "  tests[\"Data in response does not exist\"] = false;  ",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "{{StageDB}}",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"email\":\"{{Email}}\"} "
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "e465b341-6099-36e9-b4db-a17cf1efbaa0",
          "name": "RA-93 :First name is null",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 400 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 400\"] = responseCode.code === 400;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "try{",
                  "    tests[\"Verifying that the status is 'registration failed'\"] = body.status === \"registration failed\";",
                  "    tests[\"Verifying that the failure reason is 'Invalid Fields'\"] = body.failureReason === \"Invalid Fields\";",
                  "    tests[\"Verifying that the invalid fields are listed in the response\"] = body.invalidFields.firstName === \"Missing first name\";",
                  "}",
                  "catch(err){",
                  "  tests[\"Data in response does not exist\"] = false;  ",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Generating Random Email address to pass into the data so that user duplication does not happen",
                  "function makeEmail() {",
                  "  var strValues = \"qpotvghysbnxui56z\";",
                  "  var strEmail = \"\";",
                  "  var strTmp;",
                  "  for (var i = 0; i < 10; i++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strTmp = \"\";",
                  "  strEmail = strEmail + \"@\";",
                  "  for (var j = 0; j < 8; j++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strEmail = strEmail + \"esbpii.com\";",
                  "  return strEmail;",
                  "}",
                  "",
                  "//Setting up the random email to an environment variable",
                  "postman.setEnvironmentVariable(\"Email\", makeEmail());",
                  "",
                  "var firstName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);",
                  "",
                  "//Setting up the firstName to an environment variable",
                  "postman.setEnvironmentVariable(\"firstName\", firstName);",
                  "",
                  "var lastName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 8);",
                  "",
                  "//Setting up the lastName to an environment variable",
                  "postman.setEnvironmentVariable(\"lastName\", lastName);",
                  "",
                  "//Incrementing and Setting up the memberID to an environment variable",
                  "// var memberIdNumber = parseInt(environment.memberIdNumber)+1;",
                  "var memberIdNumber = Date.now();",
                  "postman.setEnvironmentVariable(\"memberIdNumber\", memberIdNumber);",
                  "postman.setEnvironmentVariable(\"memberID\", \"RA\"+memberIdNumber.toString());"
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":null,\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"test street1\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "c33fa9f3-4435-91f3-aa69-ea95d82b189b",
          "name": "RA-93 : Verify that First Name is stored as blank in VMMP stage DB with failure reason as INVALID",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "try{",
                  "    tests[\"Verifying that Status in staging VMMP DB is Invalid\"] = body.getMemberInfoStagingOutput.results[0].STATUS === \"INVALID\";",
                  "    tests[\"Verifying that Failure reason in staging VMMP DB is firstName-Missing first name\"] = body.getMemberInfoStagingOutput.results[0].FAILURE_REASON === \"firstName-Missing first name\";",
                  "    tests[\"Verifying that First Name in staging VMMP DB is null\"] = body.getMemberInfoStagingOutput.results[0].FIRST_NAME === null;",
                  "}",
                  "catch(err){",
                  "  tests[\"Data in response does not exist\"] = false;  ",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "{{StageDB}}",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"email\":\"{{Email}}\"} "
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "0332061d-6eba-3350-6cb2-db18dddf41d7",
          "name": "RA-93 : State has invalid characters",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 400 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 400\"] = responseCode.code === 400;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "try{",
                  "    tests[\"Verifying that the status is 'registration failed'\"] = body.status === \"registration failed\";",
                  "    tests[\"Verifying that the failure reason is 'Invalid Fields'\"] = body.failureReason === \"Invalid Fields\";",
                  "    tests[\"Verifying that the invalid fields are listed in the response\"] = body.invalidFields.state === \"State has invalid characters\";",
                  "}",
                  "catch(err){",
                  "  tests[\"Data in response does not exist\"] = false;  ",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "",
                  "//Generating Random Email address to pass into the data so that user duplication does not happen",
                  "function makeEmail() {",
                  "  var strValues = \"qpotvghysbnxui56z\";",
                  "  var strEmail = \"\";",
                  "  var strTmp;",
                  "  for (var i = 0; i < 10; i++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strTmp = \"\";",
                  "  strEmail = strEmail + \"@\";",
                  "  for (var j = 0; j < 8; j++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strEmail = strEmail + \"esbpii.com\";",
                  "  return strEmail;",
                  "}",
                  "",
                  "",
                  "//Setting up the random email to an environment variable",
                  "postman.setEnvironmentVariable(\"Email\", makeEmail());",
                  "console.log(\"Email: \"+environment.Email);",
                  "",
                  "var firstName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);",
                  "",
                  "//Setting up the firstName to an environment variable",
                  "postman.setEnvironmentVariable(\"firstName\", firstName);",
                  "",
                  "var lastName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 8);",
                  "",
                  "//Setting up the lastName to an environment variable",
                  "postman.setEnvironmentVariable(\"lastName\", lastName);",
                  "",
                  "",
                  "//Incrementing and Setting up the memberID to an environment variable",
                  "// var memberIdNumber = parseInt(environment.memberIdNumber)+1;",
                  "var memberIdNumber = Date.now();",
                  "postman.setEnvironmentVariable(\"memberIdNumber\", memberIdNumber);",
                  "postman.setEnvironmentVariable(\"memberID\", \"RA\"+memberIdNumber.toString());"
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"test street1\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"123\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "2ec42b51-d96b-8ff7-8826-33fbe8f9586b",
          "name": "RA-93 : Verify that State is stored as blank in VMMP stage DB with failure reason",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "try{",
                  "    tests[\"Verifying that Status in staging VMMP DB is Invalid\"] = body.getMemberInfoStagingOutput.results[0].STATUS === \"INVALID\";",
                  "    tests[\"Verifying that Failure reason in staging VMMP DB is Relationship ID has invalid characters\"] = body.getMemberInfoStagingOutput.results[0].FAILURE_REASON === \"state-State has invalid characters\";",
                  "    tests[\"Verifying that Relationship ID in staging VMMP DB is not null\"] = body.getMemberInfoStagingOutput.results[0].MAILING_STATE === null;",
                  "}",
                  "catch(err){",
                  "  tests[\"Data in response does not exist\"] = false;  ",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "{{StageDB}}",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"email\":\"{{Email}}\"} "
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "0ab43546-6049-ce0a-106a-e152a1a0188d",
          "name": "RA-93 : State is null",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 400 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 400\"] = responseCode.code === 400;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "try{",
                  "    tests[\"Verifying that the status is 'registration failed'\"] = body.status === \"registration failed\";",
                  "    tests[\"Verifying that the failure reason is 'Invalid Fields'\"] = body.failureReason === \"Invalid Fields\";",
                  "    tests[\"Verifying that the invalid fields are listed in the response\"] = body.invalidFields.state === \"Missing state\";",
                  "}",
                  "catch(err){",
                  "  tests[\"Data in response does not exist\"] = false;  ",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "",
                  "//Generating Random Email address to pass into the data so that user duplication does not happen",
                  "function makeEmail() {",
                  "  var strValues = \"qpotvghysbnxui56z\";",
                  "  var strEmail = \"\";",
                  "  var strTmp;",
                  "  for (var i = 0; i < 10; i++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strTmp = \"\";",
                  "  strEmail = strEmail + \"@\";",
                  "  for (var j = 0; j < 8; j++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strEmail = strEmail + \"esbpii.com\";",
                  "  return strEmail;",
                  "}",
                  "",
                  "",
                  "//Setting up the random email to an environment variable",
                  "postman.setEnvironmentVariable(\"Email\", makeEmail());",
                  "console.log(\"Email: \"+environment.Email);",
                  "",
                  "var firstName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);",
                  "",
                  "//Setting up the firstName to an environment variable",
                  "postman.setEnvironmentVariable(\"firstName\", firstName);",
                  "",
                  "var lastName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 8);",
                  "",
                  "//Setting up the lastName to an environment variable",
                  "postman.setEnvironmentVariable(\"lastName\", lastName);",
                  "",
                  "",
                  "//Incrementing and Setting up the memberID to an environment variable",
                  "// var memberIdNumber = parseInt(environment.memberIdNumber)+1;",
                  "var memberIdNumber = Date.now();",
                  "postman.setEnvironmentVariable(\"memberIdNumber\", memberIdNumber);",
                  "postman.setEnvironmentVariable(\"memberID\", \"RA\"+memberIdNumber.toString());"
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"test street1\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":null,\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "2ad83d77-3607-747c-ca6d-b156e57c1cee",
          "name": "RA-93 : Verify that State is stored as blank in VMMP stage DB with failure reason",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "try{",
                  "    tests[\"Verifying that Status in staging VMMP DB is Invalid\"] = body.getMemberInfoStagingOutput.results[0].STATUS === \"INVALID\";",
                  "    tests[\"Verifying that Failure reason in staging VMMP DB is state-Missing state\"] = body.getMemberInfoStagingOutput.results[0].FAILURE_REASON === \"state-Missing state\";",
                  "    tests[\"Verifying that MAILING_STATE in staging VMMP DB is null\"] = body.getMemberInfoStagingOutput.results[0].MAILING_STATE === null;",
                  "}",
                  "catch(err){",
                  "  tests[\"Data in response does not exist\"] = false;  ",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "{{StageDB}}",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"email\":\"{{Email}}\"} "
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "28e14894-069e-12e4-5544-baf1c92b8063",
          "name": "RA-93 : Postcode is null",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 400 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 400\"] = responseCode.code === 400;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "try{",
                  "    tests[\"Verifying that the status is 'registration failed'\"] = body.status === \"registration failed\";",
                  "    tests[\"Verifying that the failure reason is 'Invalid Fields'\"] = body.failureReason === \"Invalid Fields\";",
                  "    tests[\"Verifying that the invalid fields are listed in the response\"] = body.invalidFields.postcode === \"Missing postcode\";",
                  "}",
                  "catch(err){",
                  "  tests[\"Data in response does not exist\"] = false;  ",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "",
                  "//Generating Random Email address to pass into the data so that user duplication does not happen",
                  "function makeEmail() {",
                  "  var strValues = \"qpotvghysbnxui56z\";",
                  "  var strEmail = \"\";",
                  "  var strTmp;",
                  "  for (var i = 0; i < 10; i++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strTmp = \"\";",
                  "  strEmail = strEmail + \"@\";",
                  "  for (var j = 0; j < 8; j++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strEmail = strEmail + \"esbpii.com\";",
                  "  return strEmail;",
                  "}",
                  "",
                  "",
                  "//Setting up the random email to an environment variable",
                  "postman.setEnvironmentVariable(\"Email\", makeEmail());",
                  "console.log(\"Email: \"+environment.Email);",
                  "",
                  "var firstName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);",
                  "",
                  "//Setting up the firstName to an environment variable",
                  "postman.setEnvironmentVariable(\"firstName\", firstName);",
                  "",
                  "var lastName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 8);",
                  "",
                  "//Setting up the lastName to an environment variable",
                  "postman.setEnvironmentVariable(\"lastName\", lastName);",
                  "",
                  "//Incrementing and Setting up the memberID to an environment variable",
                  "// var memberIdNumber = parseInt(environment.memberIdNumber)+1;",
                  "var memberIdNumber = Date.now();",
                  "postman.setEnvironmentVariable(\"memberIdNumber\", memberIdNumber);",
                  "postman.setEnvironmentVariable(\"memberID\", \"RA\"+memberIdNumber.toString());"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"test street1\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":null\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}\r\n"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "16170910-9525-ef13-961c-1849f51b53c4",
          "name": "RA-93 : Verify that Postcode is stored as blank in VMMP stage DB with failure reason",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "try{",
                  "    tests[\"Verifying that Status in staging VMMP DB is Invalid\"] = body.getMemberInfoStagingOutput.results[0].STATUS === \"INVALID\";",
                  "    tests[\"Verifying that Failure reason in staging VMMP DB is Missing postcode\"] = body.getMemberInfoStagingOutput.results[0].FAILURE_REASON === \"postcode-Missing postcode\";",
                  "    tests[\"Verifying that MAILING_POSTCODE in staging VMMP DB is null\"] = body.getMemberInfoStagingOutput.results[0].RESIDENTIAL_POSTCODE === null;",
                  "}",
                  "catch(err){",
                  "  tests[\"Data in response does not exist\"] = false;  ",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "{{StageDB}}",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"email\":\"{{Email}}\"} "
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "c637ccdd-d7f5-f728-28e0-9b33cffb76ba",
          "name": "RA-93 : Postcode has invalid characters",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 400 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 400\"] = responseCode.code === 400;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "try{",
                  "    tests[\"Verifying that the status is 'registration failed'\"] = body.status === \"registration failed\";",
                  "    tests[\"Verifying that the failure reason is 'Invalid Fields'\"] = body.failureReason === \"Invalid Fields\";",
                  "    tests[\"Verifying that the invalid fields are listed in the response\"] = body.invalidFields.postcode === \"Postcode must be numeric\";",
                  "}",
                  "catch(err){",
                  "  tests[\"Data in response does not exist\"] = false;  ",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "",
                  "//Generating Random Email address to pass into the data so that user duplication does not happen",
                  "function makeEmail() {",
                  "  var strValues = \"qpotvghysbnxui56z\";",
                  "  var strEmail = \"\";",
                  "  var strTmp;",
                  "  for (var i = 0; i < 10; i++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strTmp = \"\";",
                  "  strEmail = strEmail + \"@\";",
                  "  for (var j = 0; j < 8; j++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strEmail = strEmail + \"esbpii.com\";",
                  "  return strEmail;",
                  "}",
                  "",
                  "",
                  "//Setting up the random email to an environment variable",
                  "postman.setEnvironmentVariable(\"Email\", makeEmail());",
                  "console.log(\"Email: \"+environment.Email);",
                  "",
                  "var firstName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);",
                  "",
                  "//Setting up the firstName to an environment variable",
                  "postman.setEnvironmentVariable(\"firstName\", firstName);",
                  "",
                  "var lastName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 8);",
                  "",
                  "//Setting up the lastName to an environment variable",
                  "postman.setEnvironmentVariable(\"lastName\", lastName);",
                  "",
                  "//Incrementing and Setting up the memberID to an environment variable",
                  "// var memberIdNumber = parseInt(environment.memberIdNumber)+1;",
                  "var memberIdNumber = Date.now();",
                  "postman.setEnvironmentVariable(\"memberIdNumber\", memberIdNumber);",
                  "postman.setEnvironmentVariable(\"memberID\", \"RA\"+memberIdNumber.toString());"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"test street1\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"abcd\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}\r\n"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "eb95e33c-5623-00ea-d5dc-7e96cc801ce9",
          "name": "RA-93 : Verify that Postcode is stored as blank in VMMP stage DB with failure reason",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "try{",
                  "    tests[\"Verifying that Status in staging VMMP DB is Invalid\"] = body.getMemberInfoStagingOutput.results[0].STATUS === \"INVALID\";",
                  "    tests[\"Verifying that Failure reason in staging VMMP DB is Postcode must be numeric\"] = body.getMemberInfoStagingOutput.results[0].FAILURE_REASON === \"postcode-Postcode must be numeric\";",
                  "    tests[\"Verifying that MAILING_POSTCODE in staging VMMP DB is null\"] = body.getMemberInfoStagingOutput.results[0].RESIDENTIAL_POSTCODE === null;",
                  "}",
                  "catch(err){",
                  "  tests[\"Data in response does not exist\"] = false;  ",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "{{StageDB}}",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"email\":\"{{Email}}\"} "
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "e8d47378-81d5-12e5-a5da-cc7313a99d3b",
          "name": "RA-93 : Postcode has more than 4 characters",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 400 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 400\"] = responseCode.code === 400;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "try{",
                  "    tests[\"Verifying that the status is 'registration failed'\"] = body.status === \"registration failed\";",
                  "    tests[\"Verifying that the failure reason is 'Invalid Fields'\"] = body.failureReason === \"Invalid Fields\";",
                  "    tests[\"Verifying that the invalid fields are listed in the response\"] = body.invalidFields.postcode === \"Postcode must be less than or equal to 4 characters\";",
                  "}",
                  "catch(err){",
                  "  tests[\"Data in response does not exist\"] = false;  ",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "",
                  "//Generating Random Email address to pass into the data so that user duplication does not happen",
                  "function makeEmail() {",
                  "  var strValues = \"qpotvghysbnxui56z\";",
                  "  var strEmail = \"\";",
                  "  var strTmp;",
                  "  for (var i = 0; i < 10; i++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strTmp = \"\";",
                  "  strEmail = strEmail + \"@\";",
                  "  for (var j = 0; j < 8; j++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strEmail = strEmail + \"esbpii.com\";",
                  "  return strEmail;",
                  "}",
                  "",
                  "",
                  "//Setting up the random email to an environment variable",
                  "postman.setEnvironmentVariable(\"Email\", makeEmail());",
                  "console.log(\"Email: \"+environment.Email);",
                  "",
                  "var firstName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);",
                  "",
                  "//Setting up the firstName to an environment variable",
                  "postman.setEnvironmentVariable(\"firstName\", firstName);",
                  "",
                  "var lastName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 8);",
                  "",
                  "//Setting up the lastName to an environment variable",
                  "postman.setEnvironmentVariable(\"lastName\", lastName);",
                  "",
                  "//Incrementing and Setting up the memberID to an environment variable",
                  "// var memberIdNumber = parseInt(environment.memberIdNumber)+1;",
                  "var memberIdNumber = Date.now();",
                  "postman.setEnvironmentVariable(\"memberIdNumber\", memberIdNumber);",
                  "postman.setEnvironmentVariable(\"memberID\", \"RA\"+memberIdNumber.toString());"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"test street1\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"30001\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}\r\n"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "4db67434-6521-1500-22db-17b5a6aca785",
          "name": "RA-93 : Verify that Postcode is stored as blank in VMMP stage DB with failure reason",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "try{",
                  "    tests[\"Verifying that Status in staging VMMP DB is Invalid\"] = body.getMemberInfoStagingOutput.results[0].STATUS === \"INVALID\";",
                  "    tests[\"Verifying that Failure reason in staging VMMP DB is Postcode must be less than or equal to 4 characters\"] = body.getMemberInfoStagingOutput.results[0].FAILURE_REASON === \"postcode-Postcode must be less than or equal to 4 characters\";",
                  "    tests[\"Verifying that MAILING_POSTCODE in staging VMMP DB is null\"] = body.getMemberInfoStagingOutput.results[0].RESIDENTIAL_POSTCODE === null;",
                  "}",
                  "catch(err){",
                  "  tests[\"Data in response does not exist\"] = false;  ",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "{{StageDB}}",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"email\":\"{{Email}}\"} "
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "3fb638b4-c496-eb70-ecdb-7969a29003e4",
          "name": "RA-93 : Phone number - All 3 phone numbers are blank",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 400 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 400\"] = responseCode.code === 400;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "try{",
                  "    tests[\"Verifying that the status is 'registration failed'\"] = body.status === \"registration failed\";",
                  "    tests[\"Verifying that the failure reason is 'Invalid Fields'\"] = body.failureReason === \"Invalid Fields\";",
                  "    tests[\"Verifying that the invalid fields are listed in the response\"] = body.invalidFields.phone === \"At least one phone number must be provided\";",
                  "}",
                  "catch(err){",
                  "  tests[\"Data in response does not exist\"] = false;  ",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Generating Random Email address to pass into the data so that user duplication does not happen",
                  "function makeEmail() {",
                  "  var strValues = \"qpotvghysbnxui56z\";",
                  "  var strEmail = \"\";",
                  "  var strTmp;",
                  "  for (var i = 0; i < 10; i++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strTmp = \"\";",
                  "  strEmail = strEmail + \"@\";",
                  "  for (var j = 0; j < 8; j++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strEmail = strEmail + \"esbpii.com\";",
                  "  return strEmail;",
                  "}",
                  "",
                  "//Setting up the random email to an environment variable",
                  "postman.setEnvironmentVariable(\"Email\", makeEmail());",
                  "",
                  "var firstName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);",
                  "",
                  "//Setting up the firstName to an environment variable",
                  "postman.setEnvironmentVariable(\"firstName\", firstName);",
                  "",
                  "var lastName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 8);",
                  "",
                  "//Setting up the lastName to an environment variable",
                  "postman.setEnvironmentVariable(\"lastName\", lastName);",
                  "",
                  "//Incrementing and Setting up the memberID to an environment variable",
                  "// var memberIdNumber = parseInt(environment.memberIdNumber)+1;",
                  "var memberIdNumber = Date.now();",
                  "postman.setEnvironmentVariable(\"memberIdNumber\", memberIdNumber);",
                  "postman.setEnvironmentVariable(\"memberID\", \"RA\"+memberIdNumber.toString());"
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"test street1\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":null,\r\n      \"homeNumber\":null,\r\n      \"workNumber\":null\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}\r\n"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "a9c117c9-6640-4254-26b0-dac54d1346d8",
          "name": "RA-93 : Verify that Phone is stored as blank in VMMP stage DB with failure reason",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "try{",
                  "    tests[\"Verifying that Status in staging VMMP DB is Invalid\"] = body.getMemberInfoStagingOutput.results[0].STATUS === \"INVALID\";",
                  "    tests[\"Verifying that Failure reason in staging VMMP DB is At least one phone number must be provided\"] = body.getMemberInfoStagingOutput.results[0].FAILURE_REASON === \"phone-At least one phone number must be provided\";",
                  "    tests[\"Verifying that Mobile Phone in staging VMMP DB is null\"] = body.getMemberInfoStagingOutput.results[0].MOBILE === null;",
                  "    tests[\"Verifying that Work Phone in staging VMMP DB is null\"] = body.getMemberInfoStagingOutput.results[0].WORK_PHONE === null;",
                  "    tests[\"Verifying that Home Phone in staging VMMP DB is null\"] = body.getMemberInfoStagingOutput.results[0].HOME_PHONE === null;",
                  "}",
                  "catch(err){",
                  "  tests[\"Data in response does not exist\"] = false;  ",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "{{StageDB}}",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"email\":\"{{Email}}\"} "
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "26d3923a-05db-d180-eb95-e0d5f969fcc1",
          "name": "RA-93 : Phone number - Mobile number has invalid characters",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 400 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 400\"] = responseCode.code === 400;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "try{",
                  "    tests[\"Verifying that the status is 'registration failed'\"] = body.status === \"registration failed\";",
                  "    tests[\"Verifying that the failure reason is 'Invalid Fields'\"] = body.failureReason === \"Invalid Fields\";",
                  "    tests[\"Verifying that the invalid fields are listed in the response\"] = body.invalidFields.mobileNumber === \"Phone number must be numeric\";",
                  "}",
                  "catch(err){",
                  "  tests[\"Data in response does not exist\"] = false;  ",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Generating Random Email address to pass into the data so that user duplication does not happen",
                  "function makeEmail() {",
                  "  var strValues = \"qpotvghysbnxui56z\";",
                  "  var strEmail = \"\";",
                  "  var strTmp;",
                  "  for (var i = 0; i < 10; i++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strTmp = \"\";",
                  "  strEmail = strEmail + \"@\";",
                  "  for (var j = 0; j < 8; j++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strEmail = strEmail + \"esbpii.com\";",
                  "  return strEmail;",
                  "}",
                  "",
                  "//Setting up the random email to an environment variable",
                  "postman.setEnvironmentVariable(\"Email\", makeEmail());",
                  "",
                  "var firstName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);",
                  "",
                  "//Setting up the firstName to an environment variable",
                  "postman.setEnvironmentVariable(\"firstName\", firstName);",
                  "",
                  "var lastName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 8);",
                  "",
                  "//Setting up the lastName to an environment variable",
                  "postman.setEnvironmentVariable(\"lastName\", lastName);",
                  "",
                  "//Incrementing and Setting up the memberID to an environment variable",
                  "// var memberIdNumber = parseInt(environment.memberIdNumber)+1;",
                  "var memberIdNumber = Date.now();",
                  "postman.setEnvironmentVariable(\"memberIdNumber\", memberIdNumber);",
                  "postman.setEnvironmentVariable(\"memberID\", \"RA\"+memberIdNumber.toString());"
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"test street1\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"abcdefgh\",\r\n      \"homeNumber\":null,\r\n      \"workNumber\":null\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}\r\n"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "bd408854-2ace-d262-297d-c2c8decd64c7",
          "name": "RA-93 : Verify that Phone is stored as blank in VMMP stage DB with failure reason",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "try{",
                  "    tests[\"Verifying that Status in staging VMMP DB is Invalid\"] = body.getMemberInfoStagingOutput.results[0].STATUS === \"INVALID\";",
                  "    tests[\"Verifying that Failure reason in staging VMMP DB is Phone has invalid characters\"] = body.getMemberInfoStagingOutput.results[0].FAILURE_REASON === \"mobileNumber-Phone number must be numeric\";",
                  "    tests[\"Verifying that Mobile Phone in staging VMMP DB is null\"] = body.getMemberInfoStagingOutput.results[0].MOBILE === null;",
                  "    tests[\"Verifying that Work Phone in staging VMMP DB is null\"] = body.getMemberInfoStagingOutput.results[0].WORK_PHONE === null;",
                  "    tests[\"Verifying that Home Phone in staging VMMP DB is null\"] = body.getMemberInfoStagingOutput.results[0].HOME_PHONE === null;",
                  "}",
                  "catch(err){",
                  "  tests[\"Data in response does not exist\"] = false;  ",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "{{StageDB}}",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"email\":\"{{Email}}\"} "
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "7811d2dd-ef0a-b096-a5eb-867571a13c4c",
          "name": "RA-93 : Phone number - Home number has invalid characters",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 400 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 400\"] = responseCode.code === 400;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "try{",
                  "    tests[\"Verifying that the status is 'registration failed'\"] = body.status === \"registration failed\";",
                  "    tests[\"Verifying that the failure reason is 'Invalid Fields'\"] = body.failureReason === \"Invalid Fields\";",
                  "    tests[\"Verifying that the invalid fields are listed in the response\"] = body.invalidFields.homeNumber === \"Phone number must be numeric\";",
                  "}",
                  "catch(err){",
                  "  tests[\"Data in response does not exist\"] = false;  ",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Generating Random Email address to pass into the data so that user duplication does not happen",
                  "function makeEmail() {",
                  "  var strValues = \"qpotvghysbnxui56z\";",
                  "  var strEmail = \"\";",
                  "  var strTmp;",
                  "  for (var i = 0; i < 10; i++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strTmp = \"\";",
                  "  strEmail = strEmail + \"@\";",
                  "  for (var j = 0; j < 8; j++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strEmail = strEmail + \"esbpii.com\";",
                  "  return strEmail;",
                  "}",
                  "",
                  "//Setting up the random email to an environment variable",
                  "postman.setEnvironmentVariable(\"Email\", makeEmail());",
                  "",
                  "var firstName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);",
                  "",
                  "//Setting up the firstName to an environment variable",
                  "postman.setEnvironmentVariable(\"firstName\", firstName);",
                  "",
                  "var lastName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 8);",
                  "",
                  "//Setting up the lastName to an environment variable",
                  "postman.setEnvironmentVariable(\"lastName\", lastName);",
                  "",
                  "//Incrementing and Setting up the memberID to an environment variable",
                  "// var memberIdNumber = parseInt(environment.memberIdNumber)+1;",
                  "var memberIdNumber = Date.now();",
                  "postman.setEnvironmentVariable(\"memberIdNumber\", memberIdNumber);",
                  "postman.setEnvironmentVariable(\"memberID\", \"RA\"+memberIdNumber.toString());"
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"test street1\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":null,\r\n      \"homeNumber\":\"abcdefgh\",\r\n      \"workNumber\":null\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}\r\n"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "f02a9151-4e2e-5d81-43ac-98bd4fc8e0c2",
          "name": "RA-93 : Verify that Phone is stored as blank in VMMP stage DB with failure reason",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "try{",
                  "    tests[\"Verifying that Status in staging VMMP DB is Invalid\"] = body.getMemberInfoStagingOutput.results[0].STATUS === \"INVALID\";",
                  "    tests[\"Verifying that Failure reason in staging VMMP DB is Phone has invalid characters\"] = body.getMemberInfoStagingOutput.results[0].FAILURE_REASON === \"homeNumber-Phone number must be numeric\";",
                  "    tests[\"Verifying that Mobile Phone in staging VMMP DB is null\"] = body.getMemberInfoStagingOutput.results[0].MOBILE === null;",
                  "    tests[\"Verifying that Work Phone in staging VMMP DB is null\"] = body.getMemberInfoStagingOutput.results[0].WORK_PHONE === null;",
                  "    tests[\"Verifying that Home Phone in staging VMMP DB is null\"] = body.getMemberInfoStagingOutput.results[0].HOME_PHONE === null;",
                  "}",
                  "catch(err){",
                  "  tests[\"Data in response does not exist\"] = false;  ",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "{{StageDB}}",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"email\":\"{{Email}}\"} "
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "308087b6-1110-6e12-2c9a-cbd0a98c3a4d",
          "name": "RA-93 : Phone number - Work number has invalid characters",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 400 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 400\"] = responseCode.code === 400;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "try{",
                  "    tests[\"Verifying that the status is 'registration failed'\"] = body.status === \"registration failed\";",
                  "    tests[\"Verifying that the failure reason is 'Invalid Fields'\"] = body.failureReason === \"Invalid Fields\";",
                  "    tests[\"Verifying that the invalid fields are listed in the response\"] = body.invalidFields.workNumber === \"Phone number must be numeric\";",
                  "}",
                  "catch(err){",
                  "  tests[\"Data in response does not exist\"] = false;  ",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Generating Random Email address to pass into the data so that user duplication does not happen",
                  "function makeEmail() {",
                  "  var strValues = \"qpotvghysbnxui56z\";",
                  "  var strEmail = \"\";",
                  "  var strTmp;",
                  "  for (var i = 0; i < 10; i++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strTmp = \"\";",
                  "  strEmail = strEmail + \"@\";",
                  "  for (var j = 0; j < 8; j++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strEmail = strEmail + \"esbpii.com\";",
                  "  return strEmail;",
                  "}",
                  "",
                  "//Setting up the random email to an environment variable",
                  "postman.setEnvironmentVariable(\"Email\", makeEmail());",
                  "",
                  "var firstName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);",
                  "",
                  "//Setting up the firstName to an environment variable",
                  "postman.setEnvironmentVariable(\"firstName\", firstName);",
                  "",
                  "var lastName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 8);",
                  "",
                  "//Setting up the lastName to an environment variable",
                  "postman.setEnvironmentVariable(\"lastName\", lastName);",
                  "",
                  "//Incrementing and Setting up the memberID to an environment variable",
                  "// var memberIdNumber = parseInt(environment.memberIdNumber)+1;",
                  "var memberIdNumber = Date.now();",
                  "postman.setEnvironmentVariable(\"memberIdNumber\", memberIdNumber);",
                  "postman.setEnvironmentVariable(\"memberID\", \"RA\"+memberIdNumber.toString());"
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"test street1\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":null,\r\n      \"homeNumber\":null,\r\n      \"workNumber\":\"abcdefgh\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}\r\n"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "8695fa77-aec8-d453-a1b7-88358ddcd990",
          "name": "RA-93 : Verify that Phone is stored as blank in VMMP stage DB with failure reason",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "try{",
                  "    tests[\"Verifying that Status in staging VMMP DB is Invalid\"] = body.getMemberInfoStagingOutput.results[0].STATUS === \"INVALID\";",
                  "    tests[\"Verifying that Failure reason in staging VMMP DB is Phone has invalid characters\"] = body.getMemberInfoStagingOutput.results[0].FAILURE_REASON === \"workNumber-Phone number must be numeric\";",
                  "    tests[\"Verifying that Mobile Phone in staging VMMP DB is null\"] = body.getMemberInfoStagingOutput.results[0].MOBILE === null;",
                  "    tests[\"Verifying that Work Phone in staging VMMP DB is null\"] = body.getMemberInfoStagingOutput.results[0].WORK_PHONE === null;",
                  "    tests[\"Verifying that Home Phone in staging VMMP DB is null\"] = body.getMemberInfoStagingOutput.results[0].HOME_PHONE === null;",
                  "}",
                  "catch(err){",
                  "  tests[\"Data in response does not exist\"] = false;  ",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "{{StageDB}}",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"email\":\"{{Email}}\"} "
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "4e5f9d93-04e7-80d1-d305-5b369c1c6745",
          "name": "RA-93 : Phone number - Mobile number has more than 10 digits",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 400 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 400\"] = responseCode.code === 400;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "try{",
                  "    tests[\"Verifying that the status is 'registration failed'\"] = body.status === \"registration failed\";",
                  "    tests[\"Verifying that the failure reason is 'Invalid Fields'\"] = body.failureReason === \"Invalid Fields\";",
                  "    tests[\"Verifying that the invalid fields are listed in the response\"] = body.invalidFields.mobileNumber === \"Phone number must be 10 digits\";",
                  "}",
                  "catch(err){",
                  "  tests[\"Data in response does not exist\"] = false;  ",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Generating Random Email address to pass into the data so that user duplication does not happen",
                  "function makeEmail() {",
                  "  var strValues = \"qpotvghysbnxui56z\";",
                  "  var strEmail = \"\";",
                  "  var strTmp;",
                  "  for (var i = 0; i < 10; i++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strTmp = \"\";",
                  "  strEmail = strEmail + \"@\";",
                  "  for (var j = 0; j < 8; j++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strEmail = strEmail + \"esbpii.com\";",
                  "  return strEmail;",
                  "}",
                  "",
                  "//Setting up the random email to an environment variable",
                  "postman.setEnvironmentVariable(\"Email\", makeEmail());",
                  "",
                  "var firstName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);",
                  "",
                  "//Setting up the firstName to an environment variable",
                  "postman.setEnvironmentVariable(\"firstName\", firstName);",
                  "",
                  "var lastName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 8);",
                  "",
                  "//Setting up the lastName to an environment variable",
                  "postman.setEnvironmentVariable(\"lastName\", lastName);",
                  "",
                  "//Incrementing and Setting up the memberID to an environment variable",
                  "// var memberIdNumber = parseInt(environment.memberIdNumber)+1;",
                  "var memberIdNumber = Date.now();",
                  "postman.setEnvironmentVariable(\"memberIdNumber\", memberIdNumber);",
                  "postman.setEnvironmentVariable(\"memberID\", \"RA\"+memberIdNumber.toString());"
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"test street1\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"01234567890\",\r\n      \"homeNumber\":null,\r\n      \"workNumber\":null\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}\r\n"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "bd3a4d51-fe6e-dfdd-78d1-25762712c324",
          "name": "RA-93 : Verify that Phone is stored as blank in VMMP stage DB with failure reason",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "try{",
                  "    tests[\"Verifying that Status in staging VMMP DB is Invalid\"] = body.getMemberInfoStagingOutput.results[0].STATUS === \"INVALID\";",
                  "    tests[\"Verifying that Failure reason in staging VMMP DB is Phone has invalid characters\"] = body.getMemberInfoStagingOutput.results[0].FAILURE_REASON === \"mobileNumber-Phone number must be 10 digits\";",
                  "    tests[\"Verifying that Mobile Phone in staging VMMP DB is null\"] = body.getMemberInfoStagingOutput.results[0].MOBILE === null;",
                  "    tests[\"Verifying that Work Phone in staging VMMP DB is null\"] = body.getMemberInfoStagingOutput.results[0].WORK_PHONE === null;",
                  "    tests[\"Verifying that Home Phone in staging VMMP DB is null\"] = body.getMemberInfoStagingOutput.results[0].HOME_PHONE === null;",
                  "}",
                  "catch(err){",
                  "  tests[\"Data in response does not exist\"] = false;  ",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "{{StageDB}}",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"email\":\"{{Email}}\"} "
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "cd53d74c-afd5-c6f6-11a0-52e9fda335ca",
          "name": "RA-93 : Phone number - Home number has more than 10 digits",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 400 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 400\"] = responseCode.code === 400;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "try{",
                  "    tests[\"Verifying that the status is 'registration failed'\"] = body.status === \"registration failed\";",
                  "    tests[\"Verifying that the failure reason is 'Invalid Fields'\"] = body.failureReason === \"Invalid Fields\";",
                  "    tests[\"Verifying that the invalid fields are listed in the response\"] = body.invalidFields.homeNumber === \"Phone number must be 10 digits\";",
                  "}",
                  "catch(err){",
                  "  tests[\"Data in response does not exist\"] = false;  ",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Generating Random Email address to pass into the data so that user duplication does not happen",
                  "function makeEmail() {",
                  "  var strValues = \"qpotvghysbnxui56z\";",
                  "  var strEmail = \"\";",
                  "  var strTmp;",
                  "  for (var i = 0; i < 10; i++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strTmp = \"\";",
                  "  strEmail = strEmail + \"@\";",
                  "  for (var j = 0; j < 8; j++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strEmail = strEmail + \"esbpii.com\";",
                  "  return strEmail;",
                  "}",
                  "",
                  "//Setting up the random email to an environment variable",
                  "postman.setEnvironmentVariable(\"Email\", makeEmail());",
                  "",
                  "var firstName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);",
                  "",
                  "//Setting up the firstName to an environment variable",
                  "postman.setEnvironmentVariable(\"firstName\", firstName);",
                  "",
                  "var lastName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 8);",
                  "",
                  "//Setting up the lastName to an environment variable",
                  "postman.setEnvironmentVariable(\"lastName\", lastName);",
                  "",
                  "//Incrementing and Setting up the memberID to an environment variable",
                  "// var memberIdNumber = parseInt(environment.memberIdNumber)+1;",
                  "var memberIdNumber = Date.now();",
                  "postman.setEnvironmentVariable(\"memberIdNumber\", memberIdNumber);",
                  "postman.setEnvironmentVariable(\"memberID\", \"RA\"+memberIdNumber.toString());"
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"test street1\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":null,\r\n      \"homeNumber\":\"01234567890\",\r\n      \"workNumber\":null\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}\r\n"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "5f375613-3a5a-2705-a4d0-03abcf87de61",
          "name": "RA-93 : Verify that Phone is stored as blank in VMMP stage DB with failure reason",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "try{",
                  "    tests[\"Verifying that Status in staging VMMP DB is Invalid\"] = body.getMemberInfoStagingOutput.results[0].STATUS === \"INVALID\";",
                  "    tests[\"Verifying that Failure reason in staging VMMP DB is Phone has invalid characters\"] = body.getMemberInfoStagingOutput.results[0].FAILURE_REASON === \"homeNumber-Phone number must be 10 digits\";",
                  "    tests[\"Verifying that Mobile Phone in staging VMMP DB is null\"] = body.getMemberInfoStagingOutput.results[0].MOBILE === null;",
                  "    tests[\"Verifying that Work Phone in staging VMMP DB is null\"] = body.getMemberInfoStagingOutput.results[0].WORK_PHONE === null;",
                  "    tests[\"Verifying that Home Phone in staging VMMP DB is null\"] = body.getMemberInfoStagingOutput.results[0].HOME_PHONE === null;",
                  "}",
                  "catch(err){",
                  "  tests[\"Data in response does not exist\"] = false;  ",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "{{StageDB}}",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"email\":\"{{Email}}\"} "
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "8632b5a1-c36d-fed0-cfa0-fa43ac7950e6",
          "name": "RA-93 : Phone number - Work number has more than 10 digits",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 400 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 400\"] = responseCode.code === 400;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "try{",
                  "    tests[\"Verifying that the status is 'registration failed'\"] = body.status === \"registration failed\";",
                  "    tests[\"Verifying that the failure reason is 'Invalid Fields'\"] = body.failureReason === \"Invalid Fields\";",
                  "    tests[\"Verifying that the invalid fields are listed in the response\"] = body.invalidFields.workNumber === \"Phone number must be 10 digits\";",
                  "}",
                  "catch(err){",
                  "  tests[\"Data in response does not exist\"] = false;  ",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Generating Random Email address to pass into the data so that user duplication does not happen",
                  "function makeEmail() {",
                  "  var strValues = \"qpotvghysbnxui56z\";",
                  "  var strEmail = \"\";",
                  "  var strTmp;",
                  "  for (var i = 0; i < 10; i++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strTmp = \"\";",
                  "  strEmail = strEmail + \"@\";",
                  "  for (var j = 0; j < 8; j++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strEmail = strEmail + \"esbpii.com\";",
                  "  return strEmail;",
                  "}",
                  "",
                  "//Setting up the random email to an environment variable",
                  "postman.setEnvironmentVariable(\"Email\", makeEmail());",
                  "",
                  "var firstName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);",
                  "",
                  "//Setting up the firstName to an environment variable",
                  "postman.setEnvironmentVariable(\"firstName\", firstName);",
                  "",
                  "var lastName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 8);",
                  "",
                  "//Setting up the lastName to an environment variable",
                  "postman.setEnvironmentVariable(\"lastName\", lastName);",
                  "",
                  "//Incrementing and Setting up the memberID to an environment variable",
                  "// var memberIdNumber = parseInt(environment.memberIdNumber)+1;",
                  "var memberIdNumber = Date.now();",
                  "postman.setEnvironmentVariable(\"memberIdNumber\", memberIdNumber);",
                  "postman.setEnvironmentVariable(\"memberID\", \"RA\"+memberIdNumber.toString());"
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"test street1\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":null,\r\n      \"homeNumber\":null,\r\n      \"workNumber\":\"01234567890\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}\r\n"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "b6187265-b0ce-10b3-8dfb-8d2cdce8b6ab",
          "name": "RA-93 : Verify that Phone is stored as blank in VMMP stage DB with failure reason",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "try{",
                  "    tests[\"Verifying that Status in staging VMMP DB is Invalid\"] = body.getMemberInfoStagingOutput.results[0].STATUS === \"INVALID\";",
                  "    tests[\"Verifying that Failure reason in staging VMMP DB is Phone has invalid characters\"] = body.getMemberInfoStagingOutput.results[0].FAILURE_REASON === \"workNumber-Phone number must be 10 digits\";",
                  "    tests[\"Verifying that Mobile Phone in staging VMMP DB is null\"] = body.getMemberInfoStagingOutput.results[0].MOBILE === null;",
                  "    tests[\"Verifying that Work Phone in staging VMMP DB is null\"] = body.getMemberInfoStagingOutput.results[0].WORK_PHONE === null;",
                  "    tests[\"Verifying that Home Phone in staging VMMP DB is null\"] = body.getMemberInfoStagingOutput.results[0].HOME_PHONE === null;",
                  "}",
                  "catch(err){",
                  "  tests[\"Data in response does not exist\"] = false;  ",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "{{StageDB}}",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"email\":\"{{Email}}\"} "
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "22f00fe3-de77-b2ca-67a5-83d0ec2b336f",
          "name": "RA-93 : Phone number - Only Mobile number is sent",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 400 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "try{",
                  "    tests[\"Verifying that Enrolment is successfull\"] =  body.status === \"Data Accepted\";",
                  "}",
                  "catch(err){",
                  "  tests[\"Data in response does not exist\"] = false;  ",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Generating Random Email address to pass into the data so that user duplication does not happen",
                  "function makeEmail() {",
                  "  var strValues = \"qpotvghysbnxui56z\";",
                  "  var strEmail = \"\";",
                  "  var strTmp;",
                  "  for (var i = 0; i < 10; i++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strTmp = \"\";",
                  "  strEmail = strEmail + \"@\";",
                  "  for (var j = 0; j < 8; j++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strEmail = strEmail + \"esbpii.com\";",
                  "  return strEmail;",
                  "}",
                  "",
                  "//Setting up the random email to an environment variable",
                  "postman.setEnvironmentVariable(\"Email\", makeEmail());",
                  "",
                  "var firstName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);",
                  "",
                  "//Setting up the firstName to an environment variable",
                  "postman.setEnvironmentVariable(\"firstName\", firstName);",
                  "",
                  "var lastName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 8);",
                  "",
                  "//Setting up the lastName to an environment variable",
                  "postman.setEnvironmentVariable(\"lastName\", lastName);",
                  "",
                  "//Incrementing and Setting up the memberID to an environment variable",
                  "// var memberIdNumber = parseInt(environment.memberIdNumber)+1;",
                  "var memberIdNumber = Date.now();",
                  "postman.setEnvironmentVariable(\"memberIdNumber\", memberIdNumber);",
                  "postman.setEnvironmentVariable(\"memberID\", \"RA\"+memberIdNumber.toString());"
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"test street1\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":null,\r\n      \"workNumber\":null\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}\r\n"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "fb4183c5-eb83-9d49-df1e-5eb73a57ae5b",
          "name": "RA-93 : Verify that Mobile number is stored as sent in VMMP stage DB without any failure reasons",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "try{",
                  "    tests[\"Verifying that Status in staging VMMP DB is Invalid\"] = body.getMemberInfoStagingOutput.results[0].STATUS === \"VALID_SHORT_PROCESS\" || body.getMemberInfoStagingOutput.results[0].STATUS === null;",
                  "    tests[\"Verifying that Failure reason in staging VMMP DB is null\"] = body.getMemberInfoStagingOutput.results[0].FAILURE_REASON === null;",
                  "    tests[\"Verifying that Mobile Phone in staging VMMP DB is not null\"] = body.getMemberInfoStagingOutput.results[0].MOBILE === environment.mobileNumber;",
                  "    tests[\"Verifying that Work Phone in staging VMMP DB is null\"] = body.getMemberInfoStagingOutput.results[0].WORK_PHONE === null;",
                  "    tests[\"Verifying that Home Phone in staging VMMP DB is null\"] = body.getMemberInfoStagingOutput.results[0].HOME_PHONE === null;",
                  "}",
                  "catch(err){",
                  "  tests[\"Data in response does not exist\"] = false;  ",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "{{StageDB}}",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"email\":\"{{Email}}\"} "
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "5114a251-100b-c8ee-a6bb-a3ec94d53d99",
          "name": "RA-93 : Phone number - Only Work number is sent",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 400 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "try{",
                  "    tests[\"Verifying that Enrolment is successfull\"] =  body.status === \"Data Accepted\";",
                  "}",
                  "catch(err){",
                  "  tests[\"Data in response does not exist\"] = false;  ",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Generating Random Email address to pass into the data so that user duplication does not happen",
                  "function makeEmail() {",
                  "  var strValues = \"qpotvghysbnxui56z\";",
                  "  var strEmail = \"\";",
                  "  var strTmp;",
                  "  for (var i = 0; i < 10; i++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strTmp = \"\";",
                  "  strEmail = strEmail + \"@\";",
                  "  for (var j = 0; j < 8; j++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strEmail = strEmail + \"esbpii.com\";",
                  "  return strEmail;",
                  "}",
                  "",
                  "//Setting up the random email to an environment variable",
                  "postman.setEnvironmentVariable(\"Email\", makeEmail());",
                  "",
                  "var firstName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);",
                  "",
                  "//Setting up the firstName to an environment variable",
                  "postman.setEnvironmentVariable(\"firstName\", firstName);",
                  "",
                  "var lastName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 8);",
                  "",
                  "//Setting up the lastName to an environment variable",
                  "postman.setEnvironmentVariable(\"lastName\", lastName);",
                  "",
                  "//Incrementing and Setting up the memberID to an environment variable",
                  "// var memberIdNumber = parseInt(environment.memberIdNumber)+1;",
                  "var memberIdNumber = Date.now();",
                  "postman.setEnvironmentVariable(\"memberIdNumber\", memberIdNumber);",
                  "postman.setEnvironmentVariable(\"memberID\", \"RA\"+memberIdNumber.toString());"
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"test street1\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":null,\r\n      \"homeNumber\":null,\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}\r\n"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "d466e802-e678-e576-1543-9dbb23dd29a4",
          "name": "RA-93 : Verify that Work number is stored as sent in VMMP stage DB without any failure reasons",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "try{",
                  "    tests[\"Verifying that Status in staging VMMP DB is Invalid\"] = body.getMemberInfoStagingOutput.results[0].STATUS === \"VALID_SHORT_PROCESS\" || body.getMemberInfoStagingOutput.results[0].STATUS === null;",
                  "    tests[\"Verifying that Failure reason in staging VMMP DB is null\"] = body.getMemberInfoStagingOutput.results[0].FAILURE_REASON === null;",
                  "    tests[\"Verifying that Mobile Phone in staging VMMP DB is not null\"] = body.getMemberInfoStagingOutput.results[0].MOBILE === null;",
                  "    tests[\"Verifying that Work Phone in staging VMMP DB is null\"] = body.getMemberInfoStagingOutput.results[0].WORK_PHONE === environment.workNumber;",
                  "    tests[\"Verifying that Home Phone in staging VMMP DB is null\"] = body.getMemberInfoStagingOutput.results[0].HOME_PHONE === null;",
                  "}",
                  "catch(err){",
                  "  tests[\"Data in response does not exist\"] = false;  ",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "{{StageDB}}",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"email\":\"{{Email}}\"} "
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "41c6d6c5-6b14-d084-286d-9b493d811af8",
          "name": "RA-93 : Phone number - Only Home number is sent",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 400 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "try{",
                  "    tests[\"Verifying that Enrolment is successfull\"] =  body.status === \"Data Accepted\";",
                  "}",
                  "catch(err){",
                  "  tests[\"Data in response does not exist\"] = false;  ",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Generating Random Email address to pass into the data so that user duplication does not happen",
                  "function makeEmail() {",
                  "  var strValues = \"qpotvghysbnxui56z\";",
                  "  var strEmail = \"\";",
                  "  var strTmp;",
                  "  for (var i = 0; i < 10; i++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strTmp = \"\";",
                  "  strEmail = strEmail + \"@\";",
                  "  for (var j = 0; j < 8; j++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strEmail = strEmail + \"esbpii.com\";",
                  "  return strEmail;",
                  "}",
                  "",
                  "//Setting up the random email to an environment variable",
                  "postman.setEnvironmentVariable(\"Email\", makeEmail());",
                  "",
                  "var firstName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);",
                  "",
                  "//Setting up the firstName to an environment variable",
                  "postman.setEnvironmentVariable(\"firstName\", firstName);",
                  "",
                  "var lastName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 8);",
                  "",
                  "//Setting up the lastName to an environment variable",
                  "postman.setEnvironmentVariable(\"lastName\", lastName);",
                  "",
                  "//Incrementing and Setting up the memberID to an environment variable",
                  "// var memberIdNumber = parseInt(environment.memberIdNumber)+1;",
                  "var memberIdNumber = Date.now();",
                  "postman.setEnvironmentVariable(\"memberIdNumber\", memberIdNumber);",
                  "postman.setEnvironmentVariable(\"memberID\", \"RA\"+memberIdNumber.toString());"
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"test street1\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":null,\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":null\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}\r\n"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "43c366b8-0b3d-6bca-ef8f-13a98f5dbb39",
          "name": "RA-93 : Verify that Home number is stored as sent in VMMP stage DB without any failure reasons",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "try{",
                  "    tests[\"Verifying that Status in staging VMMP DB is Invalid\"] = body.getMemberInfoStagingOutput.results[0].STATUS === \"VALID_SHORT_PROCESS\" || body.getMemberInfoStagingOutput.results[0].STATUS === null;",
                  "    tests[\"Verifying that Failure reason in staging VMMP DB is null\"] = body.getMemberInfoStagingOutput.results[0].FAILURE_REASON === null;",
                  "    tests[\"Verifying that Mobile Phone in staging VMMP DB is not null\"] = body.getMemberInfoStagingOutput.results[0].MOBILE === null;",
                  "    tests[\"Verifying that Work Phone in staging VMMP DB is null\"] = body.getMemberInfoStagingOutput.results[0].WORK_PHONE === null;",
                  "    tests[\"Verifying that Home Phone in staging VMMP DB is null\"] = body.getMemberInfoStagingOutput.results[0].HOME_PHONE === environment.homeNumber;",
                  "}",
                  "catch(err){",
                  "  tests[\"Data in response does not exist\"] = false;  ",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "{{StageDB}}",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"email\":\"{{Email}}\"} "
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "08ca45c0-764b-52a7-ebf3-71028f5612ab",
          "name": "RA-93 : uuid is null",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 400 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 400\"] = responseCode.code === 400;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "try{",
                  "    tests[\"Verifying that the status is 'registration failed'\"] = body.status === \"registration failed\";",
                  "    tests[\"Verifying that the failure reason is 'Invalid Fields'\"] = body.failureReason === \"Invalid Fields\";",
                  "    tests[\"Verifying that the invalid fields are listed in the response\"] = body.invalidFields.uuid === \"uuid must exist. Please re-submit with a valid transaction ID.\";",
                  "}",
                  "catch(err){",
                  "  tests[\"Data in response does not exist\"] = false;  ",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Generating Random Email address to pass into the data so that user duplication does not happen",
                  "function makeEmail() {",
                  "  var strValues = \"qpotvghysbnxui56z\";",
                  "  var strEmail = \"\";",
                  "  var strTmp;",
                  "  for (var i = 0; i < 10; i++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strTmp = \"\";",
                  "  strEmail = strEmail + \"@\";",
                  "  for (var j = 0; j < 8; j++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strEmail = strEmail + \"esbpii.com\";",
                  "  return strEmail;",
                  "}",
                  "",
                  "//Setting up the random email to an environment variable",
                  "postman.setEnvironmentVariable(\"Email\", makeEmail());",
                  "",
                  "var firstName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);",
                  "",
                  "//Setting up the firstName to an environment variable",
                  "postman.setEnvironmentVariable(\"firstName\", firstName);",
                  "",
                  "var lastName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 8);",
                  "",
                  "//Setting up the lastName to an environment variable",
                  "postman.setEnvironmentVariable(\"lastName\", lastName);",
                  "",
                  "//Incrementing and Setting up the memberID to an environment variable",
                  "// var memberIdNumber = parseInt(environment.memberIdNumber)+1;",
                  "var memberIdNumber = Date.now();",
                  "postman.setEnvironmentVariable(\"memberIdNumber\", memberIdNumber);",
                  "postman.setEnvironmentVariable(\"memberID\", \"RA\"+memberIdNumber.toString());"
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":null\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "bd2f32cd-8476-8d0c-4f44-703ab67c57b1",
          "name": "RA-93 : Verify that the record is created in VMMP stage DB with a proper failure reason",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "try{",
                  "    tests[\"Verifying that Status in staging VMMP DB is Invalid\"] = body.getMemberInfoStagingOutput.results[0].STATUS === \"INVALID\";",
                  "    tests[\"Verifying that Failure reason in staging VMMP DB is uuid-uuid must exist. Please re-submit with a valid transaction ID.\"] = body.getMemberInfoStagingOutput.results[0].FAILURE_REASON === \"uuid-uuid must exist. Please re-submit with a valid transaction ID.\";",
                  "}",
                  "catch(err){",
                  "  tests[\"Data in response does not exist\"] = false;  ",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "{{StageDB}}",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"email\":\"{{Email}}\"} "
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "6e8bd7b6-ceaf-d70a-c256-8f293b636f99",
          "name": "RA-93 : uuid is invalid",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 400 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 400\"] = responseCode.code === 400;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "try{",
                  "    tests[\"Verifying that the status is 'registration failed'\"] = body.status === \"registration failed\";",
                  "    tests[\"Verifying that the failure reason is 'Invalid Fields'\"] = body.failureReason === \"Invalid Fields\";",
                  "    tests[\"Verifying that the invalid fields are listed in the response\"] = body.invalidFields.uuid === \"uuid format is incorrect. Please ensure uuid follows the correct format (8-4-4-4-12).\";",
                  "}",
                  "catch(err){",
                  "  tests[\"Data in response does not exist\"] = false;  ",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Generating Random Email address to pass into the data so that user duplication does not happen",
                  "function makeEmail() {",
                  "  var strValues = \"qpotvghysbnxui56z\";",
                  "  var strEmail = \"\";",
                  "  var strTmp;",
                  "  for (var i = 0; i < 10; i++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strTmp = \"\";",
                  "  strEmail = strEmail + \"@\";",
                  "  for (var j = 0; j < 8; j++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strEmail = strEmail + \"esbpii.com\";",
                  "  return strEmail;",
                  "}",
                  "",
                  "//Setting up the random email to an environment variable",
                  "postman.setEnvironmentVariable(\"Email\", makeEmail());",
                  "",
                  "var firstName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);",
                  "",
                  "//Setting up the firstName to an environment variable",
                  "postman.setEnvironmentVariable(\"firstName\", firstName);",
                  "",
                  "var lastName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 8);",
                  "",
                  "//Setting up the lastName to an environment variable",
                  "postman.setEnvironmentVariable(\"lastName\", lastName);",
                  "",
                  "//Incrementing and Setting up the memberID to an environment variable",
                  "// var memberIdNumber = parseInt(environment.memberIdNumber)+1;",
                  "var memberIdNumber = Date.now();",
                  "postman.setEnvironmentVariable(\"memberIdNumber\", memberIdNumber);",
                  "postman.setEnvironmentVariable(\"memberID\", \"RA\"+memberIdNumber.toString());"
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"1234-45-54658413521\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "68eeb2ce-14d0-c1a7-4c25-9947e7e1ea0f",
          "name": "RA-93 : Verify that the record is created in VMMP stage DB with a proper failure reason",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "try{",
                  "    tests[\"Verifying that Status in staging VMMP DB is Invalid\"] = body.getMemberInfoStagingOutput.results[0].STATUS === \"INVALID\";",
                  "    tests[\"Verifying that Failure reason in staging VMMP DB is uuid-uuid must exist. Please re-submit with a valid transaction ID.\"] = body.getMemberInfoStagingOutput.results[0].FAILURE_REASON === \"uuid-uuid format is incorrect. Please ensure uuid follows the correct format (8-4-4-4-12).\";",
                  "}",
                  "catch(err){",
                  "  tests[\"Data in response does not exist\"] = false;  ",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "{{StageDB}}",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"email\":\"{{Email}}\"} "
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "09d6b89b-17c0-7566-7f04-9a1d0fd9ef0d",
          "name": "RA-93 : Memership Type is incorrect",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 400 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 400\"] = responseCode.code === 400;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "try{",
                  "    tests[\"Verifying that the status is 'registration failed'\"] = body.status === \"registration failed\";",
                  "    tests[\"Verifying that the failure reason is 'Invalid Fields'\"] = body.failureReason === \"Invalid Fields\";",
                  "    tests[\"Verifying that the invalid fields are listed in the response\"] = body.invalidFields.memberType === \"Member Type does not match a valid value. Please re-submit with a valid Member Type.\";",
                  "}",
                  "catch(err){",
                  "  tests[\"Data in response does not exist\"] = false;  ",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Generating Random Email address to pass into the data so that user duplication does not happen",
                  "function makeEmail() {",
                  "  var strValues = \"qpotvghysbnxui56z\";",
                  "  var strEmail = \"\";",
                  "  var strTmp;",
                  "  for (var i = 0; i < 10; i++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strTmp = \"\";",
                  "  strEmail = strEmail + \"@\";",
                  "  for (var j = 0; j < 8; j++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strEmail = strEmail + \"esbpii.com\";",
                  "  return strEmail;",
                  "}",
                  "",
                  "//Setting up the random email to an environment variable",
                  "postman.setEnvironmentVariable(\"Email\", makeEmail());",
                  "",
                  "var firstName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);",
                  "",
                  "//Setting up the firstName to an environment variable",
                  "postman.setEnvironmentVariable(\"firstName\", firstName);",
                  "",
                  "var lastName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 8);",
                  "",
                  "//Setting up the lastName to an environment variable",
                  "postman.setEnvironmentVariable(\"lastName\", lastName);",
                  "",
                  "//Incrementing and Setting up the memberID to an environment variable",
                  "// var memberIdNumber = parseInt(environment.memberIdNumber)+1;",
                  "var memberIdNumber = Date.now();",
                  "postman.setEnvironmentVariable(\"memberIdNumber\", memberIdNumber);",
                  "postman.setEnvironmentVariable(\"memberID\", \"RA\"+memberIdNumber.toString());"
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP1\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "6f2c6048-1051-f821-bd68-322b2a27bfba",
          "name": "RA-93 : Verify that Member Type is stored as blank in VMMP stage DB with failure reason",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "try{",
                  "    tests[\"Verifying that Status in staging VMMP DB is Invalid\"] = body.getMemberInfoStagingOutput.results[0].STATUS === \"INVALID\";",
                  "    tests[\"Verifying that Failure reason in staging VMMP DB is Phone has invalid characters\"] = body.getMemberInfoStagingOutput.results[0].FAILURE_REASON === \"memberType-Member Type does not match a valid value. Please re-submit with a valid Member Type.\";",
                  "    tests[\"Verifying that Mobile Phone in staging VMMP DB is null\"] = body.getMemberInfoStagingOutput.results[0].MEMBER_TYPE === null;",
                  "}",
                  "catch(err){",
                  "  tests[\"Data in response does not exist\"] = false;  ",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "{{StageDB}}",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"email\":\"{{Email}}\"} "
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "99ac3ff9-3b2a-0939-b0c1-a22193df93b5",
          "name": "RA-93 : Memership Type has more than 200 characters",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 400 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 400\"] = responseCode.code === 400;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "try{",
                  "    tests[\"Verifying that the status is 'registration failed'\"] = body.status === \"registration failed\";",
                  "    tests[\"Verifying that the failure reason is 'Invalid Fields'\"] = body.failureReason === \"Invalid Fields\";",
                  "    tests[\"Verifying that the invalid fields are listed in the response\"] = body.invalidFields.membershipType === \"Member Type must be less than or equal to 200 characters\";",
                  "}",
                  "catch(err){",
                  "  tests[\"Data in response does not exist\"] = false;  ",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Generating Random Email address to pass into the data so that user duplication does not happen",
                  "function makeEmail() {",
                  "  var strValues = \"qpotvghysbnxui56z\";",
                  "  var strEmail = \"\";",
                  "  var strTmp;",
                  "  for (var i = 0; i < 10; i++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strTmp = \"\";",
                  "  strEmail = strEmail + \"@\";",
                  "  for (var j = 0; j < 8; j++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strEmail = strEmail + \"esbpii.com\";",
                  "  return strEmail;",
                  "}",
                  "",
                  "//Setting up the random email to an environment variable",
                  "postman.setEnvironmentVariable(\"Email\", makeEmail());",
                  "",
                  "var firstName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);",
                  "",
                  "//Setting up the firstName to an environment variable",
                  "postman.setEnvironmentVariable(\"firstName\", firstName);",
                  "",
                  "var lastName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 8);",
                  "",
                  "//Setting up the lastName to an environment variable",
                  "postman.setEnvironmentVariable(\"lastName\", lastName);",
                  "",
                  "//Incrementing and Setting up the memberID to an environment variable",
                  "// var memberIdNumber = parseInt(environment.memberIdNumber)+1;",
                  "var memberIdNumber = Date.now();",
                  "postman.setEnvironmentVariable(\"memberIdNumber\", memberIdNumber);",
                  "postman.setEnvironmentVariable(\"memberID\", \"RA\"+memberIdNumber.toString());"
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"qwertyuiopasdfghjklzxcvbnmwqertyuiopasdfghklwejkdfhjksdbrhfbdhbfajkdhbfaoduihuruinakjdflajdnjjjjsdfkqwertyuiopasdfghjklzxcvbnmwqertyuiopasdfghklwejkdfhjksdbrhfbdhbfajkdhbfaoduihuruinakjdflajdnjjjjsdfka\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "7879269a-2987-7aba-c24b-dc91ebf07003",
          "name": "RA-93 : Verify that Member Type is stored as blank in VMMP stage DB with failure reason",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "try{",
                  "    tests[\"Verifying that Status in staging VMMP DB is Invalid\"] = body.getMemberInfoStagingOutput.results[0].STATUS === \"INVALID\";",
                  "    tests[\"Verifying that Failure reason in staging VMMP DB is Phone has invalid characters\"] = body.getMemberInfoStagingOutput.results[0].FAILURE_REASON === \"membershipType-Member Type must be less than or equal to 200 characters\";",
                  "    tests[\"Verifying that Mobile Phone in staging VMMP DB is null\"] = body.getMemberInfoStagingOutput.results[0].MEMBER_TYPE === null;",
                  "}",
                  "catch(err){",
                  "  tests[\"Data in response does not exist\"] = false;  ",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "{{StageDB}}",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"email\":\"{{Email}}\"} "
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "e354e21d-7dd1-7e41-22b0-62ba05c0962d",
          "name": "RA-93 : Memership Type is null",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 400 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 400\"] = responseCode.code === 400;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "try{",
                  "    tests[\"Verifying that the status is 'registration failed'\"] = body.status === \"registration failed\";",
                  "    tests[\"Verifying that the failure reason is 'Invalid Fields'\"] = body.failureReason === \"Invalid Fields\";",
                  "    tests[\"Verifying that the invalid fields are listed in the response\"] = body.invalidFields.membershipType === \"Member Type must exist. Please re-submit with a valid Member Type.\";",
                  "}",
                  "catch(err){",
                  "  tests[\"Data in response does not exist\"] = false;  ",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Generating Random Email address to pass into the data so that user duplication does not happen",
                  "function makeEmail() {",
                  "  var strValues = \"qpotvghysbnxui56z\";",
                  "  var strEmail = \"\";",
                  "  var strTmp;",
                  "  for (var i = 0; i < 10; i++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strTmp = \"\";",
                  "  strEmail = strEmail + \"@\";",
                  "  for (var j = 0; j < 8; j++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strEmail = strEmail + \"esbpii.com\";",
                  "  return strEmail;",
                  "}",
                  "",
                  "//Setting up the random email to an environment variable",
                  "postman.setEnvironmentVariable(\"Email\", makeEmail());",
                  "",
                  "var firstName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);",
                  "",
                  "//Setting up the firstName to an environment variable",
                  "postman.setEnvironmentVariable(\"firstName\", firstName);",
                  "",
                  "var lastName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 8);",
                  "",
                  "//Setting up the lastName to an environment variable",
                  "postman.setEnvironmentVariable(\"lastName\", lastName);",
                  "",
                  "//Incrementing and Setting up the memberID to an environment variable",
                  "// var memberIdNumber = parseInt(environment.memberIdNumber)+1;",
                  "var memberIdNumber = Date.now();",
                  "postman.setEnvironmentVariable(\"memberIdNumber\", memberIdNumber);",
                  "postman.setEnvironmentVariable(\"memberID\", \"RA\"+memberIdNumber.toString());"
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":null\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "9c9cac6f-5ca5-7be8-0341-376402994f1b",
          "name": "RA-93 : Verify that Member Type is stored as blank in VMMP stage DB with failure reason",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "try{",
                  "    tests[\"Verifying that Status in staging VMMP DB is Invalid\"] = body.getMemberInfoStagingOutput.results[0].STATUS === \"INVALID\";",
                  "    tests[\"Verifying that Failure reason in staging VMMP DB is Phone has invalid characters\"] = body.getMemberInfoStagingOutput.results[0].FAILURE_REASON === \"membershipType-Member Type must exist. Please re-submit with a valid Member Type.\";",
                  "    tests[\"Verifying that Mobile Phone in staging VMMP DB is null\"] = body.getMemberInfoStagingOutput.results[0].MEMBER_TYPE === null;",
                  "}",
                  "catch(err){",
                  "  tests[\"Data in response does not exist\"] = false;  ",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "{{StageDB}}",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"email\":\"{{Email}}\"} "
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "034f35f0-b728-ee1a-81d1-9551552abb10",
          "name": "RA-93 :Last name has invalid characters",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 400 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 400\"] = responseCode.code === 400;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "try{",
                  "    tests[\"Verifying that the status is 'registration failed'\"] = body.status === \"registration failed\";",
                  "    tests[\"Verifying that the failure reason is 'Invalid Fields'\"] = body.failureReason === \"Invalid Fields\";",
                  "    tests[\"Verifying that the invalid fields are listed in the response\"] = body.invalidFields.lastName === \"Last name cannot contain numbers or special characters\";",
                  "}",
                  "catch(err){",
                  "  tests[\"Data in response does not exist\"] = false;  ",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Generating Random Email address to pass into the data so that user duplication does not happen",
                  "function makeEmail() {",
                  "  var strValues = \"qpotvghysbnxui56z\";",
                  "  var strEmail = \"\";",
                  "  var strTmp;",
                  "  for (var i = 0; i < 10; i++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strTmp = \"\";",
                  "  strEmail = strEmail + \"@\";",
                  "  for (var j = 0; j < 8; j++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strEmail = strEmail + \"esbpii.com\";",
                  "  return strEmail;",
                  "}",
                  "",
                  "//Setting up the random email to an environment variable",
                  "postman.setEnvironmentVariable(\"Email\", makeEmail());",
                  "",
                  "var firstName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);",
                  "",
                  "//Setting up the firstName to an environment variable",
                  "postman.setEnvironmentVariable(\"firstName\", firstName);",
                  "",
                  "var lastName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 8);",
                  "",
                  "//Setting up the lastName to an environment variable",
                  "postman.setEnvironmentVariable(\"lastName\", lastName);",
                  "",
                  "//Incrementing and Setting up the memberID to an environment variable",
                  "// var memberIdNumber = parseInt(environment.memberIdNumber)+1;",
                  "var memberIdNumber = Date.now();",
                  "postman.setEnvironmentVariable(\"memberIdNumber\", memberIdNumber);",
                  "postman.setEnvironmentVariable(\"memberID\", \"RA\"+memberIdNumber.toString());"
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"!@#$%^&\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"test street1\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "123a68dc-c83c-a0b3-7271-b668afb55100",
          "name": "RA-93 : Verify that Title is stored as blank in VMMP stage DB with failure reason",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "try{",
                  "    tests[\"Verifying that Status in staging VMMP DB is Invalid\"] = body.getMemberInfoStagingOutput.results[0].STATUS === \"INVALID\";",
                  "    tests[\"Verifying that Failure reason in staging VMMP DB is title-Title has invalid characters\"] = body.getMemberInfoStagingOutput.results[0].FAILURE_REASON === \"title-Title has invalid characters\";",
                  "    tests[\"Verifying that Title in staging VMMP DB is null\"] = body.getMemberInfoStagingOutput.results[0].TITLE === null;",
                  "}",
                  "catch(err){",
                  "  tests[\"Data in response does not exist\"] = false;  ",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "{{StageDB}}",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"email\":\"{{Email}}\"} "
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "1315433c-1847-3862-5be2-06fee0f758b9",
          "name": "RA-93 : Verify that Gender is stored as blank in VMMP stage DB with failure reason",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "try{",
                  "    tests[\"Verifying that Status in staging VMMP DB is Invalid\"] = body.getMemberInfoStagingOutput.results[0].STATUS === \"INVALID\";",
                  "    tests[\"Verifying that Failure reason in staging VMMP DB is gender-Gender must be M or F\"] = body.getMemberInfoStagingOutput.results[0].FAILURE_REASON === \"gender-Gender must be M or F\";",
                  "    tests[\"Verifying that Title in staging VMMP DB is null\"] = body.getMemberInfoStagingOutput.results[0].GENDER === null;",
                  "}",
                  "catch(err){",
                  "  tests[\"Data in response does not exist\"] = false;  ",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "{{StageDB}}",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"email\":\"{{Email}}\"} "
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "14dd3a0d-4abe-b91a-f97b-de40a78f2fb4",
          "name": "RA-93 :Last name has more than 50 characters",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 400 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 400\"] = responseCode.code === 400;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "try{",
                  "    tests[\"Verifying that the status is 'registration failed'\"] = body.status === \"registration failed\";",
                  "    tests[\"Verifying that the failure reason is 'Invalid Fields'\"] = body.failureReason === \"Invalid Fields\";",
                  "    tests[\"Verifying that the invalid fields are listed in the response\"] = body.invalidFields.lastName === \"Last name must be less than or equal to 50 characters.\";",
                  "}",
                  "catch(err){",
                  "  tests[\"Data in response does not exist\"] = false;  ",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Generating Random Email address to pass into the data so that user duplication does not happen",
                  "function makeEmail() {",
                  "  var strValues = \"qpotvghysbnxui56z\";",
                  "  var strEmail = \"\";",
                  "  var strTmp;",
                  "  for (var i = 0; i < 10; i++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strTmp = \"\";",
                  "  strEmail = strEmail + \"@\";",
                  "  for (var j = 0; j < 8; j++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strEmail = strEmail + \"esbpii.com\";",
                  "  return strEmail;",
                  "}",
                  "",
                  "//Setting up the random email to an environment variable",
                  "postman.setEnvironmentVariable(\"Email\", makeEmail());",
                  "",
                  "var firstName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);",
                  "",
                  "//Setting up the firstName to an environment variable",
                  "postman.setEnvironmentVariable(\"firstName\", firstName);",
                  "",
                  "var lastName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 8);",
                  "",
                  "//Setting up the lastName to an environment variable",
                  "postman.setEnvironmentVariable(\"lastName\", lastName);",
                  "",
                  "//Incrementing and Setting up the memberID to an environment variable",
                  "// var memberIdNumber = parseInt(environment.memberIdNumber)+1;",
                  "var memberIdNumber = Date.now();",
                  "postman.setEnvironmentVariable(\"memberIdNumber\", memberIdNumber);",
                  "postman.setEnvironmentVariable(\"memberID\", \"RA\"+memberIdNumber.toString());"
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"qwertyuioopasfdahsgdfdsjhdbvldfjgbfdughigkfjnskljss{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"test street1\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "15699f5e-abaf-e17f-0ae4-56b3b22c0269",
          "name": "RA-93 : Gender has invalid characters",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 400 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 400\"] = responseCode.code === 400;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "try{",
                  "    tests[\"Verifying that the status is 'registration failed'\"] = body.status === \"registration failed\";",
                  "    tests[\"Verifying that the failure reason is 'Invalid Fields'\"] = body.failureReason === \"Invalid Fields\";",
                  "    tests[\"Verifying that the invalid fields are listed in the response\"] = body.invalidFields.gender === \"Gender must be M or F\";",
                  "}",
                  "catch(err){",
                  "  tests[\"Data in response does not exist\"] = false;  ",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Generating Random Email address to pass into the data so that user duplication does not happen",
                  "function makeEmail() {",
                  "  var strValues = \"qpotvghysbnxui56z\";",
                  "  var strEmail = \"\";",
                  "  var strTmp;",
                  "  for (var i = 0; i < 10; i++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strTmp = \"\";",
                  "  strEmail = strEmail + \"@\";",
                  "  for (var j = 0; j < 8; j++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strEmail = strEmail + \"esbpii.com\";",
                  "  return strEmail;",
                  "}",
                  "",
                  "//Setting up the random email to an environment variable",
                  "postman.setEnvironmentVariable(\"Email\", makeEmail());",
                  "",
                  "var firstName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);",
                  "",
                  "//Setting up the firstName to an environment variable",
                  "postman.setEnvironmentVariable(\"firstName\", firstName);",
                  "",
                  "var lastName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 8);",
                  "",
                  "//Setting up the lastName to an environment variable",
                  "postman.setEnvironmentVariable(\"lastName\", lastName);",
                  "",
                  "//Incrementing and Setting up the memberID to an environment variable",
                  "// var memberIdNumber = parseInt(environment.memberIdNumber)+1;",
                  "var memberIdNumber = Date.now();",
                  "postman.setEnvironmentVariable(\"memberIdNumber\", memberIdNumber);",
                  "postman.setEnvironmentVariable(\"memberID\", \"RA\"+memberIdNumber.toString());"
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"1\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"test street1\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "1c2fc2bf-e17c-9797-85df-7e536f95c3db",
          "name": "RA-93 : Verify that Last Name is stored as blank in VMMP stage DB with failure reason",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "try{",
                  "    tests[\"Verifying that Status in staging VMMP DB is Invalid\"] = body.getMemberInfoStagingOutput.results[0].STATUS === \"INVALID\";",
                  "    tests[\"Verifying that Failure reason in staging VMMP DB is lastName-Last name cannot contain numbers or special characters\"] = body.getMemberInfoStagingOutput.results[0].FAILURE_REASON === \"lastName-Last name cannot contain numbers or special characters\";",
                  "    tests[\"Verifying that Title in staging VMMP DB is null\"] = body.getMemberInfoStagingOutput.results[0].LAST_NAME === null;",
                  "}",
                  "catch(err){",
                  "  tests[\"Data in response does not exist\"] = false;  ",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "{{StageDB}}",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"email\":\"{{Email}}\"} "
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "250fcd38-07bf-31ea-5956-c1c868bef270",
          "name": "RA-93 : MemberID has more than 30 characters",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 400 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 400\"] = responseCode.code === 400;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "try{",
                  "    tests[\"Verifying that the status is 'registration failed'\"] = body.status === \"registration failed\";",
                  "    tests[\"Verifying that the failure reason is 'Invalid Fields'\"] = body.failureReason === \"Invalid Fields\";",
                  "    tests[\"Verifying that the invalid fields are listed in the response\"] = body.invalidFields.memberId === \"Member ID must be less than or equal to 30 characters\";",
                  "}",
                  "catch(err){",
                  "  tests[\"Data in response does not exist\"] = false;  ",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Generating Random Email address to pass into the data so that user duplication does not happen",
                  "function makeEmail() {",
                  "  var strValues = \"qpotvghysbnxui56z\";",
                  "  var strEmail = \"\";",
                  "  var strTmp;",
                  "  for (var i = 0; i < 10; i++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strTmp = \"\";",
                  "  strEmail = strEmail + \"@\";",
                  "  for (var j = 0; j < 8; j++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strEmail = strEmail + \"esbpii.com\";",
                  "  return strEmail;",
                  "}",
                  "",
                  "//Setting up the random email to an environment variable",
                  "postman.setEnvironmentVariable(\"Email\", makeEmail());",
                  "",
                  "var firstName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);",
                  "",
                  "//Setting up the firstName to an environment variable",
                  "postman.setEnvironmentVariable(\"firstName\", firstName);",
                  "",
                  "var lastName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 8);",
                  "",
                  "//Setting up the lastName to an environment variable",
                  "postman.setEnvironmentVariable(\"lastName\", lastName);",
                  "",
                  "//Incrementing and Setting up the memberID to an environment variable",
                  "// var memberIdNumber = parseInt(environment.memberIdNumber)+1;",
                  "var memberIdNumber = Date.now();",
                  "postman.setEnvironmentVariable(\"memberIdNumber\", memberIdNumber);",
                  "postman.setEnvironmentVariable(\"memberID\", \"RA\"+memberIdNumber.toString());"
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"0123456789012345678901234567890\",\r\n    \"address\":{\r\n      \"line1\":\"test street1\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "270cd22f-eec1-bc96-2548-7d7c21a7b42e",
          "name": "RA-93 : Email is null",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 400 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 400\"] = responseCode.code === 400;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "try{",
                  "    tests[\"Verifying that the status is 'registration failed'\"] = body.status === \"registration failed\";",
                  "    tests[\"Verifying that the failure reason is 'Invalid Fields'\"] = body.failureReason === \"Invalid Fields\";",
                  "    tests[\"Verifying that the invalid fields are listed in the response\"] = body.invalidFields.email === \"Missing email address\";",
                  "}",
                  "catch(err){",
                  "  tests[\"Data in response does not exist\"] = false;  ",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Generating Random Email address to pass into the data so that user duplication does not happen",
                  "function makeEmail() {",
                  "  var strValues = \"qpotvghysbnxui56z\";",
                  "  var strEmail = \"\";",
                  "  var strTmp;",
                  "  for (var i = 0; i < 10; i++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strTmp = \"\";",
                  "  strEmail = strEmail + \"@\";",
                  "  for (var j = 0; j < 8; j++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strEmail = strEmail + \"esbpii.com\";",
                  "  return strEmail;",
                  "}",
                  "",
                  "//Setting up the random email to an environment variable",
                  "postman.setEnvironmentVariable(\"Email\", makeEmail());",
                  "",
                  "var firstName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);",
                  "",
                  "//Setting up the firstName to an environment variable",
                  "postman.setEnvironmentVariable(\"firstName\", firstName);",
                  "",
                  "var lastName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 8);",
                  "",
                  "//Setting up the lastName to an environment variable",
                  "postman.setEnvironmentVariable(\"lastName\", lastName);",
                  "",
                  "//Incrementing and Setting up the memberID to an environment variable",
                  "// var memberIdNumber = parseInt(environment.memberIdNumber)+1;",
                  "var memberIdNumber = Date.now();",
                  "postman.setEnvironmentVariable(\"memberIdNumber\", memberIdNumber);",
                  "postman.setEnvironmentVariable(\"memberID\", \"RA\"+memberIdNumber.toString());"
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":null,\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"test street1\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "3502dea4-524f-5ccb-dbd7-a33e9c703665",
          "name": "RA-93 : Verify that Gender is stored as blank in VMMP stage DB with failure reason",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "try{",
                  "    tests[\"Verifying that Status in staging VMMP DB is Invalid\"] = body.getMemberInfoStagingOutput.results[0].STATUS === \"INVALID\";",
                  "    tests[\"Verifying that Failure reason in staging VMMP DB is gender-Gender is a mandatory field and must be provided\"] = body.getMemberInfoStagingOutput.results[0].FAILURE_REASON === \"gender-Gender is a mandatory field and must be provided\";",
                  "    tests[\"Verifying that Title in staging VMMP DB is null\"] = body.getMemberInfoStagingOutput.results[0].GENDER === null;",
                  "}",
                  "catch(err){",
                  "  tests[\"Data in response does not exist\"] = false;  ",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "{{StageDB}}",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"email\":\"{{Email}}\"} "
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "3795ef1d-278a-44d0-8381-3115ef51ce39",
          "name": "RA-93 : Title has invalid characters",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 400 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 400\"] = responseCode.code === 400;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "try{",
                  "    tests[\"Verifying that the status is 'registration failed'\"] = body.status === \"registration failed\";",
                  "    tests[\"Verifying that the failure reason is 'Invalid Fields'\"] = body.failureReason === \"Invalid Fields\";",
                  "    tests[\"Verifying that the invalid fields are listed in the response\"] = body.invalidFields.title === \"Title has invalid characters\";",
                  "}",
                  "catch(err){",
                  "  tests[\"Data in response does not exist\"] = false;  ",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Generating Random Email address to pass into the data so that user duplication does not happen",
                  "function makeEmail() {",
                  "  var strValues = \"qpotvghysbnxui56z\";",
                  "  var strEmail = \"\";",
                  "  var strTmp;",
                  "  for (var i = 0; i < 10; i++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strTmp = \"\";",
                  "  strEmail = strEmail + \"@\";",
                  "  for (var j = 0; j < 8; j++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strEmail = strEmail + \"esbpii.com\";",
                  "  return strEmail;",
                  "}",
                  "",
                  "//Setting up the random email to an environment variable",
                  "postman.setEnvironmentVariable(\"Email\", makeEmail());",
                  "",
                  "var firstName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);",
                  "",
                  "//Setting up the firstName to an environment variable",
                  "postman.setEnvironmentVariable(\"firstName\", firstName);",
                  "",
                  "var lastName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 8);",
                  "",
                  "//Setting up the lastName to an environment variable",
                  "postman.setEnvironmentVariable(\"lastName\", lastName);",
                  "",
                  "//Incrementing and Setting up the memberID to an environment variable",
                  "// var memberIdNumber = parseInt(environment.memberIdNumber)+1;",
                  "var memberIdNumber = Date.now();",
                  "postman.setEnvironmentVariable(\"memberIdNumber\", memberIdNumber);",
                  "postman.setEnvironmentVariable(\"memberID\", \"RA\"+memberIdNumber.toString());"
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"member\":{\r\n    \"title\":\"123456789\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"test street1\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "3d61ac34-c1f3-4ee9-4df4-8a6a0368ff31",
          "name": "RA-93 : Verify that First Name is stored as blank in VMMP stage DB with failure reason as INVALID",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "try{",
                  "    tests[\"Verifying that Status in staging VMMP DB is Invalid\"] = body.getMemberInfoStagingOutput.results[0].STATUS === \"INVALID\";",
                  "    tests[\"Verifying that Failure reason in staging VMMP DB is firstName-First name cannot contain numbers or special characters\"] = body.getMemberInfoStagingOutput.results[0].FAILURE_REASON === \"firstName-First name cannot contain numbers or special characters\";",
                  "    tests[\"Verifying that First Name in staging VMMP DB is null\"] = body.getMemberInfoStagingOutput.results[0].FIRST_NAME === null;",
                  "}",
                  "catch(err){",
                  "  tests[\"Data in response does not exist\"] = false;  ",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "{{StageDB}}",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"email\":\"{{Email}}\"} "
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "3d8642e6-07e0-5564-e779-fe280f7262f7",
          "name": "RA-93 : Email has invalid characters",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 400 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 400\"] = responseCode.code === 400;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "try{",
                  "    tests[\"Verifying that the status is 'registration failed'\"] = body.status === \"registration failed\";",
                  "    tests[\"Verifying that the failure reason is 'Invalid Fields'\"] = body.failureReason === \"Invalid Fields\";",
                  "    tests[\"Verifying that the invalid fields are listed in the response\"] = body.invalidFields.email === \"email address contains invalid characters in domain name\";",
                  "}",
                  "catch(err){",
                  "  tests[\"Data in response does not exist\"] = false;  ",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Generating Random Email address to pass into the data so that user duplication does not happen",
                  "function makeEmail() {",
                  "  var strValues = \"qpotvghysbnxui56z\";",
                  "  var strEmail = \"\";",
                  "  var strTmp;",
                  "  for (var i = 0; i < 10; i++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strTmp = \"\";",
                  "  strEmail = strEmail + \"@\";",
                  "  for (var j = 0; j < 8; j++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strEmail = strEmail + \"esbpii.com\";",
                  "  return strEmail;",
                  "}",
                  "",
                  "//Setting up the random email to an environment variable",
                  "postman.setEnvironmentVariable(\"Email\", makeEmail());",
                  "",
                  "var firstName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);",
                  "",
                  "//Setting up the firstName to an environment variable",
                  "postman.setEnvironmentVariable(\"firstName\", firstName);",
                  "",
                  "var lastName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 8);",
                  "",
                  "//Setting up the lastName to an environment variable",
                  "postman.setEnvironmentVariable(\"lastName\", lastName);",
                  "",
                  "//Incrementing and Setting up the memberID to an environment variable",
                  "// var memberIdNumber = parseInt(environment.memberIdNumber)+1;",
                  "var memberIdNumber = Date.now();",
                  "postman.setEnvironmentVariable(\"memberIdNumber\", memberIdNumber);",
                  "postman.setEnvironmentVariable(\"memberID\", \"RA\"+memberIdNumber.toString());"
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"sdfgdgd@|\\\\.\\\\\\\\\\\\\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"test street1\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "5032c608-360d-fe5d-f271-2107d87b1701",
          "name": "RA-93 : Email has no @",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 400 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 400\"] = responseCode.code === 400;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "try{",
                  "    tests[\"Verifying that the status is 'registration failed'\"] = body.status === \"registration failed\";",
                  "    tests[\"Verifying that the failure reason is 'Invalid Fields'\"] = body.failureReason === \"Invalid Fields\";",
                  "    tests[\"Verifying that the invalid fields are listed in the response\"] = body.invalidFields.email === \"emailAddress must contain 1 '@' symbol\";",
                  "}",
                  "catch(err){",
                  "  tests[\"Data in response does not exist\"] = false;  ",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Generating Random Email address to pass into the data so that user duplication does not happen",
                  "function makeEmail() {",
                  "  var strValues = \"qpotvghysbnxui56z\";",
                  "  var strEmail = \"\";",
                  "  var strTmp;",
                  "  for (var i = 0; i < 10; i++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strTmp = \"\";",
                  "  strEmail = strEmail + \"@\";",
                  "  for (var j = 0; j < 8; j++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strEmail = strEmail + \"esbpii.com\";",
                  "  return strEmail;",
                  "}",
                  "",
                  "//Setting up the random email to an environment variable",
                  "postman.setEnvironmentVariable(\"Email\", makeEmail());",
                  "",
                  "var firstName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);",
                  "",
                  "//Setting up the firstName to an environment variable",
                  "postman.setEnvironmentVariable(\"firstName\", firstName);",
                  "",
                  "var lastName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 8);",
                  "",
                  "//Setting up the lastName to an environment variable",
                  "postman.setEnvironmentVariable(\"lastName\", lastName);",
                  "",
                  "//Incrementing and Setting up the memberID to an environment variable",
                  "// var memberIdNumber = parseInt(environment.memberIdNumber)+1;",
                  "var memberIdNumber = Date.now();",
                  "postman.setEnvironmentVariable(\"memberIdNumber\", memberIdNumber);",
                  "postman.setEnvironmentVariable(\"memberID\", \"RA\"+memberIdNumber.toString());"
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"abcdert\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"test street1\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "6b9a5341-a2b9-1247-feab-cf18abca726e",
          "name": "RA-93 : Verify that MemberID is stored as blank in VMMP stage DB with failure reason copy",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "try{",
                  "    tests[\"Verifying that Status in staging VMMP DB is Invalid\"] = body.getMemberInfoStagingOutput.results[0].STATUS === \"INVALID\";",
                  "    tests[\"Verifying that Failure reason in staging VMMP DB is memberId-Missing MemberID\"] = body.getMemberInfoStagingOutput.results[0].FAILURE_REASON === \"memberId-Member ID must be less than or equal to 30 characters\";",
                  "    tests[\"Verifying that NOMINATION_ID in staging VMMP DB is null\"] = body.getMemberInfoStagingOutput.results[0].NOMINATION_ID === null;",
                  "}",
                  "catch(err){",
                  "  tests[\"Data in response does not exist\"] = false;  ",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "{{StageDB}}",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"email\":\"{{Email}}\"} "
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "74479972-2322-a1f6-1809-83918a7c5fab",
          "name": "RA-93 : Title has more than 10 characters",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 400 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 400\"] = responseCode.code === 400;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "try{",
                  "    tests[\"Verifying that the status is 'registration failed'\"] = body.status === \"registration failed\";",
                  "    tests[\"Verifying that the failure reason is 'Invalid Fields'\"] = body.failureReason === \"Invalid Fields\";",
                  "    tests[\"Verifying that the invalid fields are listed in the response\"] = body.invalidFields.title === \"Title must be less than or equal to 10 characters\";",
                  "}",
                  "catch(err){",
                  "  tests[\"Data in response does not exist\"] = false;  ",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Generating Random Email address to pass into the data so that user duplication does not happen",
                  "function makeEmail() {",
                  "  var strValues = \"qpotvghysbnxui56z\";",
                  "  var strEmail = \"\";",
                  "  var strTmp;",
                  "  for (var i = 0; i < 10; i++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strTmp = \"\";",
                  "  strEmail = strEmail + \"@\";",
                  "  for (var j = 0; j < 8; j++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strEmail = strEmail + \"esbpii.com\";",
                  "  return strEmail;",
                  "}",
                  "",
                  "//Setting up the random email to an environment variable",
                  "postman.setEnvironmentVariable(\"Email\", makeEmail());",
                  "",
                  "var firstName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);",
                  "",
                  "//Setting up the firstName to an environment variable",
                  "postman.setEnvironmentVariable(\"firstName\", firstName);",
                  "",
                  "var lastName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 8);",
                  "",
                  "//Setting up the lastName to an environment variable",
                  "postman.setEnvironmentVariable(\"lastName\", lastName);",
                  "",
                  "//Incrementing and Setting up the memberID to an environment variable",
                  "// var memberIdNumber = parseInt(environment.memberIdNumber)+1;",
                  "var memberIdNumber = Date.now();",
                  "postman.setEnvironmentVariable(\"memberIdNumber\", memberIdNumber);",
                  "postman.setEnvironmentVariable(\"memberID\", \"RA\"+memberIdNumber.toString());"
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mrrrrrrrrrr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"test street1\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "7604e135-74f6-e7d4-369a-108ad3ea812d",
          "name": "RA-93 : Verify that Last Name is stored as blank in VMMP stage DB with failure reason",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "try{",
                  "    tests[\"Verifying that Status in staging VMMP DB is Invalid\"] = body.getMemberInfoStagingOutput.results[0].STATUS === \"INVALID\";",
                  "    tests[\"Verifying that Failure reason in staging VMMP DB is lastName-Missing last name\"] = body.getMemberInfoStagingOutput.results[0].FAILURE_REASON === \"lastName-Missing last name\";",
                  "    tests[\"Verifying that Title in staging VMMP DB is null\"] = body.getMemberInfoStagingOutput.results[0].LAST_NAME === null;",
                  "}",
                  "catch(err){",
                  "  tests[\"Data in response does not exist\"] = false;  ",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "{{StageDB}}",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"email\":\"{{Email}}\"} "
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "7665ec85-3286-30c1-717b-b697ca958704",
          "name": "RA-93 : Email has no '.'",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 400 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 400\"] = responseCode.code === 400;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "try{",
                  "    tests[\"Verifying that the status is 'registration failed'\"] = body.status === \"registration failed\";",
                  "    tests[\"Verifying that the failure reason is 'Invalid Fields'\"] = body.failureReason === \"Invalid Fields\";",
                  "    tests[\"Verifying that the invalid fields are listed in the response\"] = body.invalidFields.email === \"emailAddress must contain at least one '.'\";",
                  "}",
                  "catch(err){",
                  "  tests[\"Data in response does not exist\"] = false;  ",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Generating Random Email address to pass into the data so that user duplication does not happen",
                  "function makeEmail() {",
                  "  var strValues = \"qpotvghysbnxui56z\";",
                  "  var strEmail = \"\";",
                  "  var strTmp;",
                  "  for (var i = 0; i < 10; i++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strTmp = \"\";",
                  "  strEmail = strEmail + \"@\";",
                  "  for (var j = 0; j < 8; j++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strEmail = strEmail + \"esbpii.com\";",
                  "  return strEmail;",
                  "}",
                  "",
                  "//Setting up the random email to an environment variable",
                  "postman.setEnvironmentVariable(\"Email\", makeEmail());",
                  "",
                  "var firstName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);",
                  "",
                  "//Setting up the firstName to an environment variable",
                  "postman.setEnvironmentVariable(\"firstName\", firstName);",
                  "",
                  "var lastName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 8);",
                  "",
                  "//Setting up the lastName to an environment variable",
                  "postman.setEnvironmentVariable(\"lastName\", lastName);",
                  "",
                  "//Incrementing and Setting up the memberID to an environment variable",
                  "// var memberIdNumber = parseInt(environment.memberIdNumber)+1;",
                  "var memberIdNumber = Date.now();",
                  "postman.setEnvironmentVariable(\"memberIdNumber\", memberIdNumber);",
                  "postman.setEnvironmentVariable(\"memberID\", \"RA\"+memberIdNumber.toString());"
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"abcdert@com\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"test street1\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "8b798070-7d6f-1fdc-0fe1-c2bca6b7db5f",
          "name": "RA-93 : Gender is null",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 400 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 400\"] = responseCode.code === 400;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "try{",
                  "    tests[\"Verifying that the status is 'registration failed'\"] = body.status === \"registration failed\";",
                  "    tests[\"Verifying that the failure reason is 'Invalid Fields'\"] = body.failureReason === \"Invalid Fields\";",
                  "    tests[\"Verifying that the invalid fields are listed in the response\"] = body.invalidFields.gender === \"Gender is a mandatory field and must be provided\";",
                  "}",
                  "catch(err){",
                  "  tests[\"Data in response does not exist\"] = false;  ",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Generating Random Email address to pass into the data so that user duplication does not happen",
                  "function makeEmail() {",
                  "  var strValues = \"qpotvghysbnxui56z\";",
                  "  var strEmail = \"\";",
                  "  var strTmp;",
                  "  for (var i = 0; i < 10; i++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strTmp = \"\";",
                  "  strEmail = strEmail + \"@\";",
                  "  for (var j = 0; j < 8; j++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strEmail = strEmail + \"esbpii.com\";",
                  "  return strEmail;",
                  "}",
                  "",
                  "//Setting up the random email to an environment variable",
                  "postman.setEnvironmentVariable(\"Email\", makeEmail());",
                  "",
                  "var firstName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);",
                  "",
                  "//Setting up the firstName to an environment variable",
                  "postman.setEnvironmentVariable(\"firstName\", firstName);",
                  "",
                  "var lastName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 8);",
                  "",
                  "//Setting up the lastName to an environment variable",
                  "postman.setEnvironmentVariable(\"lastName\", lastName);",
                  "",
                  "//Incrementing and Setting up the memberID to an environment variable",
                  "// var memberIdNumber = parseInt(environment.memberIdNumber)+1;",
                  "var memberIdNumber = Date.now();",
                  "postman.setEnvironmentVariable(\"memberIdNumber\", memberIdNumber);",
                  "postman.setEnvironmentVariable(\"memberID\", \"RA\"+memberIdNumber.toString());"
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":null,\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"test street1\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "a2445027-bea3-afd4-3253-b0074ffb2587",
          "name": "RA-93 : Email has more than 120 characters",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 400 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 400\"] = responseCode.code === 400;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "try{",
                  "    tests[\"Verifying that the status is 'registration failed'\"] = body.status === \"registration failed\";",
                  "    tests[\"Verifying that the failure reason is 'Invalid Fields'\"] = body.failureReason === \"Invalid Fields\";",
                  "    tests[\"Verifying that the invalid fields are listed in the response\"] = body.invalidFields.email === \"Email address must be more than 6 and less than or equal to 120 characters\";",
                  "}",
                  "catch(err){",
                  "  tests[\"Data in response does not exist\"] = false;  ",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Generating Random Email address to pass into the data so that user duplication does not happen",
                  "function makeEmail() {",
                  "  var strValues = \"qpotvghysbnxui56z\";",
                  "  var strEmail = \"\";",
                  "  var strTmp;",
                  "  for (var i = 0; i < 10; i++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strTmp = \"\";",
                  "  strEmail = strEmail + \"@\";",
                  "  for (var j = 0; j < 8; j++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strEmail = strEmail + \"esbpii.com\";",
                  "  return strEmail;",
                  "}",
                  "",
                  "//Setting up the random email to an environment variable",
                  "postman.setEnvironmentVariable(\"Email\", makeEmail());",
                  "",
                  "var firstName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);",
                  "",
                  "//Setting up the firstName to an environment variable",
                  "postman.setEnvironmentVariable(\"firstName\", firstName);",
                  "",
                  "var lastName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 8);",
                  "",
                  "//Setting up the lastName to an environment variable",
                  "postman.setEnvironmentVariable(\"lastName\", lastName);",
                  "",
                  "//Incrementing and Setting up the memberID to an environment variable",
                  "// var memberIdNumber = parseInt(environment.memberIdNumber)+1;",
                  "var memberIdNumber = Date.now();",
                  "postman.setEnvironmentVariable(\"memberIdNumber\", memberIdNumber);",
                  "postman.setEnvironmentVariable(\"memberID\", \"RA\"+memberIdNumber.toString());"
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"whdbfdhbfdjhbgdkfjhbgkfvuydofiugnrltkjnyritnuglkjdfng;asdkrjgndfjknbuudifhgkldfjgnldardkfjcjkvndljkfgndfklgnaidfughiokuku\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"test street1\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "ab67c1ad-49d4-cf60-37a5-a54057a957b4",
          "name": "RA-93 : Email has @ as the first letter",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 400 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 400\"] = responseCode.code === 400;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "try{",
                  "    tests[\"Verifying that the status is 'registration failed'\"] = body.status === \"registration failed\";",
                  "    tests[\"Verifying that the failure reason is 'Invalid Fields'\"] = body.failureReason === \"Invalid Fields\";",
                  "    tests[\"Verifying that the invalid fields are listed in the response\"] = body.invalidFields.email === \"the first or last character of the Email address cannot be '@' or '.'\";",
                  "}",
                  "catch(err){",
                  "  tests[\"Data in response does not exist\"] = false;  ",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Generating Random Email address to pass into the data so that user duplication does not happen",
                  "function makeEmail() {",
                  "  var strValues = \"qpotvghysbnxui56z\";",
                  "  var strEmail = \"\";",
                  "  var strTmp;",
                  "  for (var i = 0; i < 10; i++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strTmp = \"\";",
                  "  strEmail = strEmail + \"@\";",
                  "  for (var j = 0; j < 8; j++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strEmail = strEmail + \"esbpii.com\";",
                  "  return strEmail;",
                  "}",
                  "",
                  "//Setting up the random email to an environment variable",
                  "postman.setEnvironmentVariable(\"Email\", makeEmail());",
                  "",
                  "var firstName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);",
                  "",
                  "//Setting up the firstName to an environment variable",
                  "postman.setEnvironmentVariable(\"firstName\", firstName);",
                  "",
                  "var lastName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 8);",
                  "",
                  "//Setting up the lastName to an environment variable",
                  "postman.setEnvironmentVariable(\"lastName\", lastName);",
                  "",
                  "//Incrementing and Setting up the memberID to an environment variable",
                  "// var memberIdNumber = parseInt(environment.memberIdNumber)+1;",
                  "var memberIdNumber = Date.now();",
                  "postman.setEnvironmentVariable(\"memberIdNumber\", memberIdNumber);",
                  "postman.setEnvironmentVariable(\"memberID\", \"RA\"+memberIdNumber.toString());"
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"@abcdert\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"test street1\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "cd49f9da-e3fe-bdaf-f078-69c56d7e1f23",
          "name": "RA-93 :First name has more than 50 characters",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 400 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 400\"] = responseCode.code === 400;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "try{",
                  "    tests[\"Verifying that the status is 'registration failed'\"] = body.status === \"registration failed\";",
                  "    tests[\"Verifying that the failure reason is 'Invalid Fields'\"] = body.failureReason === \"Invalid Fields\";",
                  "    tests[\"Verifying that the invalid fields are listed in the response\"] = body.invalidFields.firstName === \"First name must be less than or equal to 50 characters.\";",
                  "}",
                  "catch(err){",
                  "  tests[\"Data in response does not exist\"] = false;  ",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Generating Random Email address to pass into the data so that user duplication does not happen",
                  "function makeEmail() {",
                  "  var strValues = \"qpotvghysbnxui56z\";",
                  "  var strEmail = \"\";",
                  "  var strTmp;",
                  "  for (var i = 0; i < 10; i++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strTmp = \"\";",
                  "  strEmail = strEmail + \"@\";",
                  "  for (var j = 0; j < 8; j++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strEmail = strEmail + \"esbpii.com\";",
                  "  return strEmail;",
                  "}",
                  "",
                  "//Setting up the random email to an environment variable",
                  "postman.setEnvironmentVariable(\"Email\", makeEmail());",
                  "",
                  "var firstName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);",
                  "",
                  "//Setting up the firstName to an environment variable",
                  "postman.setEnvironmentVariable(\"firstName\", firstName);",
                  "",
                  "var lastName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 8);",
                  "",
                  "//Setting up the lastName to an environment variable",
                  "postman.setEnvironmentVariable(\"lastName\", lastName);",
                  "",
                  "//Incrementing and Setting up the memberID to an environment variable",
                  "// var memberIdNumber = parseInt(environment.memberIdNumber)+1;",
                  "var memberIdNumber = Date.now();",
                  "postman.setEnvironmentVariable(\"memberIdNumber\", memberIdNumber);",
                  "postman.setEnvironmentVariable(\"memberID\", \"RA\"+memberIdNumber.toString());"
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"qwertyuioopasfdahsgdfdsjhdbvldfjgbfdughigkfjnskljss\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"test street1\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "cf905b8b-ac67-2bc1-3d58-4f5037ffc8ff",
          "name": "RA-93 : Verify that Title is stored as blank in VMMP stage DB with failure reason",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "try{",
                  "    tests[\"Verifying that Status in staging VMMP DB is Invalid\"] = body.getMemberInfoStagingOutput.results[0].STATUS === \"INVALID\";",
                  "    tests[\"Verifying that Failure reason in staging VMMP DB is title-Title must be less than or equal to 10 characters\"] = body.getMemberInfoStagingOutput.results[0].FAILURE_REASON === \"title-Title must be less than or equal to 10 characters\";",
                  "    tests[\"Verifying that Title in staging VMMP DB is null\"] = body.getMemberInfoStagingOutput.results[0].TITLE === null;",
                  "}",
                  "catch(err){",
                  "  tests[\"Data in response does not exist\"] = false;  ",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "{{StageDB}}",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"email\":\"{{Email}}\"} "
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "e6520514-2b8c-68ef-29ca-1a36d8e4b4f5",
          "name": "RA-93 : Email has @ as the last letter",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 400 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 400\"] = responseCode.code === 400;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "try{",
                  "    tests[\"Verifying that the status is 'registration failed'\"] = body.status === \"registration failed\";",
                  "    tests[\"Verifying that the failure reason is 'Invalid Fields'\"] = body.failureReason === \"Invalid Fields\";",
                  "    tests[\"Verifying that the invalid fields are listed in the response\"] = body.invalidFields.email === \"the first or last character of the Email address cannot be '@' or '.'\";",
                  "}",
                  "catch(err){",
                  "  tests[\"Data in response does not exist\"] = false;  ",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Generating Random Email address to pass into the data so that user duplication does not happen",
                  "function makeEmail() {",
                  "  var strValues = \"qpotvghysbnxui56z\";",
                  "  var strEmail = \"\";",
                  "  var strTmp;",
                  "  for (var i = 0; i < 10; i++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strTmp = \"\";",
                  "  strEmail = strEmail + \"@\";",
                  "  for (var j = 0; j < 8; j++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strEmail = strEmail + \"esbpii.com\";",
                  "  return strEmail;",
                  "}",
                  "",
                  "//Setting up the random email to an environment variable",
                  "postman.setEnvironmentVariable(\"Email\", makeEmail());",
                  "",
                  "var firstName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);",
                  "",
                  "//Setting up the firstName to an environment variable",
                  "postman.setEnvironmentVariable(\"firstName\", firstName);",
                  "",
                  "var lastName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 8);",
                  "",
                  "//Setting up the lastName to an environment variable",
                  "postman.setEnvironmentVariable(\"lastName\", lastName);",
                  "",
                  "//Incrementing and Setting up the memberID to an environment variable",
                  "// var memberIdNumber = parseInt(environment.memberIdNumber)+1;",
                  "var memberIdNumber = Date.now();",
                  "postman.setEnvironmentVariable(\"memberIdNumber\", memberIdNumber);",
                  "postman.setEnvironmentVariable(\"memberID\", \"RA\"+memberIdNumber.toString());"
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"abcdert@\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"test street1\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "e9ca47d0-ed80-6ba7-9a11-75517bc1ecd8",
          "name": "RA-93 : Email has less than 6 characters",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 400 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 400\"] = responseCode.code === 400;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "try{",
                  "    tests[\"Verifying that the status is 'registration failed'\"] = body.status === \"registration failed\";",
                  "    tests[\"Verifying that the failure reason is 'Invalid Fields'\"] = body.failureReason === \"Invalid Fields\";",
                  "    tests[\"Verifying that the invalid fields are listed in the response\"] = body.invalidFields.email === \"Email address must be more than 6 and less than or equal to 120 characters\";",
                  "}",
                  "catch(err){",
                  "  tests[\"Data in response does not exist\"] = false;  ",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Generating Random Email address to pass into the data so that user duplication does not happen",
                  "function makeEmail() {",
                  "  var strValues = \"qpotvghysbnxui56z\";",
                  "  var strEmail = \"\";",
                  "  var strTmp;",
                  "  for (var i = 0; i < 10; i++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strTmp = \"\";",
                  "  strEmail = strEmail + \"@\";",
                  "  for (var j = 0; j < 8; j++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strEmail = strEmail + \"esbpii.com\";",
                  "  return strEmail;",
                  "}",
                  "",
                  "//Setting up the random email to an environment variable",
                  "postman.setEnvironmentVariable(\"Email\", makeEmail());",
                  "",
                  "var firstName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);",
                  "",
                  "//Setting up the firstName to an environment variable",
                  "postman.setEnvironmentVariable(\"firstName\", firstName);",
                  "",
                  "var lastName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 8);",
                  "",
                  "//Setting up the lastName to an environment variable",
                  "postman.setEnvironmentVariable(\"lastName\", lastName);",
                  "",
                  "//Incrementing and Setting up the memberID to an environment variable",
                  "// var memberIdNumber = parseInt(environment.memberIdNumber)+1;",
                  "var memberIdNumber = Date.now();",
                  "postman.setEnvironmentVariable(\"memberIdNumber\", memberIdNumber);",
                  "postman.setEnvironmentVariable(\"memberID\", \"RA\"+memberIdNumber.toString());"
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"abcde\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"test street1\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "f80c674a-56f9-0e35-1717-0d3ffea8bad3",
          "name": "RA-93 : Verify that Last Name is stored as blank in VMMP stage DB with failure reason",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "try{",
                  "    tests[\"Verifying that Status in staging VMMP DB is Invalid\"] = body.getMemberInfoStagingOutput.results[0].STATUS === \"INVALID\";",
                  "    tests[\"Verifying that Failure reason in staging VMMP DB is lastName-Last name must be less than or equal to 50 characters.\"] = body.getMemberInfoStagingOutput.results[0].FAILURE_REASON === \"lastName-Last name must be less than or equal to 50 characters.\";",
                  "    tests[\"Verifying that Title in staging VMMP DB is null\"] = body.getMemberInfoStagingOutput.results[0].LAST_NAME === null;",
                  "}",
                  "catch(err){",
                  "  tests[\"Data in response does not exist\"] = false;  ",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "{{StageDB}}",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"email\":\"{{Email}}\"} "
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "fa981d29-330c-e98c-0692-9392b0de079e",
          "name": "RA-93 : Verify that First Name is stored as blank in VMMP stage DB with failure reason as INVALID",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "try{",
                  "    tests[\"Verifying that Status in staging VMMP DB is Invalid\"] = body.getMemberInfoStagingOutput.results[0].STATUS === \"INVALID\";",
                  "    tests[\"Verifying that Failure reason in staging VMMP DB is firstName-First name must be less than or equal to 50 characters.\"] = body.getMemberInfoStagingOutput.results[0].FAILURE_REASON === \"firstName-First name must be less than or equal to 50 characters.\";",
                  "    tests[\"Verifying that First Name in staging VMMP DB is null\"] = body.getMemberInfoStagingOutput.results[0].FIRST_NAME === null;",
                  "}",
                  "catch(err){",
                  "  tests[\"Data in response does not exist\"] = false;  ",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "{{StageDB}}",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"email\":\"{{Email}}\"} "
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "fc49f626-15e4-afa0-1ccb-74f30a629980",
          "name": "RA-93 :Last name is null",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 400 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 400\"] = responseCode.code === 400;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "try{",
                  "    tests[\"Verifying that the status is 'registration failed'\"] = body.status === \"registration failed\";",
                  "    tests[\"Verifying that the failure reason is 'Invalid Fields'\"] = body.failureReason === \"Invalid Fields\";",
                  "    tests[\"Verifying that the invalid fields are listed in the response\"] = body.invalidFields.lastName === \"Missing last name\";",
                  "}",
                  "catch(err){",
                  "  tests[\"Data in response does not exist\"] = false;  ",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Generating Random Email address to pass into the data so that user duplication does not happen",
                  "function makeEmail() {",
                  "  var strValues = \"qpotvghysbnxui56z\";",
                  "  var strEmail = \"\";",
                  "  var strTmp;",
                  "  for (var i = 0; i < 10; i++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strTmp = \"\";",
                  "  strEmail = strEmail + \"@\";",
                  "  for (var j = 0; j < 8; j++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strEmail = strEmail + \"esbpii.com\";",
                  "  return strEmail;",
                  "}",
                  "",
                  "//Setting up the random email to an environment variable",
                  "postman.setEnvironmentVariable(\"Email\", makeEmail());",
                  "",
                  "var firstName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);",
                  "",
                  "//Setting up the firstName to an environment variable",
                  "postman.setEnvironmentVariable(\"firstName\", firstName);",
                  "",
                  "var lastName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 8);",
                  "",
                  "//Setting up the lastName to an environment variable",
                  "postman.setEnvironmentVariable(\"lastName\", lastName);",
                  "",
                  "//Incrementing and Setting up the memberID to an environment variable",
                  "// var memberIdNumber = parseInt(environment.memberIdNumber)+1;",
                  "var memberIdNumber = Date.now();",
                  "postman.setEnvironmentVariable(\"memberIdNumber\", memberIdNumber);",
                  "postman.setEnvironmentVariable(\"memberID\", \"RA\"+memberIdNumber.toString());"
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":null,\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"test street1\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "fd9e6a9a-cde3-7e33-c007-6127a5cc7dec",
          "name": "RA-93 :First name has invalid characters",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 400 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 400\"] = responseCode.code === 400;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "try{",
                  "    tests[\"Verifying that the status is 'registration failed'\"] = body.status === \"registration failed\";",
                  "    tests[\"Verifying that the failure reason is 'Invalid Fields'\"] = body.failureReason === \"Invalid Fields\";",
                  "    tests[\"Verifying that the invalid fields are listed in the response\"] = body.invalidFields.firstName === \"First name cannot contain numbers or special characters\";",
                  "}",
                  "catch(err){",
                  "  tests[\"Data in response does not exist\"] = false;  ",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Generating Random Email address to pass into the data so that user duplication does not happen",
                  "function makeEmail() {",
                  "  var strValues = \"qpotvghysbnxui56z\";",
                  "  var strEmail = \"\";",
                  "  var strTmp;",
                  "  for (var i = 0; i < 10; i++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strTmp = \"\";",
                  "  strEmail = strEmail + \"@\";",
                  "  for (var j = 0; j < 8; j++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strEmail = strEmail + \"esbpii.com\";",
                  "  return strEmail;",
                  "}",
                  "",
                  "//Setting up the random email to an environment variable",
                  "postman.setEnvironmentVariable(\"Email\", makeEmail());",
                  "",
                  "var firstName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);",
                  "",
                  "//Setting up the firstName to an environment variable",
                  "postman.setEnvironmentVariable(\"firstName\", firstName);",
                  "",
                  "var lastName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 8);",
                  "",
                  "//Setting up the lastName to an environment variable",
                  "postman.setEnvironmentVariable(\"lastName\", lastName);",
                  "",
                  "//Incrementing and Setting up the memberID to an environment variable",
                  "// var memberIdNumber = parseInt(environment.memberIdNumber)+1;",
                  "var memberIdNumber = Date.now();",
                  "postman.setEnvironmentVariable(\"memberIdNumber\", memberIdNumber);",
                  "postman.setEnvironmentVariable(\"memberID\", \"RA\"+memberIdNumber.toString());"
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"!@#$%^&*()\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"test street1\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "7582b332-dd94-0571-e2bd-7047ac94d999",
          "name": "RA-93 : Terms and Conditions not accepted",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 400 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 400\"] = responseCode.code === 400;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "try{",
                  "    tests[\"Verifying that the status is 'registration failed'\"] = body.status === \"registration failed\";",
                  "    tests[\"Verifying that the failure reason is 'Invalid Fields'\"] = body.failureReason === \"Invalid Fields\";",
                  "    tests[\"Verifying that the invalid fields are listed in the response\"] = body.invalidFields.acceptTnC === \"Cannot Proceed as Terms and Conditions have not been accepted\";",
                  "}",
                  "catch(err){",
                  "  tests[\"Data in response does not exist\"] = false;  ",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "",
                  "//Generating Random Email address to pass into the data so that user duplication does not happen",
                  "function makeEmail() {",
                  "  var strValues = \"qpotvghysbnxui56z\";",
                  "  var strEmail = \"\";",
                  "  var strTmp;",
                  "  for (var i = 0; i < 10; i++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strTmp = \"\";",
                  "  strEmail = strEmail + \"@\";",
                  "  for (var j = 0; j < 8; j++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strEmail = strEmail + \"esbpii.com\";",
                  "  return strEmail;",
                  "}",
                  "",
                  "",
                  "//Setting up the random email to an environment variable",
                  "postman.setEnvironmentVariable(\"Email\", makeEmail());",
                  "console.log(\"Email: \"+environment.Email);",
                  "",
                  "var firstName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);",
                  "",
                  "//Setting up the firstName to an environment variable",
                  "postman.setEnvironmentVariable(\"firstName\", firstName);",
                  "console.log(\"firstName: \"+environment.firstName);",
                  "",
                  "var lastName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 8);",
                  "",
                  "//Setting up the lastName to an environment variable",
                  "postman.setEnvironmentVariable(\"lastName\", lastName);",
                  "console.log(\"lastName: \"+environment.lastName);",
                  "",
                  "",
                  "//Incrementing and Setting up the memberID to an environment variable",
                  "// var memberIdNumber = parseInt(environment.memberIdNumber)+1;",
                  "var memberIdNumber = Date.now();",
                  "console.log(memberIdNumber);",
                  "postman.setEnvironmentVariable(\"memberIdNumber\", memberIdNumber);",
                  "postman.setEnvironmentVariable(\"memberID\", \"RA\"+memberIdNumber.toString());",
                  "console.log(\"memberID :\"+environment.memberID);",
                  ""
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"N\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "526a026f-84d4-6e3b-dcf6-3a3e07f51780",
      "name": "RA-255 : ESB API to Provide PII Data",
      "description": "AC1:\r\nScenario: ESB API to return PII data\r\nGiven a member has been enrolled in Vitality\r\nWhen a request is sent to ESB with one of the following details:\r\n1. MemberID (Nomination ID) and RelationshipID\r\n2. Email\r\n3. EntityID\r\n4. AIAVitalityNumber\r\n5. EntityID and AIAVitalityNumber\r\nThen the corresponding PII data should be returned\r\nAC2:\r\nScenario: ESB API to return PII data without Address and only one phone number\r\nGiven a member has been enrolled in Vitality with only one phone number and no address details\r\nWhen a request is sent to ESB with one of the following details:\r\n1. MemberID (Nomination ID) and RelationshipID\r\n2. Email\r\n3. EntityID\r\n4. AIAVitalityNumber\r\n5. EntityID and AIAVitalityNumber\r\nThen the corresponding PII data should be returned\r\nAC3:\r\nScenario: 404 Not Found when incorrect values are sent in the request\r\nGiven a member has been enrolled in Vitality\r\nWhen a request is sent to ESB with incrrect value for one of the following types:\r\n1. MemberID (Nomination ID) and RelationshipID\r\n2. Email\r\n3. EntityID\r\n4. AIAVitalityNumber\r\n5. EntityID and AIAVitalityNumber\r\nThen a 404 Not Found status should be retuturned\r\nOptionsAttachments",
      "item": [
        {
          "_postman_id": "27dc7145-b02e-9979-44cb-822316970920",
          "name": "AC 1 RA-153: Enrolling a Member - New Process",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "",
                  "",
                  "tests[\"Verifying that Enrolment is successfull\"] =  body.status === \"Data Accepted\";",
                  "",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "",
                  "//Generating Random Email address to pass into the data so that user duplication does not happen",
                  "function makeEmail() {",
                  "  var strValues = \"qpotvghysbnxui56z\";",
                  "  var strEmail = \"\";",
                  "  var strTmp;",
                  "  for (var i = 0; i < 10; i++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strTmp = \"\";",
                  "  strEmail = strEmail + \"@\";",
                  "  for (var j = 0; j < 8; j++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strEmail = strEmail + \"esbpii.com\";",
                  "  return strEmail;",
                  "}",
                  "",
                  "",
                  "//Setting up the random email to an environment variable",
                  "postman.setEnvironmentVariable(\"Email\", makeEmail());",
                  "console.log(\"Email: \"+environment.Email);",
                  "",
                  "var firstName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);",
                  "",
                  "//Setting up the firstName to an environment variable",
                  "postman.setEnvironmentVariable(\"firstName\", firstName);",
                  "console.log(\"firstName: \"+environment.firstName);",
                  "",
                  "var lastName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 8);",
                  "",
                  "//Setting up the lastName to an environment variable",
                  "postman.setEnvironmentVariable(\"lastName\", lastName);",
                  "console.log(\"lastName: \"+environment.lastName);",
                  "",
                  "",
                  "//Incrementing and Setting up the memberID to an environment variable",
                  "// var memberIdNumber = parseInt(environment.memberIdNumber)+1;",
                  "var memberIdNumber = Date.now();",
                  "console.log(memberIdNumber);",
                  "postman.setEnvironmentVariable(\"memberIdNumber\", memberIdNumber);",
                  "postman.setEnvironmentVariable(\"memberID\", \"RA\"+memberIdNumber.toString());",
                  "console.log(\"memberID :\"+environment.memberID);",
                  ""
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
            },
            "description": ""
          },
          "response": [
            {
              "id": "0a4108e4-387f-b96e-c0c3-c22a4ba1f6e6",
              "name": "response 2",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:07 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "237",
              "body": "{\"token\":\"a77eb61e-5dd3-4680-931e-49122ab21153\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "5f62b495-ada4-3b69-6252-f260c0132a16",
              "name": "response 2",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:07 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "237",
              "body": "{\"token\":\"a77eb61e-5dd3-4680-931e-49122ab21153\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "805a260e-35ea-5381-b9c0-23e104b6f459",
              "name": "response 1",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:13:56 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "215",
              "body": "{\"token\":\"39b8615a-307d-419f-a503-4d4fa6c7021d\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "8352b630-8fec-6d63-4d6d-c1a96b96a4eb",
              "name": "response 3",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:17 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "1830",
              "body": "{\"token\":\"1ed2d16e-9fc9-46ed-af8e-49e5b5207e79\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "84119b63-aec1-23be-61d8-17763e8ef2b6",
              "name": "error",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "key": "Connection",
                  "value": "Keep-Alive",
                  "name": "Connection",
                  "description": ""
                },
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "name": "Content-Type",
                  "description": ""
                },
                {
                  "key": "Date",
                  "value": "Wed, 14 Dec 2016 00:42:55 GMT",
                  "name": "Date",
                  "description": ""
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked",
                  "name": "Transfer-Encoding",
                  "description": ""
                },
                {
                  "key": "X-Backside-Transport",
                  "value": "OK OK",
                  "name": "X-Backside-Transport",
                  "description": ""
                },
                {
                  "key": "X-Client-IP",
                  "value": "10.61.38.184",
                  "name": "X-Client-IP",
                  "description": ""
                },
                {
                  "key": "X-Global-Transaction-ID",
                  "value": "348720",
                  "name": "X-Global-Transaction-ID",
                  "description": ""
                }
              ],
              "cookie": [],
              "responseTime": "1537",
              "body": "{\"response\":{}}"
            },
            {
              "id": "b7411ab5-f907-9d71-6427-2b0373f8fe5a",
              "name": "response 3",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:17 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "1830",
              "body": "{\"token\":\"1ed2d16e-9fc9-46ed-af8e-49e5b5207e79\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "ed64f8eb-50a7-6d7a-b48f-ad9b987233f1",
              "name": "error",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "key": "Connection",
                  "value": "Keep-Alive",
                  "name": "Connection",
                  "description": ""
                },
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "name": "Content-Type",
                  "description": ""
                },
                {
                  "key": "Date",
                  "value": "Wed, 14 Dec 2016 00:42:55 GMT",
                  "name": "Date",
                  "description": ""
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked",
                  "name": "Transfer-Encoding",
                  "description": ""
                },
                {
                  "key": "X-Backside-Transport",
                  "value": "OK OK",
                  "name": "X-Backside-Transport",
                  "description": ""
                },
                {
                  "key": "X-Client-IP",
                  "value": "10.61.38.184",
                  "name": "X-Client-IP",
                  "description": ""
                },
                {
                  "key": "X-Global-Transaction-ID",
                  "value": "348720",
                  "name": "X-Global-Transaction-ID",
                  "description": ""
                }
              ],
              "cookie": [],
              "responseTime": "1537",
              "body": "{\"response\":{}}"
            },
            {
              "id": "edd7fdec-80a2-d38f-2050-9bc9e492e810",
              "name": "response 1",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:13:56 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "215",
              "body": "{\"token\":\"39b8615a-307d-419f-a503-4d4fa6c7021d\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            }
          ]
        },
        {
          "_postman_id": "2e67b91e-fbff-0e0b-8a6c-0ec4e7e0d569",
          "name": "AC 1 Wait for enrolment to finish",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "{{password_ESB}}",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{testPackageURL}}/rest/restTestPackage.ws.sleep?seconds=200",
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {},
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "c09aec7c-3b9d-f3af-b98f-37008195c2da",
          "name": "AC 1 RA-147 : Verifying user has been added to UMS and is InActive Status",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonObject = xml2Json(responseBody);\r",
                  "\r",
                  "try\r",
                  "{\r",
                  "\r",
                  "\r",
                  "tests[\"Verifying that User status is Not Activated\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userStatus === \"I\";\r",
                  "\r",
                  "tests[\"Verifying that User ID is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userId === environment.Email ;\r",
                  "\r",
                  "tests[\"Verifying that Email is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.email === environment.Email ;\r",
                  "\r",
                  "tests[\"Verifying that First Name is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.givenName === environment.firstName ;\r",
                  "\r",
                  "tests[\"Verifying that Last name is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.surname === environment.lastName ;\r",
                  "\r",
                  "tests[\"Verifying that Member Type is as passed to UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.memberType === \"GROUP\" ;\r",
                  "\r",
                  "tests[\"Verifying that User Groups List is VITALITY_AWAITING_ACTIVATION\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userGroupsList === \"VITALITY_AWAITING_ACTIVATION\" ;\r",
                  "\r",
                  "\r",
                  "\r",
                  "//Setting up the token to an environment variable to be used in subsequent requests\r",
                  "\r",
                  "postman.setEnvironmentVariable(\"umsToken\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.token);\r",
                  "\r",
                  "postman.setEnvironmentVariable(\"aiaClientNumber\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaClientNumber);\r",
                  "postman.setEnvironmentVariable(\"aiaVitalityMemberNumber\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaVitalityMemberNumber);\r",
                  "postman.setEnvironmentVariable(\"aiaDsyPolicyNumber\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaDsyPolicyNumber);\r",
                  "\r",
                  "postman.setEnvironmentVariable(\"aiaVitalityId\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaVitalityId);\r",
                  "\r",
                  "\r",
                  "}\r",
                  "\r",
                  "\r",
                  "catch(err){\r",
                  "    \r",
                  "  tests[\"Data in response does not exist\"] = false;  \r",
                  "\r",
                  "\r",
                  "}\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "{{UmsURL}}/{{UMSContext}}/UsermanagementService",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "text/xml",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:ser=\"http://service.usermanagement.aiaa.com.au\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <ser:searchUserRequest>\n         <source>VITALITY</source>\n         <userType></userType>\n         <userDetails>\n            <userName></userName>\n            <userId></userId>\n            <userDN></userDN>\n            <email>{{Email}}</email>\n            <givenName></givenName>\n            <surname></surname>\n            <webChannel></webChannel>\n            <token></token>\n            <fundIdentifier></fundIdentifier>\n            <eligibilityAssessorEmail></eligibilityAssessorEmail>\n            <activationURL></activationURL>\n            <consentURL></consentURL>\n            <!--1 or more repetitions:-->\n            <userRolesList></userRolesList>\n            <title></title>\n            <dateOfBirth></dateOfBirth>\n            <gender></gender>\n            <addressLine1></addressLine1>\n            <addressLine2></addressLine2>\n            <suburb></suburb>\n            <state></state>\n            <postcode></postcode>\n            <country></country>\n            <mobilePhone></mobilePhone>\n            <workPhone></workPhone>\n            <homePhone></homePhone>\n            <fax></fax>\n            <isRetailLifeInsured></isRetailLifeInsured>\n            <passwordRequestDate></passwordRequestDate>\n            <password></password>\n            <passwordRequestCount></passwordRequestCount>\n            <aiaProposalNumber></aiaProposalNumber>\n            <aiaProposalWritingAdviser></aiaProposalWritingAdviser>\n            <aiaCCAppTnCAcceptedDate></aiaCCAppTnCAcceptedDate>\n            <aiaCCAppTnCVersion></aiaCCAppTnCVersion>\n            <!--1 or more repetitions:-->\n            <userGroupsList></userGroupsList>\n            <!--1 or more repetitions:-->\n            <userGroupsDNList></userGroupsDNList>\n            <memberType></memberType>\n            <residentialPostcode></residentialPostcode>\n            <userStatus></userStatus>\n            <aiaClientNumber></aiaClientNumber>\n            <aiaVitalityMemberNumber></aiaVitalityMemberNumber>\n            <aiaDsyPolicyNumber></aiaDsyPolicyNumber>\n            <aiaVitalityCobrandingInfo></aiaVitalityCobrandingInfo>\n         </userDetails>\n      </ser:searchUserRequest>\n   </soapenv:Body>\n</soapenv:Envelope>\n\n"
            },
            "description": "A/C:\r\nGiven that members activated their membership\r\nWhen ESB gets the action\r\nThen their membership will be activated in UMS"
          },
          "response": []
        },
        {
          "_postman_id": "22f11a6a-d723-b470-92af-60b47ea27039",
          "name": "AC 1 Get PII Data - memberId and relationshipName",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "//Verifing that the response time is less than the value declared in global  variable ",
                  "tests[\"Response time is less than \" + globals.responseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < globals.responseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "try{",
                  "    tests[\"Verifying that Title is Retrieved Correctly\"] = body.personalDetails.title === \"Mr\";",
                  "    tests[\"Verifying that First Name is Retrieved Correctly\"] = body.personalDetails.firstName === environment.firstName;",
                  "    tests[\"Verifying that Last Name is Retrieved Correctly\"] = body.personalDetails.lastName === environment.lastName;",
                  "    tests[\"Verifying that Gender is Retrieved Correctly\"] = body.personalDetails.gender === \"M\";",
                  "    tests[\"Verifying that Date Of Birth is Retrieved Correctly\"] = Date.create(body.personalDetails.dateOfBirth).is(Date.create(environment.dateOfBirth));",
                  "    tests[\"Verifying that Email is Retrieved Correctly\"] = body.personalDetails.email === environment.Email;",
                  "    tests[\"Verifying that Nomination ID is Retrieved Correctly\"] = body.personalDetails.nominationId === environment.memberID;",
                  "    ",
                  "    tests[\"Verifying that Address Line1 is Retrieved Correctly\"] = body.personalDetails.address.line1 === environment.memberIdNumber+\" Test Street\";",
                  "    tests[\"Verifying that Suburb is Retrieved Correctly\"] = body.personalDetails.address.suburb === \"Wiseman's Ferry\";",
                  "    tests[\"Verifying that State is Retrieved Correctly\"] = body.personalDetails.address.state === \"VIC\";",
                  "    tests[\"Verifying that Country is Retrieved Correctly\"] = body.personalDetails.address.country === \"Australia\";",
                  "    tests[\"Verifying that Postcode is Retrieved Correctly\"] = body.personalDetails.address.postcode === environment.postcode;",
                  "    ",
                  "    tests[\"Verifying that Mobile Number is Retrieved Correctly\"] = body.personalDetails.phone.mobileNumber === environment.mobileNumber;",
                  "    tests[\"Verifying that Home Number is Retrieved Correctly\"] = body.personalDetails.phone.homeNumber === environment.homeNumber;",
                  "    tests[\"Verifying that Work Number is Retrieved Correctly\"] = body.personalDetails.phone.workNumber === environment.workNumber;",
                  "}",
                  "catch(err)",
                  "{",
                  "    tests[\"Data does not exist\"] = false;",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{ESBURL}}/rest/aiaServices.rs.personalDetails.v1?memberId={{memberID}}&relationshipName={{relationshipName}}",
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "description": ""
          },
          "response": [
            {
              "id": "13194619-2e15-ea26-e741-730dbad89196",
              "name": "response 3",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaServices.rs.personalDetails.v1?memberId={{memberID}}&relationshipName={{relationshipName}}",
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:17 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "1830",
              "body": "{\"token\":\"1ed2d16e-9fc9-46ed-af8e-49e5b5207e79\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "327f0a8b-5462-3ce0-7934-a45edd3ed008",
              "name": "error",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaServices.rs.personalDetails.v1?memberId={{memberID}}&relationshipName={{relationshipName}}",
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "key": "Connection",
                  "value": "Keep-Alive",
                  "name": "Connection",
                  "description": ""
                },
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "name": "Content-Type",
                  "description": ""
                },
                {
                  "key": "Date",
                  "value": "Wed, 14 Dec 2016 00:42:55 GMT",
                  "name": "Date",
                  "description": ""
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked",
                  "name": "Transfer-Encoding",
                  "description": ""
                },
                {
                  "key": "X-Backside-Transport",
                  "value": "OK OK",
                  "name": "X-Backside-Transport",
                  "description": ""
                },
                {
                  "key": "X-Client-IP",
                  "value": "10.61.38.184",
                  "name": "X-Client-IP",
                  "description": ""
                },
                {
                  "key": "X-Global-Transaction-ID",
                  "value": "348720",
                  "name": "X-Global-Transaction-ID",
                  "description": ""
                }
              ],
              "cookie": [],
              "responseTime": "1537",
              "body": "{\"response\":{}}"
            },
            {
              "id": "43ec3e4d-a8eb-0a79-52cd-4345e8a0fa60",
              "name": "response 1",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaServices.rs.personalDetails.v1?memberId={{memberID}}&relationshipName={{relationshipName}}",
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:13:56 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "215",
              "body": "{\"token\":\"39b8615a-307d-419f-a503-4d4fa6c7021d\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "a828a638-9767-80d4-3f35-55f9075905d4",
              "name": "response 2",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaServices.rs.personalDetails.v1?memberId={{memberID}}&relationshipName={{relationshipName}}",
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:07 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "237",
              "body": "{\"token\":\"a77eb61e-5dd3-4680-931e-49122ab21153\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            }
          ]
        },
        {
          "_postman_id": "fb09ee74-f377-c43e-f5a4-f4d93f6d710b",
          "name": "AC 1 Get PII Data - email",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "//Verifing that the response time is less than the value declared in global  variable ",
                  "tests[\"Response time is less than \" + globals.responseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < globals.responseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "try{",
                  "    tests[\"Verifying that Title is Retrieved Correctly\"] = body.personalDetails.title === \"Mr\";",
                  "    tests[\"Verifying that First Name is Retrieved Correctly\"] = body.personalDetails.firstName === environment.firstName;",
                  "    tests[\"Verifying that Last Name is Retrieved Correctly\"] = body.personalDetails.lastName === environment.lastName;",
                  "    tests[\"Verifying that Gender is Retrieved Correctly\"] = body.personalDetails.gender === \"M\";",
                  "    tests[\"Verifying that Date Of Birth is Retrieved Correctly\"] = Date.create(body.personalDetails.dateOfBirth).is(Date.create(environment.dateOfBirth));",
                  "    tests[\"Verifying that Email is Retrieved Correctly\"] = body.personalDetails.email === environment.Email;",
                  "    tests[\"Verifying that Nomination ID is Retrieved Correctly\"] = body.personalDetails.nominationId === environment.memberID;",
                  "    ",
                  "    tests[\"Verifying that Address Line1 is Retrieved Correctly\"] = body.personalDetails.address.line1 === environment.memberIdNumber+\" Test Street\";",
                  "    tests[\"Verifying that Suburb is Retrieved Correctly\"] = body.personalDetails.address.suburb === \"Wiseman's Ferry\";",
                  "    tests[\"Verifying that State is Retrieved Correctly\"] = body.personalDetails.address.state === \"VIC\";",
                  "    tests[\"Verifying that Country is Retrieved Correctly\"] = body.personalDetails.address.country === \"Australia\";",
                  "    tests[\"Verifying that Postcode is Retrieved Correctly\"] = body.personalDetails.address.postcode === environment.postcode;",
                  "    ",
                  "    tests[\"Verifying that Mobile Number is Retrieved Correctly\"] = body.personalDetails.phone.mobileNumber === environment.mobileNumber;",
                  "    tests[\"Verifying that Home Number is Retrieved Correctly\"] = body.personalDetails.phone.homeNumber === environment.homeNumber;",
                  "    tests[\"Verifying that Work Number is Retrieved Correctly\"] = body.personalDetails.phone.workNumber === environment.workNumber;",
                  "}",
                  "catch(err)",
                  "{",
                  "    tests[\"Data does not exist\"] = false;",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{ESBURL}}/rest/aiaServices.rs.personalDetails.v1?email={{Email}}",
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "description": ""
          },
          "response": [
            {
              "id": "24b0e299-f594-869b-e39d-b4045da797e4",
              "name": "response 3",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaServices.rs.personalDetails.v1?email={{Email}}",
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:17 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "1830",
              "body": "{\"token\":\"1ed2d16e-9fc9-46ed-af8e-49e5b5207e79\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "868187cb-420e-db5d-19a1-11a6a8310255",
              "name": "error",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaServices.rs.personalDetails.v1?email={{Email}}",
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "key": "Connection",
                  "value": "Keep-Alive",
                  "name": "Connection",
                  "description": ""
                },
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "name": "Content-Type",
                  "description": ""
                },
                {
                  "key": "Date",
                  "value": "Wed, 14 Dec 2016 00:42:55 GMT",
                  "name": "Date",
                  "description": ""
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked",
                  "name": "Transfer-Encoding",
                  "description": ""
                },
                {
                  "key": "X-Backside-Transport",
                  "value": "OK OK",
                  "name": "X-Backside-Transport",
                  "description": ""
                },
                {
                  "key": "X-Client-IP",
                  "value": "10.61.38.184",
                  "name": "X-Client-IP",
                  "description": ""
                },
                {
                  "key": "X-Global-Transaction-ID",
                  "value": "348720",
                  "name": "X-Global-Transaction-ID",
                  "description": ""
                }
              ],
              "cookie": [],
              "responseTime": "1537",
              "body": "{\"response\":{}}"
            },
            {
              "id": "95fce737-9521-0566-3944-5ecdd805f067",
              "name": "response 2",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaServices.rs.personalDetails.v1?email={{Email}}",
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:07 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "237",
              "body": "{\"token\":\"a77eb61e-5dd3-4680-931e-49122ab21153\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "dd57fc3b-5231-07a1-140c-7b4c1dc41e83",
              "name": "response 1",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaServices.rs.personalDetails.v1?email={{Email}}",
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:13:56 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "215",
              "body": "{\"token\":\"39b8615a-307d-419f-a503-4d4fa6c7021d\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            }
          ]
        },
        {
          "_postman_id": "342be3d1-0d18-b253-7c9e-d7c7204bad58",
          "name": "AC 1 Get PII Data - aiaVitalityNo",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "//Verifing that the response time is less than the value declared in global  variable ",
                  "tests[\"Response time is less than \" + globals.responseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < globals.responseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "try{",
                  "    tests[\"Verifying that Title is Retrieved Correctly\"] = body.personalDetails.title === \"Mr\";",
                  "    tests[\"Verifying that First Name is Retrieved Correctly\"] = body.personalDetails.firstName === environment.firstName;",
                  "    tests[\"Verifying that Last Name is Retrieved Correctly\"] = body.personalDetails.lastName === environment.lastName;",
                  "    tests[\"Verifying that Gender is Retrieved Correctly\"] = body.personalDetails.gender === \"M\";",
                  "    tests[\"Verifying that Date Of Birth is Retrieved Correctly\"] = Date.create(body.personalDetails.dateOfBirth).is(Date.create(environment.dateOfBirth));",
                  "    tests[\"Verifying that Email is Retrieved Correctly\"] = body.personalDetails.email === environment.Email;",
                  "    tests[\"Verifying that Nomination ID is Retrieved Correctly\"] = body.personalDetails.nominationId === environment.memberID;",
                  "    ",
                  "    tests[\"Verifying that Address Line1 is Retrieved Correctly\"] = body.personalDetails.address.line1 === environment.memberIdNumber+\" Test Street\";",
                  "    tests[\"Verifying that Suburb is Retrieved Correctly\"] = body.personalDetails.address.suburb === \"Wiseman's Ferry\";",
                  "    tests[\"Verifying that State is Retrieved Correctly\"] = body.personalDetails.address.state === \"VIC\";",
                  "    tests[\"Verifying that Country is Retrieved Correctly\"] = body.personalDetails.address.country === \"Australia\";",
                  "    tests[\"Verifying that Postcode is Retrieved Correctly\"] = body.personalDetails.address.postcode === environment.postcode;",
                  "    ",
                  "    tests[\"Verifying that Mobile Number is Retrieved Correctly\"] = body.personalDetails.phone.mobileNumber === environment.mobileNumber;",
                  "    tests[\"Verifying that Home Number is Retrieved Correctly\"] = body.personalDetails.phone.homeNumber === environment.homeNumber;",
                  "    tests[\"Verifying that Work Number is Retrieved Correctly\"] = body.personalDetails.phone.workNumber === environment.workNumber;",
                  "}",
                  "catch(err)",
                  "{",
                  "    tests[\"Data does not exist\"] = false;",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{ESBURL}}/rest/aiaServices.rs.personalDetails.v1?aiaVitalityNumber={{aiaVitalityMemberNumber}}",
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "description": ""
          },
          "response": [
            {
              "id": "af2cdc6c-1fdd-36fb-b48c-d7039a6373de",
              "name": "response 1",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaServices.rs.personalDetails.v1?aiaVitalityNumber={{aiaVitalityMemberNumber}}",
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:13:56 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "215",
              "body": "{\"token\":\"39b8615a-307d-419f-a503-4d4fa6c7021d\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "c749633a-0d75-7924-24db-eadfab668089",
              "name": "error",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaServices.rs.personalDetails.v1?aiaVitalityNumber={{aiaVitalityMemberNumber}}",
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "key": "Connection",
                  "value": "Keep-Alive",
                  "name": "Connection",
                  "description": ""
                },
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "name": "Content-Type",
                  "description": ""
                },
                {
                  "key": "Date",
                  "value": "Wed, 14 Dec 2016 00:42:55 GMT",
                  "name": "Date",
                  "description": ""
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked",
                  "name": "Transfer-Encoding",
                  "description": ""
                },
                {
                  "key": "X-Backside-Transport",
                  "value": "OK OK",
                  "name": "X-Backside-Transport",
                  "description": ""
                },
                {
                  "key": "X-Client-IP",
                  "value": "10.61.38.184",
                  "name": "X-Client-IP",
                  "description": ""
                },
                {
                  "key": "X-Global-Transaction-ID",
                  "value": "348720",
                  "name": "X-Global-Transaction-ID",
                  "description": ""
                }
              ],
              "cookie": [],
              "responseTime": "1537",
              "body": "{\"response\":{}}"
            },
            {
              "id": "ddfd5c97-2d69-6393-fd39-9e09d9131638",
              "name": "response 3",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaServices.rs.personalDetails.v1?aiaVitalityNumber={{aiaVitalityMemberNumber}}",
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:17 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "1830",
              "body": "{\"token\":\"1ed2d16e-9fc9-46ed-af8e-49e5b5207e79\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "f3149fe8-0d1d-dba0-e82b-815031808471",
              "name": "response 2",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaServices.rs.personalDetails.v1?aiaVitalityNumber={{aiaVitalityMemberNumber}}",
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:07 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "237",
              "body": "{\"token\":\"a77eb61e-5dd3-4680-931e-49122ab21153\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            }
          ]
        },
        {
          "_postman_id": "1974699b-97cb-d70f-2d2b-5d394e5ca2d8",
          "name": "AC 1 Get PII Data - entityNo and aiaVitalityNo",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "//Verifing that the response time is less than the value declared in global  variable ",
                  "tests[\"Response time is less than \" + globals.responseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < globals.responseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "try{",
                  "    tests[\"Verifying that Title is Retrieved Correctly\"] = body.personalDetails.title === \"Mr\";",
                  "    tests[\"Verifying that First Name is Retrieved Correctly\"] = body.personalDetails.firstName === environment.firstName;",
                  "    tests[\"Verifying that Last Name is Retrieved Correctly\"] = body.personalDetails.lastName === environment.lastName;",
                  "    tests[\"Verifying that Gender is Retrieved Correctly\"] = body.personalDetails.gender === \"M\";",
                  "    tests[\"Verifying that Date Of Birth is Retrieved Correctly\"] = Date.create(body.personalDetails.dateOfBirth).is(Date.create(environment.dateOfBirth));",
                  "    tests[\"Verifying that Email is Retrieved Correctly\"] = body.personalDetails.email === environment.Email;",
                  "    tests[\"Verifying that Nomination ID is Retrieved Correctly\"] = body.personalDetails.nominationId === environment.memberID;",
                  "    ",
                  "    tests[\"Verifying that Address Line1 is Retrieved Correctly\"] = body.personalDetails.address.line1 === environment.memberIdNumber+\" Test Street\";",
                  "    tests[\"Verifying that Suburb is Retrieved Correctly\"] = body.personalDetails.address.suburb === \"Wiseman's Ferry\";",
                  "    tests[\"Verifying that State is Retrieved Correctly\"] = body.personalDetails.address.state === \"VIC\";",
                  "    tests[\"Verifying that Country is Retrieved Correctly\"] = body.personalDetails.address.country === \"Australia\";",
                  "    tests[\"Verifying that Postcode is Retrieved Correctly\"] = body.personalDetails.address.postcode === environment.postcode;",
                  "    ",
                  "    tests[\"Verifying that Mobile Number is Retrieved Correctly\"] = body.personalDetails.phone.mobileNumber === environment.mobileNumber;",
                  "    tests[\"Verifying that Home Number is Retrieved Correctly\"] = body.personalDetails.phone.homeNumber === environment.homeNumber;",
                  "    tests[\"Verifying that Work Number is Retrieved Correctly\"] = body.personalDetails.phone.workNumber === environment.workNumber;",
                  "}",
                  "catch(err)",
                  "{",
                  "    tests[\"Data does not exist\"] = false;",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "",
                  "//Generating Random Email address to pass into the data so that user duplication does not happen",
                  "",
                  "//Setting up the random email to an environment variable",
                  "// postman.setEnvironmentVariable(\"Email\", \"Sunitha.Mudumba@AIA.COM\");",
                  "",
                  "// //Setting up the firstName to an environment variable",
                  "// postman.setEnvironmentVariable(\"firstName\", \"Sunitha\");",
                  "",
                  "// //Setting up the lastName to an environment variable",
                  "// postman.setEnvironmentVariable(\"lastName\", \"Mudumba\");",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{ESBURL}}/rest/aiaServices.rs.personalDetails.v1?entityNumber={{aiaVitalityId}}&aiaVitalityNumber={{aiaVitalityMemberNumber}}",
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "description": ""
          },
          "response": [
            {
              "id": "07abcc1a-631c-7624-938b-5f81a6565985",
              "name": "error",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaServices.rs.personalDetails.v1?entityNumber={{aiaVitalityId}}&aiaVitalityNumber={{aiaVitalityMemberNumber}}",
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "key": "Connection",
                  "value": "Keep-Alive",
                  "name": "Connection",
                  "description": ""
                },
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "name": "Content-Type",
                  "description": ""
                },
                {
                  "key": "Date",
                  "value": "Wed, 14 Dec 2016 00:42:55 GMT",
                  "name": "Date",
                  "description": ""
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked",
                  "name": "Transfer-Encoding",
                  "description": ""
                },
                {
                  "key": "X-Backside-Transport",
                  "value": "OK OK",
                  "name": "X-Backside-Transport",
                  "description": ""
                },
                {
                  "key": "X-Client-IP",
                  "value": "10.61.38.184",
                  "name": "X-Client-IP",
                  "description": ""
                },
                {
                  "key": "X-Global-Transaction-ID",
                  "value": "348720",
                  "name": "X-Global-Transaction-ID",
                  "description": ""
                }
              ],
              "cookie": [],
              "responseTime": "1537",
              "body": "{\"response\":{}}"
            },
            {
              "id": "206909b3-325c-004e-e1ae-b80130bf06c4",
              "name": "response 1",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaServices.rs.personalDetails.v1?entityNumber={{aiaVitalityId}}&aiaVitalityNumber={{aiaVitalityMemberNumber}}",
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:13:56 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "215",
              "body": "{\"token\":\"39b8615a-307d-419f-a503-4d4fa6c7021d\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "72cae8c8-2bb4-99ab-543e-460b52d3a545",
              "name": "response 3",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaServices.rs.personalDetails.v1?entityNumber={{aiaVitalityId}}&aiaVitalityNumber={{aiaVitalityMemberNumber}}",
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:17 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "1830",
              "body": "{\"token\":\"1ed2d16e-9fc9-46ed-af8e-49e5b5207e79\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "a5c1e174-59ca-a6eb-f0d5-561bb38e554d",
              "name": "response 2",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaServices.rs.personalDetails.v1?entityNumber={{aiaVitalityId}}&aiaVitalityNumber={{aiaVitalityMemberNumber}}",
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:07 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "237",
              "body": "{\"token\":\"a77eb61e-5dd3-4680-931e-49122ab21153\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            }
          ]
        },
        {
          "_postman_id": "3a7799d0-7f76-63d9-fba5-585eca3e7bce",
          "name": "AC 1 Get PII Data - entityNo",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "//Verifing that the response time is less than the value declared in global  variable ",
                  "tests[\"Response time is less than \" + globals.responseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < globals.responseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "try{",
                  "    tests[\"Verifying that Title is Retrieved Correctly\"] = body.personalDetails.title === \"Mr\";",
                  "    tests[\"Verifying that First Name is Retrieved Correctly\"] = body.personalDetails.firstName === environment.firstName;",
                  "    tests[\"Verifying that Last Name is Retrieved Correctly\"] = body.personalDetails.lastName === environment.lastName;",
                  "    tests[\"Verifying that Gender is Retrieved Correctly\"] = body.personalDetails.gender === \"M\";",
                  "    tests[\"Verifying that Date Of Birth is Retrieved Correctly\"] = Date.create(body.personalDetails.dateOfBirth).is(Date.create(environment.dateOfBirth));",
                  "    tests[\"Verifying that Email is Retrieved Correctly\"] = body.personalDetails.email === environment.Email;",
                  "    tests[\"Verifying that Nomination ID is Retrieved Correctly\"] = body.personalDetails.nominationId === environment.memberID;",
                  "    ",
                  "    tests[\"Verifying that Address Line1 is Retrieved Correctly\"] = body.personalDetails.address.line1 === environment.memberIdNumber+\" Test Street\";",
                  "    tests[\"Verifying that Suburb is Retrieved Correctly\"] = body.personalDetails.address.suburb === \"Wiseman's Ferry\";",
                  "    tests[\"Verifying that State is Retrieved Correctly\"] = body.personalDetails.address.state === \"VIC\";",
                  "    tests[\"Verifying that Country is Retrieved Correctly\"] = body.personalDetails.address.country === \"Australia\";",
                  "    tests[\"Verifying that Postcode is Retrieved Correctly\"] = body.personalDetails.address.postcode === environment.postcode;",
                  "    ",
                  "    tests[\"Verifying that Mobile Number is Retrieved Correctly\"] = body.personalDetails.phone.mobileNumber === environment.mobileNumber;",
                  "    tests[\"Verifying that Home Number is Retrieved Correctly\"] = body.personalDetails.phone.homeNumber === environment.homeNumber;",
                  "    tests[\"Verifying that Work Number is Retrieved Correctly\"] = body.personalDetails.phone.workNumber === environment.workNumber;",
                  "}",
                  "catch(err)",
                  "{",
                  "    tests[\"Data does not exist\"] = false;",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{ESBURL}}/rest/aiaServices.rs.personalDetails.v1?entityNumber={{aiaVitalityId}}",
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "description": ""
          },
          "response": [
            {
              "id": "110651ad-8890-f67c-06ab-342dd7145523",
              "name": "response 1",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaServices.rs.personalDetails.v1?entityNumber={{aiaVitalityId}}",
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:13:56 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "215",
              "body": "{\"token\":\"39b8615a-307d-419f-a503-4d4fa6c7021d\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "4f36192d-9c85-5795-893f-bbb37224ebca",
              "name": "error",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaServices.rs.personalDetails.v1?entityNumber={{aiaVitalityId}}",
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "key": "Connection",
                  "value": "Keep-Alive",
                  "name": "Connection",
                  "description": ""
                },
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "name": "Content-Type",
                  "description": ""
                },
                {
                  "key": "Date",
                  "value": "Wed, 14 Dec 2016 00:42:55 GMT",
                  "name": "Date",
                  "description": ""
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked",
                  "name": "Transfer-Encoding",
                  "description": ""
                },
                {
                  "key": "X-Backside-Transport",
                  "value": "OK OK",
                  "name": "X-Backside-Transport",
                  "description": ""
                },
                {
                  "key": "X-Client-IP",
                  "value": "10.61.38.184",
                  "name": "X-Client-IP",
                  "description": ""
                },
                {
                  "key": "X-Global-Transaction-ID",
                  "value": "348720",
                  "name": "X-Global-Transaction-ID",
                  "description": ""
                }
              ],
              "cookie": [],
              "responseTime": "1537",
              "body": "{\"response\":{}}"
            },
            {
              "id": "58d1a5bd-b7ed-f3ad-5b57-917dc9f2085e",
              "name": "response 3",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaServices.rs.personalDetails.v1?entityNumber={{aiaVitalityId}}",
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:17 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "1830",
              "body": "{\"token\":\"1ed2d16e-9fc9-46ed-af8e-49e5b5207e79\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "80acd237-503e-afc6-6591-9485bd7e62af",
              "name": "response 2",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaServices.rs.personalDetails.v1?entityNumber={{aiaVitalityId}}",
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:07 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "237",
              "body": "{\"token\":\"a77eb61e-5dd3-4680-931e-49122ab21153\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            }
          ]
        },
        {
          "_postman_id": "5148ce7f-0964-f94a-7964-ff7b00711a63",
          "name": "AC 2 RA-153: Enrolling a Member - New Process - without address and only one phone no",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "",
                  "",
                  "tests[\"Verifying that Enrolment is successfull\"] =  body.status === \"Data Accepted\";",
                  "",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "",
                  "//Generating Random Email address to pass into the data so that user duplication does not happen",
                  "function makeEmail() {",
                  "  var strValues = \"qpotvghysbnxui56z\";",
                  "  var strEmail = \"\";",
                  "  var strTmp;",
                  "  for (var i = 0; i < 10; i++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strTmp = \"\";",
                  "  strEmail = strEmail + \"@\";",
                  "  for (var j = 0; j < 8; j++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strEmail = strEmail + \"testpii.com\";",
                  "  return strEmail;",
                  "}",
                  "",
                  "",
                  "//Setting up the random email to an environment variable",
                  "postman.setEnvironmentVariable(\"Email\", makeEmail());",
                  "",
                  "",
                  "var firstName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);",
                  "",
                  "//Setting up the firstName to an environment variable",
                  "postman.setEnvironmentVariable(\"firstName\", firstName);",
                  "",
                  "var lastName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 8);",
                  "",
                  "//Setting up the lastName to an environment variable",
                  "postman.setEnvironmentVariable(\"lastName\", lastName);",
                  "",
                  "",
                  "//Incrementing and Setting up the memberID to an environment variable",
                  "var memberIdNumber = Date.now();",
                  "postman.setEnvironmentVariable(\"memberIdNumber\", memberIdNumber);",
                  "postman.setEnvironmentVariable(\"memberID\", \"RA\"+memberIdNumber.toString());"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
            },
            "description": ""
          },
          "response": [
            {
              "id": "0903cd6c-583d-be90-9369-50ed3faf70db",
              "name": "response 1",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:13:56 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "215",
              "body": "{\"token\":\"39b8615a-307d-419f-a503-4d4fa6c7021d\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "acfc9446-ac73-37ac-fdf1-675616909c4a",
              "name": "response 2",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:07 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "237",
              "body": "{\"token\":\"a77eb61e-5dd3-4680-931e-49122ab21153\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "df5e6261-909c-fc5f-5bd3-8766e021f0e3",
              "name": "response 3",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:17 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "1830",
              "body": "{\"token\":\"1ed2d16e-9fc9-46ed-af8e-49e5b5207e79\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "e57146c0-e36d-8ad0-a330-939e59ea11bd",
              "name": "error",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "key": "Connection",
                  "value": "Keep-Alive",
                  "name": "Connection",
                  "description": ""
                },
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "name": "Content-Type",
                  "description": ""
                },
                {
                  "key": "Date",
                  "value": "Wed, 14 Dec 2016 00:42:55 GMT",
                  "name": "Date",
                  "description": ""
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked",
                  "name": "Transfer-Encoding",
                  "description": ""
                },
                {
                  "key": "X-Backside-Transport",
                  "value": "OK OK",
                  "name": "X-Backside-Transport",
                  "description": ""
                },
                {
                  "key": "X-Client-IP",
                  "value": "10.61.38.184",
                  "name": "X-Client-IP",
                  "description": ""
                },
                {
                  "key": "X-Global-Transaction-ID",
                  "value": "348720",
                  "name": "X-Global-Transaction-ID",
                  "description": ""
                }
              ],
              "cookie": [],
              "responseTime": "1537",
              "body": "{\"response\":{}}"
            }
          ]
        },
        {
          "_postman_id": "bb5aa6d3-3133-c906-9827-1a2da7d7db1e",
          "name": "AC 2 Wait for enrolment to finish copy",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{testPackageURL}}/rest/restTestPackage.ws.sleep?seconds=200",
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {},
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "91b66592-1827-9ada-a7c6-d0008c80f2d1",
          "name": "AC 2 RA-147 : Verifying user has been added to UMS and is InActive Status",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonObject = xml2Json(responseBody);\r",
                  "\r",
                  "try\r",
                  "{\r",
                  "\r",
                  "\r",
                  "tests[\"Verifying that User status is Not Activated\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userStatus === \"I\";\r",
                  "\r",
                  "tests[\"Verifying that User ID is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userId === environment.Email ;\r",
                  "\r",
                  "tests[\"Verifying that Email is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.email === environment.Email ;\r",
                  "\r",
                  "tests[\"Verifying that First Name is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.givenName === environment.firstName ;\r",
                  "\r",
                  "tests[\"Verifying that Last name is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.surname === environment.lastName ;\r",
                  "\r",
                  "tests[\"Verifying that Member Type is as passed to UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.memberType === \"GROUP\" ;\r",
                  "\r",
                  "tests[\"Verifying that User Groups List is VITALITY_AWAITING_ACTIVATION\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userGroupsList === \"VITALITY_AWAITING_ACTIVATION\" ;\r",
                  "\r",
                  "\r",
                  "\r",
                  "//Setting up the token to an environment variable to be used in subsequent requests\r",
                  "\r",
                  "postman.setEnvironmentVariable(\"umsToken\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.token);\r",
                  "\r",
                  "postman.setEnvironmentVariable(\"aiaClientNumber\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaClientNumber);\r",
                  "postman.setEnvironmentVariable(\"aiaVitalityMemberNumber\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaVitalityMemberNumber);\r",
                  "postman.setEnvironmentVariable(\"aiaDsyPolicyNumber\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaDsyPolicyNumber);\r",
                  "\r",
                  "postman.setEnvironmentVariable(\"aiaVitalityId\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaVitalityId);\r",
                  "\r",
                  "\r",
                  "}\r",
                  "\r",
                  "\r",
                  "catch(err){\r",
                  "    \r",
                  "  tests[\"Data in response does not exist\"] = false;  \r",
                  "\r",
                  "\r",
                  "}\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "{{UmsURL}}/{{UMSContext}}/UsermanagementService",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "text/xml",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:ser=\"http://service.usermanagement.aiaa.com.au\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <ser:searchUserRequest>\n         <source>VITALITY</source>\n         <userType></userType>\n         <userDetails>\n            <userName></userName>\n            <userId></userId>\n            <userDN></userDN>\n            <email>{{Email}}</email>\n            <givenName></givenName>\n            <surname></surname>\n            <webChannel></webChannel>\n            <token></token>\n            <fundIdentifier></fundIdentifier>\n            <eligibilityAssessorEmail></eligibilityAssessorEmail>\n            <activationURL></activationURL>\n            <consentURL></consentURL>\n            <!--1 or more repetitions:-->\n            <userRolesList></userRolesList>\n            <title></title>\n            <dateOfBirth></dateOfBirth>\n            <gender></gender>\n            <addressLine1></addressLine1>\n            <addressLine2></addressLine2>\n            <suburb></suburb>\n            <state></state>\n            <postcode></postcode>\n            <country></country>\n            <mobilePhone></mobilePhone>\n            <workPhone></workPhone>\n            <homePhone></homePhone>\n            <fax></fax>\n            <isRetailLifeInsured></isRetailLifeInsured>\n            <passwordRequestDate></passwordRequestDate>\n            <password></password>\n            <passwordRequestCount></passwordRequestCount>\n            <aiaProposalNumber></aiaProposalNumber>\n            <aiaProposalWritingAdviser></aiaProposalWritingAdviser>\n            <aiaCCAppTnCAcceptedDate></aiaCCAppTnCAcceptedDate>\n            <aiaCCAppTnCVersion></aiaCCAppTnCVersion>\n            <!--1 or more repetitions:-->\n            <userGroupsList></userGroupsList>\n            <!--1 or more repetitions:-->\n            <userGroupsDNList></userGroupsDNList>\n            <memberType></memberType>\n            <residentialPostcode></residentialPostcode>\n            <userStatus></userStatus>\n            <aiaClientNumber></aiaClientNumber>\n            <aiaVitalityMemberNumber></aiaVitalityMemberNumber>\n            <aiaDsyPolicyNumber></aiaDsyPolicyNumber>\n            <aiaVitalityCobrandingInfo></aiaVitalityCobrandingInfo>\n         </userDetails>\n      </ser:searchUserRequest>\n   </soapenv:Body>\n</soapenv:Envelope>\n\n"
            },
            "description": "A/C:\r\nGiven that members activated their membership\r\nWhen ESB gets the action\r\nThen their membership will be activated in UMS"
          },
          "response": []
        },
        {
          "_postman_id": "9221314c-c625-36b1-af3a-214dd186be1f",
          "name": "AC 2 Get PII Data - memberId and relationshipName No address and phone",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "//Verifing that the response time is less than the value declared in global  variable ",
                  "tests[\"Response time is less than \" + globals.responseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < globals.responseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "try{",
                  "    tests[\"Verifying that Title is Retrieved Correctly\"] = body.personalDetails.title === \"Mr\";",
                  "    tests[\"Verifying that First Name is Retrieved Correctly\"] = body.personalDetails.firstName === environment.firstName;",
                  "    tests[\"Verifying that Last Name is Retrieved Correctly\"] = body.personalDetails.lastName === environment.lastName;",
                  "    tests[\"Verifying that Gender is Retrieved Correctly\"] = body.personalDetails.gender === \"M\";",
                  "    tests[\"Verifying that Date Of Birth is Retrieved Correctly\"] = Date.create(body.personalDetails.dateOfBirth).is(Date.create(environment.dateOfBirth));",
                  "    tests[\"Verifying that Email is Retrieved Correctly\"] = body.personalDetails.email === environment.Email;",
                  "    tests[\"Verifying that Nomination ID is Retrieved Correctly\"] = body.personalDetails.nominationId === environment.memberID;",
                  "    ",
                  "    tests[\"Verifying that Address is not in the response\"] = body.personalDetails.address === undefined;",
                  "    ",
                  "    tests[\"Verifying that Mobile Number is Retrieved Correctly\"] = body.personalDetails.phone.mobileNumber === environment.mobileNumber;",
                  "    tests[\"Verifying that Home Number is not in the response\"] = body.personalDetails.phone.homeNumber === undefined;",
                  "    tests[\"Verifying that Work Number is not in the response\"] = body.personalDetails.phone.workNumber === undefined;",
                  "}",
                  "catch(err)",
                  "{",
                  "    tests[\"Data does not exist\"] = false;",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{ESBURL}}/rest/aiaServices.rs.personalDetails.v1?memberId={{memberID}}&relationshipName={{relationshipName}}  ",
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "description": ""
          },
          "response": [
            {
              "id": "2fdf580e-8ac6-a4ac-4db1-c943bb8e7ee3",
              "name": "error",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaServices.rs.personalDetails.v1?memberId={{memberID}}&relationshipName={{relationshipName}}  ",
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "key": "Connection",
                  "value": "Keep-Alive",
                  "name": "Connection",
                  "description": ""
                },
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "name": "Content-Type",
                  "description": ""
                },
                {
                  "key": "Date",
                  "value": "Wed, 14 Dec 2016 00:42:55 GMT",
                  "name": "Date",
                  "description": ""
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked",
                  "name": "Transfer-Encoding",
                  "description": ""
                },
                {
                  "key": "X-Backside-Transport",
                  "value": "OK OK",
                  "name": "X-Backside-Transport",
                  "description": ""
                },
                {
                  "key": "X-Client-IP",
                  "value": "10.61.38.184",
                  "name": "X-Client-IP",
                  "description": ""
                },
                {
                  "key": "X-Global-Transaction-ID",
                  "value": "348720",
                  "name": "X-Global-Transaction-ID",
                  "description": ""
                }
              ],
              "cookie": [],
              "responseTime": "1537",
              "body": "{\"response\":{}}"
            },
            {
              "id": "53164608-9289-3f51-fd7e-373c2efd6e11",
              "name": "response 1",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaServices.rs.personalDetails.v1?memberId={{memberID}}&relationshipName={{relationshipName}}  ",
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:13:56 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "215",
              "body": "{\"token\":\"39b8615a-307d-419f-a503-4d4fa6c7021d\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "a943195e-68fb-0b86-3353-b9c5328451cb",
              "name": "response 2",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaServices.rs.personalDetails.v1?memberId={{memberID}}&relationshipName={{relationshipName}}  ",
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:07 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "237",
              "body": "{\"token\":\"a77eb61e-5dd3-4680-931e-49122ab21153\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "d5db09b4-3590-9d3a-f6c7-fc652a6ae9aa",
              "name": "response 3",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaServices.rs.personalDetails.v1?memberId={{memberID}}&relationshipName={{relationshipName}}  ",
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:17 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "1830",
              "body": "{\"token\":\"1ed2d16e-9fc9-46ed-af8e-49e5b5207e79\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            }
          ]
        },
        {
          "_postman_id": "99d10484-704a-2158-f001-b4910fa81fc1",
          "name": "AC 2 Get PII Data - email  No address and phone",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "//Verifing that the response time is less than the value declared in global  variable ",
                  "tests[\"Response time is less than \" + globals.responseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < globals.responseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "try{",
                  "    tests[\"Verifying that Title is Retrieved Correctly\"] = body.personalDetails.title === \"Mr\";",
                  "    tests[\"Verifying that First Name is Retrieved Correctly\"] = body.personalDetails.firstName === environment.firstName;",
                  "    tests[\"Verifying that Last Name is Retrieved Correctly\"] = body.personalDetails.lastName === environment.lastName;",
                  "    tests[\"Verifying that Gender is Retrieved Correctly\"] = body.personalDetails.gender === \"M\";",
                  "    tests[\"Verifying that Date Of Birth is Retrieved Correctly\"] = Date.create(body.personalDetails.dateOfBirth).is(Date.create(environment.dateOfBirth));",
                  "    tests[\"Verifying that Email is Retrieved Correctly\"] = body.personalDetails.email === environment.Email;",
                  "    tests[\"Verifying that Nomination ID is Retrieved Correctly\"] = body.personalDetails.nominationId === environment.memberID;",
                  "    ",
                  "    tests[\"Verifying that Address is not in the response\"] = body.personalDetails.address === undefined;",
                  "    ",
                  "    tests[\"Verifying that Mobile Number is Retrieved Correctly\"] = body.personalDetails.phone.mobileNumber === environment.mobileNumber;",
                  "    tests[\"Verifying that Home Number is not in the response\"] = body.personalDetails.phone.homeNumber === undefined;",
                  "    tests[\"Verifying that Work Number is not in the response\"] = body.personalDetails.phone.workNumber === undefined;",
                  "}",
                  "catch(err)",
                  "{",
                  "    tests[\"Data does not exist\"] = false;",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{ESBURL}}/rest/aiaServices.rs.personalDetails.v1?email={{Email}}",
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "description": ""
          },
          "response": [
            {
              "id": "444b47fe-93ea-1020-f91b-034a32e1932d",
              "name": "error",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaServices.rs.personalDetails.v1?email={{Email}}",
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "key": "Connection",
                  "value": "Keep-Alive",
                  "name": "Connection",
                  "description": ""
                },
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "name": "Content-Type",
                  "description": ""
                },
                {
                  "key": "Date",
                  "value": "Wed, 14 Dec 2016 00:42:55 GMT",
                  "name": "Date",
                  "description": ""
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked",
                  "name": "Transfer-Encoding",
                  "description": ""
                },
                {
                  "key": "X-Backside-Transport",
                  "value": "OK OK",
                  "name": "X-Backside-Transport",
                  "description": ""
                },
                {
                  "key": "X-Client-IP",
                  "value": "10.61.38.184",
                  "name": "X-Client-IP",
                  "description": ""
                },
                {
                  "key": "X-Global-Transaction-ID",
                  "value": "348720",
                  "name": "X-Global-Transaction-ID",
                  "description": ""
                }
              ],
              "cookie": [],
              "responseTime": "1537",
              "body": "{\"response\":{}}"
            },
            {
              "id": "47e38589-cd67-81dc-b7a9-dff3887d1326",
              "name": "response 3",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaServices.rs.personalDetails.v1?email={{Email}}",
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:17 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "1830",
              "body": "{\"token\":\"1ed2d16e-9fc9-46ed-af8e-49e5b5207e79\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "4bcb6753-c3ee-7312-cd1d-219359e7531f",
              "name": "response 1",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaServices.rs.personalDetails.v1?email={{Email}}",
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:13:56 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "215",
              "body": "{\"token\":\"39b8615a-307d-419f-a503-4d4fa6c7021d\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "bc376c0c-92bc-3e0f-2183-34e24ce37542",
              "name": "response 2",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaServices.rs.personalDetails.v1?email={{Email}}",
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:07 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "237",
              "body": "{\"token\":\"a77eb61e-5dd3-4680-931e-49122ab21153\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            }
          ]
        },
        {
          "_postman_id": "199f8385-f1cd-519e-9e4e-d1b8f904bb97",
          "name": "AC 2 Get PII Data - aiaVitalityNo  No address and phone",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "//Verifing that the response time is less than the value declared in global  variable ",
                  "tests[\"Response time is less than \" + globals.responseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < globals.responseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "try{",
                  "    tests[\"Verifying that Title is Retrieved Correctly\"] = body.personalDetails.title === \"Mr\";",
                  "    tests[\"Verifying that First Name is Retrieved Correctly\"] = body.personalDetails.firstName === environment.firstName;",
                  "    tests[\"Verifying that Last Name is Retrieved Correctly\"] = body.personalDetails.lastName === environment.lastName;",
                  "    tests[\"Verifying that Gender is Retrieved Correctly\"] = body.personalDetails.gender === \"M\";",
                  "    tests[\"Verifying that Date Of Birth is Retrieved Correctly\"] = Date.create(body.personalDetails.dateOfBirth).is(Date.create(environment.dateOfBirth));",
                  "    tests[\"Verifying that Email is Retrieved Correctly\"] = body.personalDetails.email === environment.Email;",
                  "    tests[\"Verifying that Nomination ID is Retrieved Correctly\"] = body.personalDetails.nominationId === environment.memberID;",
                  "    ",
                  "    tests[\"Verifying that Address is not in the response\"] = body.personalDetails.address === undefined;",
                  "    ",
                  "    tests[\"Verifying that Mobile Number is Retrieved Correctly\"] = body.personalDetails.phone.mobileNumber === environment.mobileNumber;",
                  "    tests[\"Verifying that Home Number is not in the response\"] = body.personalDetails.phone.homeNumber === undefined;",
                  "    tests[\"Verifying that Work Number is not in the response\"] = body.personalDetails.phone.workNumber === undefined;",
                  "}",
                  "catch(err)",
                  "{",
                  "    tests[\"Data does not exist\"] = false;",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{ESBURL}}/rest/aiaServices.rs.personalDetails.v1?aiaVitalityNumber={{aiaVitalityMemberNumber}}",
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "description": ""
          },
          "response": [
            {
              "id": "08b698cf-5afc-7152-9ecb-ab1a3f54ef2e",
              "name": "response 3",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaServices.rs.personalDetails.v1?aiaVitalityNumber={{aiaVitalityMemberNumber}}",
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:17 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "1830",
              "body": "{\"token\":\"1ed2d16e-9fc9-46ed-af8e-49e5b5207e79\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "0e069b76-d662-28cb-4558-cb8b7b9711df",
              "name": "error",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaServices.rs.personalDetails.v1?aiaVitalityNumber={{aiaVitalityMemberNumber}}",
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "key": "Connection",
                  "value": "Keep-Alive",
                  "name": "Connection",
                  "description": ""
                },
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "name": "Content-Type",
                  "description": ""
                },
                {
                  "key": "Date",
                  "value": "Wed, 14 Dec 2016 00:42:55 GMT",
                  "name": "Date",
                  "description": ""
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked",
                  "name": "Transfer-Encoding",
                  "description": ""
                },
                {
                  "key": "X-Backside-Transport",
                  "value": "OK OK",
                  "name": "X-Backside-Transport",
                  "description": ""
                },
                {
                  "key": "X-Client-IP",
                  "value": "10.61.38.184",
                  "name": "X-Client-IP",
                  "description": ""
                },
                {
                  "key": "X-Global-Transaction-ID",
                  "value": "348720",
                  "name": "X-Global-Transaction-ID",
                  "description": ""
                }
              ],
              "cookie": [],
              "responseTime": "1537",
              "body": "{\"response\":{}}"
            },
            {
              "id": "2f238174-e26a-bc63-03c1-b3525ffb6a2b",
              "name": "response 2",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaServices.rs.personalDetails.v1?aiaVitalityNumber={{aiaVitalityMemberNumber}}",
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:07 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "237",
              "body": "{\"token\":\"a77eb61e-5dd3-4680-931e-49122ab21153\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "8a73f2bb-39e8-e7a5-c48d-11c13e266fea",
              "name": "response 1",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaServices.rs.personalDetails.v1?aiaVitalityNumber={{aiaVitalityMemberNumber}}",
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:13:56 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "215",
              "body": "{\"token\":\"39b8615a-307d-419f-a503-4d4fa6c7021d\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            }
          ]
        },
        {
          "_postman_id": "1c9d888d-c2cd-36b6-2abc-ee13b78613ec",
          "name": "AC 2 Get PII Data - entityNo and aiaVitalityNo  No address and phone",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "//Verifing that the response time is less than the value declared in global  variable ",
                  "tests[\"Response time is less than \" + globals.responseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < globals.responseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "try{",
                  "    tests[\"Verifying that Title is Retrieved Correctly\"] = body.personalDetails.title === \"Mr\";",
                  "    tests[\"Verifying that First Name is Retrieved Correctly\"] = body.personalDetails.firstName === environment.firstName;",
                  "    tests[\"Verifying that Last Name is Retrieved Correctly\"] = body.personalDetails.lastName === environment.lastName;",
                  "    tests[\"Verifying that Gender is Retrieved Correctly\"] = body.personalDetails.gender === \"M\";",
                  "    tests[\"Verifying that Date Of Birth is Retrieved Correctly\"] = Date.create(body.personalDetails.dateOfBirth).is(Date.create(environment.dateOfBirth));",
                  "    tests[\"Verifying that Email is Retrieved Correctly\"] = body.personalDetails.email === environment.Email;",
                  "    tests[\"Verifying that Nomination ID is Retrieved Correctly\"] = body.personalDetails.nominationId === environment.memberID;",
                  "    ",
                  "    tests[\"Verifying that Address is not in the response\"] = body.personalDetails.address === undefined;",
                  "    ",
                  "    tests[\"Verifying that Mobile Number is Retrieved Correctly\"] = body.personalDetails.phone.mobileNumber === environment.mobileNumber;",
                  "    tests[\"Verifying that Home Number is not in the response\"] = body.personalDetails.phone.homeNumber === undefined;",
                  "    tests[\"Verifying that Work Number is not in the response\"] = body.personalDetails.phone.workNumber === undefined;",
                  "}",
                  "catch(err)",
                  "{",
                  "    tests[\"Data does not exist\"] = false;",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "",
                  "//Generating Random Email address to pass into the data so that user duplication does not happen",
                  "",
                  "//Setting up the random email to an environment variable",
                  "// postman.setEnvironmentVariable(\"Email\", \"Sunitha.Mudumba@AIA.COM\");",
                  "",
                  "// //Setting up the firstName to an environment variable",
                  "// postman.setEnvironmentVariable(\"firstName\", \"Sunitha\");",
                  "",
                  "// //Setting up the lastName to an environment variable",
                  "// postman.setEnvironmentVariable(\"lastName\", \"Mudumba\");",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{ESBURL}}/rest/aiaServices.rs.personalDetails.v1?entityNumber={{aiaVitalityId}}&aiaVitalityNumber={{aiaVitalityMemberNumber}}",
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "description": ""
          },
          "response": [
            {
              "id": "0c3d29e9-1eba-6b16-9e85-336d2ae85754",
              "name": "response 2",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaServices.rs.personalDetails.v1?entityNumber={{aiaVitalityId}}&aiaVitalityNumber={{aiaVitalityMemberNumber}}",
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:07 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "237",
              "body": "{\"token\":\"a77eb61e-5dd3-4680-931e-49122ab21153\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "848ff928-2143-8e22-37bd-b8f1fe7c3d41",
              "name": "error",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaServices.rs.personalDetails.v1?entityNumber={{aiaVitalityId}}&aiaVitalityNumber={{aiaVitalityMemberNumber}}",
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "key": "Connection",
                  "value": "Keep-Alive",
                  "name": "Connection",
                  "description": ""
                },
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "name": "Content-Type",
                  "description": ""
                },
                {
                  "key": "Date",
                  "value": "Wed, 14 Dec 2016 00:42:55 GMT",
                  "name": "Date",
                  "description": ""
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked",
                  "name": "Transfer-Encoding",
                  "description": ""
                },
                {
                  "key": "X-Backside-Transport",
                  "value": "OK OK",
                  "name": "X-Backside-Transport",
                  "description": ""
                },
                {
                  "key": "X-Client-IP",
                  "value": "10.61.38.184",
                  "name": "X-Client-IP",
                  "description": ""
                },
                {
                  "key": "X-Global-Transaction-ID",
                  "value": "348720",
                  "name": "X-Global-Transaction-ID",
                  "description": ""
                }
              ],
              "cookie": [],
              "responseTime": "1537",
              "body": "{\"response\":{}}"
            },
            {
              "id": "f63dd421-6c2e-3f83-42e2-43c7f1470b2b",
              "name": "response 1",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaServices.rs.personalDetails.v1?entityNumber={{aiaVitalityId}}&aiaVitalityNumber={{aiaVitalityMemberNumber}}",
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:13:56 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "215",
              "body": "{\"token\":\"39b8615a-307d-419f-a503-4d4fa6c7021d\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "feb554b6-ca86-0cf8-4055-56fe275d0ace",
              "name": "response 3",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaServices.rs.personalDetails.v1?entityNumber={{aiaVitalityId}}&aiaVitalityNumber={{aiaVitalityMemberNumber}}",
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:17 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "1830",
              "body": "{\"token\":\"1ed2d16e-9fc9-46ed-af8e-49e5b5207e79\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            }
          ]
        },
        {
          "_postman_id": "90500da8-a5fd-e36b-e803-1ce3ecb552e1",
          "name": "AC 2 Get PII Data - entityNo  No address and phone",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "//Verifing that the response time is less than the value declared in global  variable ",
                  "tests[\"Response time is less than \" + globals.responseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < globals.responseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "try{",
                  "    tests[\"Verifying that Title is Retrieved Correctly\"] = body.personalDetails.title === \"Mr\";",
                  "    tests[\"Verifying that First Name is Retrieved Correctly\"] = body.personalDetails.firstName === environment.firstName;",
                  "    tests[\"Verifying that Last Name is Retrieved Correctly\"] = body.personalDetails.lastName === environment.lastName;",
                  "    tests[\"Verifying that Gender is Retrieved Correctly\"] = body.personalDetails.gender === \"M\";",
                  "    tests[\"Verifying that Date Of Birth is Retrieved Correctly\"] = Date.create(body.personalDetails.dateOfBirth).is(Date.create(environment.dateOfBirth));",
                  "    tests[\"Verifying that Email is Retrieved Correctly\"] = body.personalDetails.email === environment.Email;",
                  "    tests[\"Verifying that Nomination ID is Retrieved Correctly\"] = body.personalDetails.nominationId === environment.memberID;",
                  "    ",
                  "    tests[\"Verifying that Address is not in the response\"] = body.personalDetails.address === undefined;",
                  "    ",
                  "    tests[\"Verifying that Mobile Number is Retrieved Correctly\"] = body.personalDetails.phone.mobileNumber === environment.mobileNumber;",
                  "    tests[\"Verifying that Home Number is not in the response\"] = body.personalDetails.phone.homeNumber === undefined;",
                  "    tests[\"Verifying that Work Number is not in the response\"] = body.personalDetails.phone.workNumber === undefined;",
                  "}",
                  "catch(err)",
                  "{",
                  "    tests[\"Data does not exist\"] = false;",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{ESBURL}}/rest/aiaServices.rs.personalDetails.v1?entityNumber={{aiaVitalityId}}",
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "description": ""
          },
          "response": [
            {
              "id": "018f9259-71d9-e008-8056-7247c300dbbe",
              "name": "response 1",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaServices.rs.personalDetails.v1?entityNumber={{aiaVitalityId}}",
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:13:56 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "215",
              "body": "{\"token\":\"39b8615a-307d-419f-a503-4d4fa6c7021d\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "2350de4b-cc5b-d25e-4c74-67d54e76494b",
              "name": "response 2",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaServices.rs.personalDetails.v1?entityNumber={{aiaVitalityId}}",
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:07 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "237",
              "body": "{\"token\":\"a77eb61e-5dd3-4680-931e-49122ab21153\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "43f2c63f-c95c-de23-a2a5-41105724d65b",
              "name": "error",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaServices.rs.personalDetails.v1?entityNumber={{aiaVitalityId}}",
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "key": "Connection",
                  "value": "Keep-Alive",
                  "name": "Connection",
                  "description": ""
                },
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "name": "Content-Type",
                  "description": ""
                },
                {
                  "key": "Date",
                  "value": "Wed, 14 Dec 2016 00:42:55 GMT",
                  "name": "Date",
                  "description": ""
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked",
                  "name": "Transfer-Encoding",
                  "description": ""
                },
                {
                  "key": "X-Backside-Transport",
                  "value": "OK OK",
                  "name": "X-Backside-Transport",
                  "description": ""
                },
                {
                  "key": "X-Client-IP",
                  "value": "10.61.38.184",
                  "name": "X-Client-IP",
                  "description": ""
                },
                {
                  "key": "X-Global-Transaction-ID",
                  "value": "348720",
                  "name": "X-Global-Transaction-ID",
                  "description": ""
                }
              ],
              "cookie": [],
              "responseTime": "1537",
              "body": "{\"response\":{}}"
            },
            {
              "id": "87ee835f-a336-441a-37f7-67ccd719733f",
              "name": "response 3",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaServices.rs.personalDetails.v1?entityNumber={{aiaVitalityId}}",
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:17 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "1830",
              "body": "{\"token\":\"1ed2d16e-9fc9-46ed-af8e-49e5b5207e79\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            }
          ]
        },
        {
          "_postman_id": "fac4d13f-44fc-fc7b-219b-6aa90de7eb3c",
          "name": "AC 3 Get PII Data - Invalid memberId and relationshipName",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 404\"] = responseCode.code === 404;",
                  "",
                  "//Verifing that the response time is less than the value declared in global  variable ",
                  "tests[\"Response time is less than \" + globals.responseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < globals.responseTime;",
                  "",
                  "tests[\"Verifiying that the status is 'member not found'\"] = JSON.parse(responseBody).status === \"member not found\";"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{ESBURL}}/rest/aiaServices.rs.personalDetails.v1?memberId=123456&relationshipName={{other_relationship_id}}  ",
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "description": ""
          },
          "response": [
            {
              "id": "1147122f-f0f8-d4f3-46bf-5ab6c3a86987",
              "name": "response 1",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaServices.rs.personalDetails.v1?memberId=123456&relationshipName={{other_relationship_id}}  ",
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:13:56 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "215",
              "body": "{\"token\":\"39b8615a-307d-419f-a503-4d4fa6c7021d\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "329be5e6-6025-37eb-7a0e-bd1f4c571657",
              "name": "response 2",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaServices.rs.personalDetails.v1?memberId=123456&relationshipName={{other_relationship_id}}  ",
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:07 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "237",
              "body": "{\"token\":\"a77eb61e-5dd3-4680-931e-49122ab21153\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "ad2cc88d-c63e-dc17-455c-603e73080fce",
              "name": "error",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaServices.rs.personalDetails.v1?memberId=123456&relationshipName={{other_relationship_id}}  ",
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "key": "Connection",
                  "value": "Keep-Alive",
                  "name": "Connection",
                  "description": ""
                },
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "name": "Content-Type",
                  "description": ""
                },
                {
                  "key": "Date",
                  "value": "Wed, 14 Dec 2016 00:42:55 GMT",
                  "name": "Date",
                  "description": ""
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked",
                  "name": "Transfer-Encoding",
                  "description": ""
                },
                {
                  "key": "X-Backside-Transport",
                  "value": "OK OK",
                  "name": "X-Backside-Transport",
                  "description": ""
                },
                {
                  "key": "X-Client-IP",
                  "value": "10.61.38.184",
                  "name": "X-Client-IP",
                  "description": ""
                },
                {
                  "key": "X-Global-Transaction-ID",
                  "value": "348720",
                  "name": "X-Global-Transaction-ID",
                  "description": ""
                }
              ],
              "cookie": [],
              "responseTime": "1537",
              "body": "{\"response\":{}}"
            },
            {
              "id": "b79e9b0b-f66f-6e33-d248-fdf321e7bd71",
              "name": "response 3",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaServices.rs.personalDetails.v1?memberId=123456&relationshipName={{other_relationship_id}}  ",
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:17 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "1830",
              "body": "{\"token\":\"1ed2d16e-9fc9-46ed-af8e-49e5b5207e79\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            }
          ]
        },
        {
          "_postman_id": "842d53e7-06c6-d361-a03e-6b39475af88b",
          "name": "AC 3 Get PII Data - Invalid email",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 404\"] = responseCode.code === 404;",
                  "",
                  "//Verifing that the response time is less than the value declared in global  variable ",
                  "tests[\"Response time is less than \" + globals.responseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < globals.responseTime;",
                  "",
                  "tests[\"Verifiying that the status is 'member not found'\"] = JSON.parse(responseBody).status === \"member not found\";"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{ESBURL}}/rest/aiaServices.rs.personalDetails.v1?email=invalidemail@test.com",
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "description": ""
          },
          "response": [
            {
              "id": "136a4ff7-4ba1-3649-df70-e35b04c2c1ff",
              "name": "response 1",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaServices.rs.personalDetails.v1?email=invalidemail@test.com",
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:13:56 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "215",
              "body": "{\"token\":\"39b8615a-307d-419f-a503-4d4fa6c7021d\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "6da00002-8d8b-ed36-bf3a-062afc02f762",
              "name": "response 2",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaServices.rs.personalDetails.v1?email=invalidemail@test.com",
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:07 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "237",
              "body": "{\"token\":\"a77eb61e-5dd3-4680-931e-49122ab21153\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "70fc843b-f623-8d94-1b1b-879f3d2301fc",
              "name": "response 3",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaServices.rs.personalDetails.v1?email=invalidemail@test.com",
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:17 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "1830",
              "body": "{\"token\":\"1ed2d16e-9fc9-46ed-af8e-49e5b5207e79\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "7e37f80a-964f-5ea4-9fe7-3ec8ec3c4a22",
              "name": "error",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaServices.rs.personalDetails.v1?email=invalidemail@test.com",
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "key": "Connection",
                  "value": "Keep-Alive",
                  "name": "Connection",
                  "description": ""
                },
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "name": "Content-Type",
                  "description": ""
                },
                {
                  "key": "Date",
                  "value": "Wed, 14 Dec 2016 00:42:55 GMT",
                  "name": "Date",
                  "description": ""
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked",
                  "name": "Transfer-Encoding",
                  "description": ""
                },
                {
                  "key": "X-Backside-Transport",
                  "value": "OK OK",
                  "name": "X-Backside-Transport",
                  "description": ""
                },
                {
                  "key": "X-Client-IP",
                  "value": "10.61.38.184",
                  "name": "X-Client-IP",
                  "description": ""
                },
                {
                  "key": "X-Global-Transaction-ID",
                  "value": "348720",
                  "name": "X-Global-Transaction-ID",
                  "description": ""
                }
              ],
              "cookie": [],
              "responseTime": "1537",
              "body": "{\"response\":{}}"
            }
          ]
        },
        {
          "_postman_id": "b3072898-b164-403f-c71b-931edc30698a",
          "name": "AC 3 Get PII Data - Invalid aiaVitalityNo",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 404\"] = responseCode.code === 404;",
                  "",
                  "//Verifing that the response time is less than the value declared in global  variable ",
                  "tests[\"Response time is less than \" + globals.responseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < globals.responseTime;",
                  "",
                  "tests[\"Verifiying that the status is 'member not found'\"] = JSON.parse(responseBody).status === \"member not found\";"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{ESBURL}}/rest/aiaServices.rs.personalDetails.v1?aiaVitalityNumber=01234567",
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "description": ""
          },
          "response": [
            {
              "id": "18d4bc86-4f92-5dbb-9337-44cdb1ccda5b",
              "name": "response 1",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaServices.rs.personalDetails.v1?aiaVitalityNumber=01234567",
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:13:56 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "215",
              "body": "{\"token\":\"39b8615a-307d-419f-a503-4d4fa6c7021d\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "3dc5284b-bfb9-02b3-0c30-c6107c9dc9bd",
              "name": "response 2",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaServices.rs.personalDetails.v1?aiaVitalityNumber=01234567",
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:07 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "237",
              "body": "{\"token\":\"a77eb61e-5dd3-4680-931e-49122ab21153\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "b2a180d2-ed2e-af70-1e70-01e86b72ed3a",
              "name": "error",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaServices.rs.personalDetails.v1?aiaVitalityNumber=01234567",
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "key": "Connection",
                  "value": "Keep-Alive",
                  "name": "Connection",
                  "description": ""
                },
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "name": "Content-Type",
                  "description": ""
                },
                {
                  "key": "Date",
                  "value": "Wed, 14 Dec 2016 00:42:55 GMT",
                  "name": "Date",
                  "description": ""
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked",
                  "name": "Transfer-Encoding",
                  "description": ""
                },
                {
                  "key": "X-Backside-Transport",
                  "value": "OK OK",
                  "name": "X-Backside-Transport",
                  "description": ""
                },
                {
                  "key": "X-Client-IP",
                  "value": "10.61.38.184",
                  "name": "X-Client-IP",
                  "description": ""
                },
                {
                  "key": "X-Global-Transaction-ID",
                  "value": "348720",
                  "name": "X-Global-Transaction-ID",
                  "description": ""
                }
              ],
              "cookie": [],
              "responseTime": "1537",
              "body": "{\"response\":{}}"
            },
            {
              "id": "f9a12f2d-9e4f-1c87-325b-06f69fc5d40b",
              "name": "response 3",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaServices.rs.personalDetails.v1?aiaVitalityNumber=01234567",
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:17 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "1830",
              "body": "{\"token\":\"1ed2d16e-9fc9-46ed-af8e-49e5b5207e79\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            }
          ]
        },
        {
          "_postman_id": "5e1a9920-2809-1e5c-5f22-39d48025c9d6",
          "name": "AC 3 Get PII Data - Invalid entityNo and aiaVitalityNo",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 404\"] = responseCode.code === 404;",
                  "",
                  "//Verifing that the response time is less than the value declared in global  variable ",
                  "tests[\"Response time is less than \" + globals.responseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < globals.responseTime;",
                  "",
                  "tests[\"Verifiying that the status is 'member not found'\"] = JSON.parse(responseBody).status === \"member not found\";"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "",
                  "//Generating Random Email address to pass into the data so that user duplication does not happen",
                  "",
                  "//Setting up the random email to an environment variable",
                  "// postman.setEnvironmentVariable(\"Email\", \"Sunitha.Mudumba@AIA.COM\");",
                  "",
                  "// //Setting up the firstName to an environment variable",
                  "// postman.setEnvironmentVariable(\"firstName\", \"Sunitha\");",
                  "",
                  "// //Setting up the lastName to an environment variable",
                  "// postman.setEnvironmentVariable(\"lastName\", \"Mudumba\");",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{ESBURL}}/rest/aiaServices.rs.personalDetails.v1?entityNumber=0123456789&aiaVitalityNumber=0123",
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "description": ""
          },
          "response": [
            {
              "id": "17e60bcc-ce33-02f2-8c20-e3c1b538a7db",
              "name": "response 1",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaServices.rs.personalDetails.v1?entityNumber=0123456789&aiaVitalityNumber=0123",
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:13:56 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "215",
              "body": "{\"token\":\"39b8615a-307d-419f-a503-4d4fa6c7021d\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "aaf541ab-ab92-b426-c40c-4587eff6519d",
              "name": "error",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaServices.rs.personalDetails.v1?entityNumber=0123456789&aiaVitalityNumber=0123",
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "key": "Connection",
                  "value": "Keep-Alive",
                  "name": "Connection",
                  "description": ""
                },
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "name": "Content-Type",
                  "description": ""
                },
                {
                  "key": "Date",
                  "value": "Wed, 14 Dec 2016 00:42:55 GMT",
                  "name": "Date",
                  "description": ""
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked",
                  "name": "Transfer-Encoding",
                  "description": ""
                },
                {
                  "key": "X-Backside-Transport",
                  "value": "OK OK",
                  "name": "X-Backside-Transport",
                  "description": ""
                },
                {
                  "key": "X-Client-IP",
                  "value": "10.61.38.184",
                  "name": "X-Client-IP",
                  "description": ""
                },
                {
                  "key": "X-Global-Transaction-ID",
                  "value": "348720",
                  "name": "X-Global-Transaction-ID",
                  "description": ""
                }
              ],
              "cookie": [],
              "responseTime": "1537",
              "body": "{\"response\":{}}"
            },
            {
              "id": "bf0737a3-4a11-8679-ccd3-7e9c9a6ec35a",
              "name": "response 2",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaServices.rs.personalDetails.v1?entityNumber=0123456789&aiaVitalityNumber=0123",
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:07 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "237",
              "body": "{\"token\":\"a77eb61e-5dd3-4680-931e-49122ab21153\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "d3d6e471-5d3b-9250-016a-ea94ab504de8",
              "name": "response 3",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaServices.rs.personalDetails.v1?entityNumber=0123456789&aiaVitalityNumber=0123",
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:17 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "1830",
              "body": "{\"token\":\"1ed2d16e-9fc9-46ed-af8e-49e5b5207e79\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            }
          ]
        },
        {
          "_postman_id": "f3648642-0948-e871-96e5-618f126d67f9",
          "name": "AC 3 Get PII Data - Invalid entityNo",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 404\"] = responseCode.code === 404;",
                  "",
                  "//Verifing that the response time is less than the value declared in global  variable ",
                  "tests[\"Response time is less than \" + globals.responseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < globals.responseTime;",
                  "",
                  "tests[\"Verifiying that the status is 'member not found'\"] = JSON.parse(responseBody).status === \"member not found\";"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{ESBURL}}/rest/aiaServices.rs.personalDetails.v1?entityNumber=10000000001",
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "description": ""
          },
          "response": [
            {
              "id": "0060afd3-b49a-e1a6-9283-84a24122174c",
              "name": "response 1",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaServices.rs.personalDetails.v1?entityNumber=10000000001",
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:13:56 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "215",
              "body": "{\"token\":\"39b8615a-307d-419f-a503-4d4fa6c7021d\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "1ec6d882-bf0b-0e9b-a0c2-1608fa6bd959",
              "name": "error",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaServices.rs.personalDetails.v1?entityNumber=10000000001",
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "key": "Connection",
                  "value": "Keep-Alive",
                  "name": "Connection",
                  "description": ""
                },
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "name": "Content-Type",
                  "description": ""
                },
                {
                  "key": "Date",
                  "value": "Wed, 14 Dec 2016 00:42:55 GMT",
                  "name": "Date",
                  "description": ""
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked",
                  "name": "Transfer-Encoding",
                  "description": ""
                },
                {
                  "key": "X-Backside-Transport",
                  "value": "OK OK",
                  "name": "X-Backside-Transport",
                  "description": ""
                },
                {
                  "key": "X-Client-IP",
                  "value": "10.61.38.184",
                  "name": "X-Client-IP",
                  "description": ""
                },
                {
                  "key": "X-Global-Transaction-ID",
                  "value": "348720",
                  "name": "X-Global-Transaction-ID",
                  "description": ""
                }
              ],
              "cookie": [],
              "responseTime": "1537",
              "body": "{\"response\":{}}"
            },
            {
              "id": "5f1810de-0431-8e3b-3b39-3389474e8178",
              "name": "response 3",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaServices.rs.personalDetails.v1?entityNumber=10000000001",
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:17 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "1830",
              "body": "{\"token\":\"1ed2d16e-9fc9-46ed-af8e-49e5b5207e79\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "7ee919e7-0c55-2524-424a-dbc0ce0e88e5",
              "name": "response 2",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaServices.rs.personalDetails.v1?entityNumber=10000000001",
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:07 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "237",
              "body": "{\"token\":\"a77eb61e-5dd3-4680-931e-49122ab21153\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            }
          ]
        }
      ]
    },
    {
      "_postman_id": "53f0b245-e56a-598c-ef43-e3321e2d5659",
      "name": "RA-215 : Changes to use composite key - VMMP",
      "description": "No EMAIL\r\n\r\nExpose API on VMMP to get member info based on membership id + relationship name",
      "item": [
        {
          "_postman_id": "c3052192-50c6-8320-7b4d-b48afb2db37b",
          "name": "RA-145: Enrolling a member",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 \r",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;\r",
                  "\r",
                  "//Verifing that the response time is less than the value declared in global  variable \r",
                  "tests[\"Response time is less than \" + globals.responseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < globals.responseTime;\r",
                  "\r",
                  "var body = JSON.parse(responseBody);\r",
                  "\r",
                  "\r",
                  "tests[\"Verifying that response is registration successful\"] = body.status === \"Data Accepted\";\r",
                  "\r",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "",
                  "//Generating Random Email address to pass into the data so that user duplication does not happen",
                  "function makeEmail() {",
                  "  var strValues = \"qpotvghysbnxui56z\";",
                  "  var strEmail = \"\";",
                  "  var strTmp;",
                  "  for (var i = 0; i < 10; i++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strTmp = \"\";",
                  "  strEmail = strEmail + \"@\";",
                  "  for (var j = 0; j < 8; j++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strEmail = strEmail + \"testpii.com\";",
                  "  return strEmail;",
                  "}",
                  "",
                  "",
                  "//Setting up the random email to an environment variable",
                  "postman.setEnvironmentVariable(\"Email\", makeEmail());",
                  "",
                  "var firstName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);",
                  "",
                  "//Setting up the firstName to an environment variable",
                  "postman.setEnvironmentVariable(\"firstName\", firstName);",
                  "",
                  "",
                  "var lastName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 8);",
                  "",
                  "//Setting up the lastName to an environment variable",
                  "postman.setEnvironmentVariable(\"lastName\", lastName);",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"601466578\",\r\n    \"address\":{\r\n      \"line1\":\"test street1\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\",\r\n      \"clientNumber\":\"\"\r\n      \r\n    },\r\n     \r\n    \"vitalityPolicyDetails\":{\r\n    \"vitalityPolicyId\":\"\"\r\n \r\n  }\r\n  },\r\n    \r\n     \r\n  \"reasonForJoining\":\"Unknown\",\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"transactionId\":\"randomtransactionid\",\r\n  \"source\":\"REST\"\r\n}"
            },
            "description": "As a member\r\nI want my correct details to be stored in the database\r\nSo that I can use Vitality\r\nThis story describes ESB calling VMMP API to update members' details which were masked by ESB as part of the enrollment process.\r\nGiven that members were enrolled with Vitality\r\nWhen they activate their membership\r\nThen their correct PII info will be stored in the VMMp core tbl"
          },
          "response": []
        },
        {
          "_postman_id": "3e85de18-0263-b9a5-4f8a-c5b7d6e6bd92",
          "name": "Wait for enrollment to finish",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{testPackageURL}}/rest/restTestPackage.ws.sleep?seconds=180",
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {},
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "be477b12-e011-8775-3847-edc04d65d8f0",
          "name": "RA-145: Staging table contains data from the Request",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "//Verifing that the response time is less than the value declared in global  variable ",
                  "tests[\"Response time is less than \" + globals.responseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < globals.responseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "try{",
                  "",
                  "",
                  "tests[\"Verifying that Email in staging VMMP DB is as passed\"] = body.getMemberInfoStagingOutput.results[0].EMAIL === environment.Email;",
                  "tests[\"Verifying that Title in staging VMMP DB is as passed\"] = body.getMemberInfoStagingOutput.results[0].TITLE === \"Mr\";",
                  "tests[\"Verifying that First Name in staging VMMP DB is as passed\"] = body.getMemberInfoStagingOutput.results[0].FIRST_NAME === environment.firstName;",
                  "tests[\"Verifying that Last Name in staging VMMP DB is as passed\"] = body.getMemberInfoStagingOutput.results[0].LAST_NAME === environment.lastName;",
                  "tests[\"Verifying that Gender in staging VMMP DB is as passed\"] = body.getMemberInfoStagingOutput.results[0].GENDER === \"M\";",
                  "tests[\"Verifying that DOB in staging VMMP DB is as passed\"] = body.getMemberInfoStagingOutput.results[0].DOB === \"1970-01-01\";",
                  "tests[\"Verifying that Mobile in staging VMMP DB is passed\"] = body.getMemberInfoStagingOutput.results[0].MOBILE === environment.mobileNumber;",
                  "tests[\"Verifying that Address 1 in staging VMMP DB is passed\"] = body.getMemberInfoStagingOutput.results[0].MAILING_ADDRESS1 ===\"test street1\";",
                  "tests[\"Verifying that Address 2 in staging VMMP DB is is passed\"] = body.getMemberInfoStagingOutput.results[0].MAILING_ADDRESS2 === null;",
                  "tests[\"Verifying that Suburb in staging VMMP DB is is passed\"] = body.getMemberInfoStagingOutput.results[0].MAILING_CITY === \"Wiseman's Ferry\";",
                  "tests[\"Verifying that State in staging VMMP DB is is passed\"] = body.getMemberInfoStagingOutput.results[0].MAILING_STATE === \"VIC\";",
                  "tests[\"Verifying that Postcode in staging VMMP DB is is passed\"] = body.getMemberInfoStagingOutput.results[0].MAILING_POSTCODE === environment.postcode;",
                  "tests[\"Verifying that Work Phone in staging VMMP DB is is passed\"] = body.getMemberInfoStagingOutput.results[0].WORK_PHONE === environment.workNumber;",
                  "tests[\"Verifying that Home Phone in staging VMMP DB is passed\"] = body.getMemberInfoStagingOutput.results[0].HOME_PHONE === environment.homeNumber;",
                  "tests[\"Verifying that Processed File staging VMMP DB is passed\"] = body.getMemberInfoStagingOutput.results[0].PROCESSED_FILE === null;",
                  "tests[\"Verifying that Relationship No. in staging VMMP DB is as passed\"] = body.getMemberInfoStagingOutput.results[0].RELATIONSHIP_NAME === environment.relationshipName;",
                  "tests[\"Verifying that NOMINATION ID in staging VMMP DB is as passed\"] = body.getMemberInfoStagingOutput.results[0].NOMINATION_ID === \"601466578\";",
                  "tests[\"Verifying that Status in staging VMMP DB is as passed\"] = body.getMemberInfoStagingOutput.results[0].STATUS === \"VALID_SHORT_PROCESS\";",
                  "",
                  "}",
                  "catch(err)",
                  "",
                  "{",
                  "    ",
                  "    tests[\"Data does not exist\"] = false;",
                  "}",
                  ""
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{StageDB}}",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"email\":\"{{Email}}\"} "
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "49046804-00bb-5fbc-04b2-49d300bd758a",
          "name": "RA-145: In VMMP core tables the PII data is Updated",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "//Verifing that the response time is less than the value declared in global  variable ",
                  "tests[\"Response time is less than \" + globals.responseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < globals.responseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "//console.log(environment.restMemberId+\"aiaPiiData\");",
                  "",
                  "try{",
                  "",
                  "tests[\"Verifying that Email in Core VMMP DB is as passed\"] = body.email === environment.Email;",
                  "tests[\"Verifying that First Name in Core VMMP DB is as passed\"] = body.firstName === environment.firstName;",
                  "tests[\"Verifying that status is Online Awaiting Activation\"] = body.memberships[0].status.name === \"AWAITING_ACTIVATION\";",
                  "tests[\"Verifying that Last Name in Core VMMP DB is as passed\"] = body.lastName === environment.lastName;",
                  "tests[\"Verifying that Gender in Core VMMP DB is as passed\"] = body.gender === \"M\";",
                  "tests[\"Verifying that DOB in Core VMMP DB is as passed\"] = body.dateOfBirth === \"1970-01-01\";",
                  "tests[\"Verifying that Relationship Id in Core VMMP DB is as passed\"] = body.relationship.name === environment.relationshipName;",
                  "",
                  "",
                  "}",
                  "catch(err){",
                  "    ",
                  "    tests[\"Data does not exist\"] = false;",
                  "}",
                  ""
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{VmmpUrl}}/restapi-vitality-member-management-service/registration/members/{{Email}}",
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"email\":\"{{Email}}\"} "
            },
            "description": "A/C:\r\nGiven that members were enrolled with Vitality\r\nWhen they activate their membership\r\nThen their correct PII info will be stored in the VMMp core tbl"
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "77d24589-8a26-2f75-88f5-85b941e3ba9f",
      "name": "RA-2 : Members need membership ID",
      "description": "As a member\r\nI want to have Vitality ID numbers\r\nSo that I can enroll to vitality",
      "item": [
        {
          "_postman_id": "1048ffac-8843-d6c2-9bec-927a231ff898",
          "name": "RA-2 : Number generator should generate Vitality Membership Number and Client Number for a new member  ",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "\r",
                  "try {\r",
                  "//Verifing that the response time is less than what has been declared in environment variable \r",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;\r",
                  "\r",
                  "var body = JSON.parse(responseBody);\r",
                  "\r",
                  "\r",
                  "var invalid = body.invalidFields; \r",
                  "\r",
                  "\r",
                  "    \r",
                  "\r",
                  "//tests[\"Verifying that a vitalityMembershipNumber is generated for a new member\"] = body.vitalityMembershipNumber === \"addressLine1 has invalid characters\";\r",
                  "\r",
                  "tests[\"Verifying that a clientNumber is generated for a new member is a number\"] = Number.isInteger(Number(body.clientNumber)) === true  ;\r",
                  "tests[\"Verifying that a clientNumber is generated for a new member is less han 10 digits\"] = body.clientNumber.length <= 10 && body.clientNumber.length > 4 ;\r",
                  "tests[\"Verifying that a vitalityMembershipNumber is generated for a new member is a number\"] = Number.isInteger(Number(body.vitalityMembershipNumber)) === true  ;\r",
                  "tests[\"Verifying that a vitalityMembershipNumber is generated for a new member is less han 10 digits\"] = body.vitalityMembershipNumber.length <= 10 && body.clientNumber.length > 4 ;\r",
                  "\r",
                  "\r",
                  "}\r",
                  "\r",
                  "catch(err) {\r",
                  "    tests[\"Number generator is not working\"] = false;\r",
                  "}\r",
                  "\r",
                  "\r",
                  ""
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{testPackageURL}}/rest/restTestPackage.ws.createMemberIds",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic YWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"member\":{\r\n    \"title\":\"\",\r\n    \"firstName\":\"\",\r\n    \"lastName\":\"\",\r\n    \"gender\":\"\",\r\n    \"dateOfBirth\":\"\",\r\n    \"email\":\"\",\r\n    \"nominationId\":\"\",\r\n    \"address\":{\r\n      \"line1\":\"\",\r\n      \"suburb\":\"\",\r\n      \"state\":\"\",\r\n      \"country\":\"\",\r\n      \"postcode\":\"\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"\",\r\n      \"homeNumber\":\"\",\r\n      \"workNumber\":\"\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"\",\r\n      \"clientNumber\":\"\"\r\n      \r\n    },\r\n     \r\n    \"vitalityPolicyDetails\":{\r\n    \"vitalityPolicyId\":\"\"\r\n \r\n  }\r\n  },\r\n    \r\n     \r\n  \"reasonForJoining\":\"\",\r\n  \"acceptTnC\":\"\",\r\n  \"relationshipName\": \"\",\r\n  \"transactionId\":\"\",\r\n  \"source\":\"\"\r\n \r\n}\r\n\r\n\r\n\r\n"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "8cce123c-2608-7e0c-c762-93e2969b714b",
          "name": "RA-2 : Number generator should not generate Vitality Membership Number and Client Number for an exiting member",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "if (environment.BaseURL === \"http://melaitlesb01.aia.biz:5555\"){\r",
                  "try {\r",
                  "\r",
                  "//Verifing that the response time is less than what has been declared in environment variable \r",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;\r",
                  "\r",
                  "var body = JSON.parse(responseBody);\r",
                  "\r",
                  "\r",
                  "\r",
                  "//tests[\"Verifying that a vitalityMembershipNumber is generated for a new member\"] = body.vitalityMembershipNumber === \"addressLine1 has invalid characters\";\r",
                  "\r",
                  "tests[\"Verifying that a clientNumber is the same as passed in the request for an existing member\"] = Number(body.clientNumber) === 1784297990  ;\r",
                  "\r",
                  "tests[\"Verifying that a vitalityMembershipNumber is the same as passed in the request for an existing member\"] = Number(body.vitalityMembershipNumber) === 1024548731  ;\r",
                  "\r",
                  "\r",
                  "}\r",
                  "\r",
                  "catch(err) {\r",
                  "    tests[\"Number generator is not working\"] = false;\r",
                  "}\r",
                  "\r",
                  "\r",
                  "}\r",
                  "\r",
                  "else {\r",
                  "        tests[\"Number generator tests are only run in PSIT Environment\"] = true;\r",
                  "    \r",
                  "}\r",
                  ""
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{testPackageURL}}/rest/restTestPackage.ws.createMemberIds",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic YWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"member\":{\r\n    \"title\":\"\",\r\n    \"firstName\":\"\",\r\n    \"lastName\":\"\",\r\n    \"gender\":\"\",\r\n    \"dateOfBirth\":\"\",\r\n    \"email\":\"\",\r\n    \"nominationId\":\"\",\r\n    \"address\":{\r\n      \"line1\":\"\",\r\n      \"suburb\":\"\",\r\n      \"state\":\"\",\r\n      \"country\":\"\",\r\n      \"postcode\":\"\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"\",\r\n      \"homeNumber\":\"\",\r\n      \"workNumber\":\"\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"\",\r\n      \"clientNumber\":\"1784297990\"\r\n      \r\n    },\r\n     \r\n    \"vitalityPolicyDetails\":{\r\n    \"vitalityMembershipNumber\":\"1024548731\"\r\n  \r\n \r\n  }\r\n  },\r\n    \r\n     \r\n  \"reasonForJoining\":\"\",\r\n  \"acceptTnC\":\"\",\r\n  \"relationshipName\": \"\",\r\n  \"transactionId\":\"\",\r\n  \"source\":\"\"\r\n \r\n}\r\n\r\n\r\n\r\n\r\n"
            },
            "description": ""
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "80af17d0-3c82-5da9-201c-047d7766092f",
      "name": "RA-228 & RA-267 : ESB APIs to Mark for Termination and Cancel Pending Termination",
      "description": "",
      "item": [
        {
          "_postman_id": "b7b5cb0a-9e33-c787-ce38-0b3e993eeeeb",
          "name": "RA-153: Enrolling a Member - New Process",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "tests[\"Verifying that Enrolment is successfull\"] = body.status === \"Data Accepted\";"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "",
                  "//Generating Random Email address to pass into the data so that user duplication does not happen",
                  "function makeEmail() {",
                  "  var strValues = \"qpotvghysbnxui56z\";",
                  "  var strEmail = \"\";",
                  "  var strTmp;",
                  "  for (var i = 0; i < 10; i++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strTmp = \"\";",
                  "  strEmail = strEmail + \"@\";",
                  "  for (var j = 0; j < 8; j++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strEmail = strEmail + \"esbpii.com\";",
                  "  return strEmail;",
                  "}",
                  "",
                  "",
                  "//Setting up the random email to an environment variable",
                  "postman.setEnvironmentVariable(\"Email\", makeEmail());",
                  "postman.setEnvironmentVariable(\"Email1\", environment.Email);",
                  "console.log(\"Email: \"+environment.Email);",
                  "",
                  "var firstName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);",
                  "",
                  "//Setting up the firstName to an environment variable",
                  "postman.setEnvironmentVariable(\"firstName\", firstName);",
                  "console.log(\"firstName: \"+environment.firstName);",
                  "",
                  "var lastName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 8);",
                  "",
                  "//Setting up the lastName to an environment variable",
                  "postman.setEnvironmentVariable(\"lastName\", lastName);",
                  "console.log(\"lastName: \"+environment.lastName);",
                  "",
                  "",
                  "//Incrementing and Setting up the memberID to an environment variable",
                  "// var memberIdNumber = parseInt(environment.memberIdNumber)+1;",
                  "var memberIdNumber = Date.now();",
                  "console.log(memberIdNumber);",
                  "postman.setEnvironmentVariable(\"memberIdNumber\", memberIdNumber);",
                  "postman.setEnvironmentVariable(\"memberID\", \"RA\"+memberIdNumber.toString());",
                  "postman.setEnvironmentVariable(\"memberID1\", environment.memberID);",
                  "console.log(\"memberID :\"+environment.memberID);",
                  ""
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
            },
            "description": ""
          },
          "response": [
            {
              "id": "57bacec7-6526-b7d9-c796-382d91e2db05",
              "name": "response 3",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:17 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "1830",
              "body": "{\"token\":\"1ed2d16e-9fc9-46ed-af8e-49e5b5207e79\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "c6e06fbd-b02d-6300-3944-8f3de7ee4820",
              "name": "error",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "key": "Connection",
                  "value": "Keep-Alive",
                  "name": "Connection",
                  "description": ""
                },
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "name": "Content-Type",
                  "description": ""
                },
                {
                  "key": "Date",
                  "value": "Wed, 14 Dec 2016 00:42:55 GMT",
                  "name": "Date",
                  "description": ""
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked",
                  "name": "Transfer-Encoding",
                  "description": ""
                },
                {
                  "key": "X-Backside-Transport",
                  "value": "OK OK",
                  "name": "X-Backside-Transport",
                  "description": ""
                },
                {
                  "key": "X-Client-IP",
                  "value": "10.61.38.184",
                  "name": "X-Client-IP",
                  "description": ""
                },
                {
                  "key": "X-Global-Transaction-ID",
                  "value": "348720",
                  "name": "X-Global-Transaction-ID",
                  "description": ""
                }
              ],
              "cookie": [],
              "responseTime": "1537",
              "body": "{\"response\":{}}"
            },
            {
              "id": "e7f122f5-0bee-570b-9e54-4ddb33076f45",
              "name": "response 2",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:07 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "237",
              "body": "{\"token\":\"a77eb61e-5dd3-4680-931e-49122ab21153\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "e8b4a06b-1641-8d23-7117-235e35fd1df0",
              "name": "response 1",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:13:56 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "215",
              "body": "{\"token\":\"39b8615a-307d-419f-a503-4d4fa6c7021d\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            }
          ]
        },
        {
          "_postman_id": "32a3d6bb-6ae2-68b0-0331-939ab73de51f",
          "name": "Wait for enrolment to finish",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "{{password_ESB}}",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{testPackageURL}}/rest/restTestPackage.ws.sleep?seconds=200",
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {},
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "4f5ba3ff-d512-0d98-829d-04805725f819",
          "name": "RA-147 : Verifying user has been added to UMS and is InActive Status",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonObject = xml2Json(responseBody);\r",
                  "\r",
                  "try\r",
                  "{\r",
                  "\r",
                  "\r",
                  "tests[\"Verifying that User status is Not Activated\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userStatus === \"I\";\r",
                  "\r",
                  "tests[\"Verifying that User ID is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userId === environment.Email ;\r",
                  "\r",
                  "tests[\"Verifying that Email is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.email === environment.Email ;\r",
                  "\r",
                  "tests[\"Verifying that First Name is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.givenName === environment.firstName ;\r",
                  "\r",
                  "tests[\"Verifying that Last name is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.surname === environment.lastName ;\r",
                  "\r",
                  "tests[\"Verifying that Member Type is as passed to UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.memberType === \"GROUP\" ;\r",
                  "\r",
                  "tests[\"Verifying that User Groups List is VITALITY_AWAITING_ACTIVATION\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userGroupsList === \"VITALITY_AWAITING_ACTIVATION\" ;\r",
                  "\r",
                  "\r",
                  "\r",
                  "//Setting up the token to an environment variable to be used in subsequent requests\r",
                  "\r",
                  "postman.setEnvironmentVariable(\"umsToken\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.token);\r",
                  "\r",
                  "postman.setEnvironmentVariable(\"aiaClientNumber\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaClientNumber);\r",
                  "postman.setEnvironmentVariable(\"aiaVitalityMemberNumber\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaVitalityMemberNumber);\r",
                  "postman.setEnvironmentVariable(\"aiaDsyPolicyNumber\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaDsyPolicyNumber);\r",
                  "\r",
                  "postman.setEnvironmentVariable(\"aiaVitalityId\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaVitalityId);\r",
                  "\r",
                  "\r",
                  "}\r",
                  "\r",
                  "\r",
                  "catch(err){\r",
                  "    \r",
                  "  tests[\"Data in response does not exist\"] = false;  \r",
                  "\r",
                  "\r",
                  "}\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "{{UmsURL}}/{{UMSContext}}/UsermanagementService",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "text/xml",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:ser=\"http://service.usermanagement.aiaa.com.au\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <ser:searchUserRequest>\n         <source>VITALITY</source>\n         <userType></userType>\n         <userDetails>\n            <userName></userName>\n            <userId></userId>\n            <userDN></userDN>\n            <email>{{Email}}</email>\n            <givenName></givenName>\n            <surname></surname>\n            <webChannel></webChannel>\n            <token></token>\n            <fundIdentifier></fundIdentifier>\n            <eligibilityAssessorEmail></eligibilityAssessorEmail>\n            <activationURL></activationURL>\n            <consentURL></consentURL>\n            <!--1 or more repetitions:-->\n            <userRolesList></userRolesList>\n            <title></title>\n            <dateOfBirth></dateOfBirth>\n            <gender></gender>\n            <addressLine1></addressLine1>\n            <addressLine2></addressLine2>\n            <suburb></suburb>\n            <state></state>\n            <postcode></postcode>\n            <country></country>\n            <mobilePhone></mobilePhone>\n            <workPhone></workPhone>\n            <homePhone></homePhone>\n            <fax></fax>\n            <isRetailLifeInsured></isRetailLifeInsured>\n            <passwordRequestDate></passwordRequestDate>\n            <password></password>\n            <passwordRequestCount></passwordRequestCount>\n            <aiaProposalNumber></aiaProposalNumber>\n            <aiaProposalWritingAdviser></aiaProposalWritingAdviser>\n            <aiaCCAppTnCAcceptedDate></aiaCCAppTnCAcceptedDate>\n            <aiaCCAppTnCVersion></aiaCCAppTnCVersion>\n            <!--1 or more repetitions:-->\n            <userGroupsList></userGroupsList>\n            <!--1 or more repetitions:-->\n            <userGroupsDNList></userGroupsDNList>\n            <memberType></memberType>\n            <residentialPostcode></residentialPostcode>\n            <userStatus></userStatus>\n            <aiaClientNumber></aiaClientNumber>\n            <aiaVitalityMemberNumber></aiaVitalityMemberNumber>\n            <aiaDsyPolicyNumber></aiaDsyPolicyNumber>\n            <aiaVitalityCobrandingInfo></aiaVitalityCobrandingInfo>\n         </userDetails>\n      </ser:searchUserRequest>\n   </soapenv:Body>\n</soapenv:Envelope>\n\n"
            },
            "description": "A/C:\r\nGiven that members activated their membership\r\nWhen ESB gets the action\r\nThen their membership will be activated in UMS"
          },
          "response": []
        },
        {
          "_postman_id": "ce214958-44a6-1cfd-1ed5-a1b136f2cc8d",
          "name": "RA-153: Activate member - New Process",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "var body = JSON.parse(responseBody);"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{ESBURL}}/rest/aiaVitalityMember/pub/activation",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"password\": \"Welcome123\",\r\n   \"reasonForJoining\": \"I am actively trying to maintain or improve my health\",\r\n   \"email\": \"{{Email}}\",\r\n   \"token\": \"{{umsToken}}\"   \r\n}\r\n"
            },
            "description": ""
          },
          "response": [
            {
              "id": "0f517deb-045c-81ff-4be1-9ca275614124",
              "name": "response 2",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMember/pub/activation",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"password\": \"Welcome123\",\r\n   \"reasonForJoining\": \"I am actively trying to maintain or improve my health\",\r\n   \"email\": \"{{Email}}\",\r\n   \"token\": \"{{umsToken}}\"   \r\n}\r\n"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:07 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "237",
              "body": "{\"token\":\"a77eb61e-5dd3-4680-931e-49122ab21153\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "7f7fb828-f09e-83bb-fa9d-36fc7c7388c4",
              "name": "response 3",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMember/pub/activation",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"password\": \"Welcome123\",\r\n   \"reasonForJoining\": \"I am actively trying to maintain or improve my health\",\r\n   \"email\": \"{{Email}}\",\r\n   \"token\": \"{{umsToken}}\"   \r\n}\r\n"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:17 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "1830",
              "body": "{\"token\":\"1ed2d16e-9fc9-46ed-af8e-49e5b5207e79\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "bf3266db-2e94-e1eb-112e-96b5eec3764b",
              "name": "error",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMember/pub/activation",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"password\": \"Welcome123\",\r\n   \"reasonForJoining\": \"I am actively trying to maintain or improve my health\",\r\n   \"email\": \"{{Email}}\",\r\n   \"token\": \"{{umsToken}}\"   \r\n}\r\n"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "key": "Connection",
                  "value": "Keep-Alive",
                  "name": "Connection",
                  "description": ""
                },
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "name": "Content-Type",
                  "description": ""
                },
                {
                  "key": "Date",
                  "value": "Wed, 14 Dec 2016 00:42:55 GMT",
                  "name": "Date",
                  "description": ""
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked",
                  "name": "Transfer-Encoding",
                  "description": ""
                },
                {
                  "key": "X-Backside-Transport",
                  "value": "OK OK",
                  "name": "X-Backside-Transport",
                  "description": ""
                },
                {
                  "key": "X-Client-IP",
                  "value": "10.61.38.184",
                  "name": "X-Client-IP",
                  "description": ""
                },
                {
                  "key": "X-Global-Transaction-ID",
                  "value": "348720",
                  "name": "X-Global-Transaction-ID",
                  "description": ""
                }
              ],
              "cookie": [],
              "responseTime": "1537",
              "body": "{\"response\":{}}"
            },
            {
              "id": "eb28e1d6-f8de-698b-8eba-5e5d32ee2747",
              "name": "response 1",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMember/pub/activation",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"password\": \"Welcome123\",\r\n   \"reasonForJoining\": \"I am actively trying to maintain or improve my health\",\r\n   \"email\": \"{{Email}}\",\r\n   \"token\": \"{{umsToken}}\"   \r\n}\r\n"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:13:56 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "215",
              "body": "{\"token\":\"39b8615a-307d-419f-a503-4d4fa6c7021d\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            }
          ]
        },
        {
          "_postman_id": "9b8e08ec-c356-9041-c969-f9c3044babe8",
          "name": "Wait for activation to finish",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{testPackageURL}}/rest/restTestPackage.ws.sleep?seconds=120",
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {},
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "943d5174-cbde-b9d7-dfc2-242cfb945507",
          "name": "RA-147 : Verifying user has been added to UMS and is activated",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonObject = xml2Json(responseBody);",
                  "",
                  "try {",
                  "    tests[\"Verifying that User status is  Activated\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userStatus === \"A\";",
                  "",
                  "    tests[\"Verifying that User ID is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userId === environment.Email;",
                  "",
                  "    tests[\"Verifying that Email is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.email === environment.Email;",
                  "",
                  "    tests[\"Verifying that First Name is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.givenName === environment.firstName;",
                  "",
                  "    tests[\"Verifying that Last name is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.surname === environment.lastName;",
                  "",
                  "    tests[\"Verifying that Member Type is as passed to UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.memberType === \"GROUP\";",
                  "",
                  "    tests[\"Verifying that User Groups List is VITALITY_ACTIVE\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userGroupsList === \"VITALITY_ACTIVE\";",
                  "",
                  "    //Setting up the token to an environment variable to be used in subsequent requests",
                  "    postman.setEnvironmentVariable(\"umsToken\", jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.token);",
                  "",
                  "    postman.setEnvironmentVariable(\"aiaClientNumber\", jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaClientNumber);",
                  "    postman.setEnvironmentVariable(\"aiaVitalityMemberNumber\", jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaVitalityMemberNumber);",
                  "    postman.setEnvironmentVariable(\"aiaDsyPolicyNumber\", jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaDsyPolicyNumber);",
                  "",
                  "    postman.setEnvironmentVariable(\"aiaVitalityId\", jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaVitalityId);",
                  "} catch (err) {",
                  "    tests[\"Data in response does not exist\"] = false;",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "{{UmsURL}}/{{UMSContext}}/UsermanagementService",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "text/xml",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:ser=\"http://service.usermanagement.aiaa.com.au\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <ser:searchUserRequest>\r\n         <source>VITALITY</source>\r\n         <userType></userType>\r\n         <userDetails>\r\n            <userName></userName>\r\n            <userId></userId>\r\n            <userDN></userDN>\r\n            <email>{{Email}}</email>\r\n            <givenName></givenName>\r\n            <surname></surname>\r\n            <webChannel></webChannel>\r\n            <token></token>\r\n            <fundIdentifier></fundIdentifier>\r\n            <eligibilityAssessorEmail></eligibilityAssessorEmail>\r\n            <activationURL></activationURL>\r\n            <consentURL></consentURL>\r\n            <!--1 or more repetitions:-->\r\n            <userRolesList></userRolesList>\r\n            <title></title>\r\n            <dateOfBirth></dateOfBirth>\r\n            <gender></gender>\r\n            <addressLine1></addressLine1>\r\n            <addressLine2></addressLine2>\r\n            <suburb></suburb>\r\n            <state></state>\r\n            <postcode></postcode>\r\n            <country></country>\r\n            <mobilePhone></mobilePhone>\r\n            <workPhone></workPhone>\r\n            <homePhone></homePhone>\r\n            <fax></fax>\r\n            <isRetailLifeInsured></isRetailLifeInsured>\r\n            <passwordRequestDate></passwordRequestDate>\r\n            <password></password>\r\n            <passwordRequestCount></passwordRequestCount>\r\n            <aiaProposalNumber></aiaProposalNumber>\r\n            <aiaProposalWritingAdviser></aiaProposalWritingAdviser>\r\n            <aiaCCAppTnCAcceptedDate></aiaCCAppTnCAcceptedDate>\r\n            <aiaCCAppTnCVersion></aiaCCAppTnCVersion>\r\n            <!--1 or more repetitions:-->\r\n            <userGroupsList></userGroupsList>\r\n            <!--1 or more repetitions:-->\r\n            <userGroupsDNList></userGroupsDNList>\r\n            <memberType></memberType>\r\n            <residentialPostcode></residentialPostcode>\r\n            <userStatus></userStatus>\r\n            <aiaClientNumber></aiaClientNumber>\r\n            <aiaVitalityMemberNumber></aiaVitalityMemberNumber>\r\n            <aiaDsyPolicyNumber></aiaDsyPolicyNumber>\r\n            <aiaVitalityCobrandingInfo></aiaVitalityCobrandingInfo>\r\n         </userDetails>\r\n      </ser:searchUserRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>\r\n\r\n"
            },
            "description": "A/C:\r\nGiven that members activated their membership\r\nWhen ESB gets the action\r\nThen their membership will be activated in UMS"
          },
          "response": []
        },
        {
          "_postman_id": "35f32ba3-ef2f-21d6-5247-5afb50f7debb",
          "name": "RA-228 : Mark For Termination",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "try {",
                  "    var jsonData = JSON.parse(responseBody);",
                  "",
                  "    tests[\"Verifying that the over all result is SUCCESS\"] = jsonData.response.status === \"success\";",
                  "    tests[\"Verifying that the appropriate MemberID is returned\"] = jsonData.response.member[0].memberId === environment.memberID;",
                  "    tests[\"Verifying that the individual result is SUCCESS\"] = jsonData.response.member[0].status === \"success\";",
                  "} catch (err) {",
                  "    tests[\"Data in response does not exist\"] = false;",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipMaintenance.rs.termination.v1 ",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"relationshipName\":\"GRESTFUNDMEMBER\",\r\n   \"member\":[\r\n      {\r\n         \"memberId\":\"{{memberID}}\"\r\n      }\r\n   ],\r\n   \"uuid\":\"{{$guid}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "138a1ac6-4309-31b7-3bfa-09da2954f18d",
          "name": "Wait for Termination to finish",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{testPackageURL}}/rest/restTestPackage.ws.sleep?seconds=30",
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {},
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "8e0f3a05-97a2-ed29-8010-3c03cf24e3a1",
          "name": "RA-144: Verifying that all the PENDINGTERMIANTIONDATE is updated",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "//Verifing that the response time is less than the value declared in global  variable ",
                  "tests[\"Response time is less than \" + globals.responseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < globals.responseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "//console.log(environment.restMemberId+\"aiaPiiData\");",
                  "",
                  "try{",
                  "    tests[\"Verifying that Email in Core VMMP DB is as passed\"] = body.email === environment.Email1;",
                  "    // tests[\"Verifying that First Name in Core VMMP DB is as passed\"] = body.firstName === environment.firstName;",
                  "    // tests[\"Verifying that Last Name in Core VMMP DB is as passed\"] = body.lastName === environment.lastName;",
                  "    // tests[\"Verifying that Gender in Core VMMP DB is as passed\"] = body.gender === \"M\";",
                  "    // tests[\"Verifying that DOB in Core VMMP DB is as passed\"] = Date.create(body.dateOfBirth).is(Date.create(environment.vmmpDOB));",
                  "    // tests[\"Verifying that Relationship Id in Core VMMP DB is as passed\"] = body.relationship.name === environment.relationshipName;",
                  "    ",
                  "    tests[\"Verifying that the pendingTerminationDate is updated\"] = body.memberships[0].pendingTerminationDate !== undefined;",
                  "    tests[\"Verifying that the status is still ACTIVATED\"] = body.memberships[0].status.name === \"ACTIVATED\";",
                  "}",
                  "catch(err){",
                  "    ",
                  "    tests[\"Data does not exist\"] = false;",
                  "}",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{VmmpUrl}}/restapi-vitality-member-management-service/registration/members/{{Email}}",
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"email\":\"{{Email}}\"} "
            },
            "description": "A/C :\n\nDup check passed:\nGiven that a record is of a unique member \nWhen dup check runs\nThen VMMP core table member's record will be updated with the member's details"
          },
          "response": []
        },
        {
          "_postman_id": "432ec441-4782-44f6-df7c-a2b4b1bb89b0",
          "name": "RA-228 : Duplicate request to Mark For Termination",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "try {",
                  "    var jsonData = JSON.parse(responseBody);",
                  "",
                  "    tests[\"Verifying that the over all result is SUCCESS\"] = jsonData.response.status === \"success\";",
                  "    tests[\"Verifying that the appropriate MemberID is returned\"] = jsonData.response.member[0].memberId === environment.memberID;",
                  "    tests[\"Verifying that the individual result is FAILURE\"] = jsonData.response.member[0].status === \"failure\";",
                  "    tests[\"Verifying that the reason is 'Member has already been set to terminate'\"] = jsonData.response.member[0].reason === \"Member has already been set to terminate\";",
                  "} catch (err) {",
                  "    tests[\"Data in response does not exist\"] = false;",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipMaintenance.rs.termination.v1 ",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"relationshipName\":\"GRESTFUNDMEMBER\",\r\n   \"member\":[\r\n      {\r\n         \"memberId\":\"{{memberID}}\"\r\n      }\r\n   ],\r\n   \"uuid\":\"{{$guid}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "b7f5e51b-58be-26c5-2bef-406db530d403",
          "name": "RA-267 : Cancel pending termination",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "try {",
                  "    var jsonData = JSON.parse(responseBody);",
                  "",
                  "    tests[\"Verifying that the over all result is SUCCESS\"] = jsonData.response.status === \"success\";",
                  "    tests[\"Verifying that the appropriate MemberID is returned\"] = jsonData.response.member[0].memberId === environment.memberID;",
                  "    tests[\"Verifying that the individual result is SUCCESS\"] = jsonData.response.member[0].status === \"success\";",
                  "} catch (err) {",
                  "    tests[\"Data in response does not exist\"] = false;",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipMaintenance.rs.cancelTermination.v1 ",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"relationshipName\":\"GRESTFUNDMEMBER\",\r\n   \"member\":[\r\n      {\r\n         \"memberId\":\"{{memberID}}\"\r\n      }\r\n   ],\r\n   \"uuid\":\"{{$guid}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "281dd3f4-b9cc-f725-70d3-a6f38c608fae",
          "name": "Wait for Cancel Termination to finish",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{testPackageURL}}/rest/restTestPackage.ws.sleep?seconds=30",
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {},
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "34761c18-013c-f7ea-b97c-69d0b64d84c7",
          "name": "RA-144: Verifying that all the PENDINGTERMIANTIONDATE value is removed",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "//Verifing that the response time is less than the value declared in global  variable ",
                  "tests[\"Response time is less than \" + globals.responseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < globals.responseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "//console.log(environment.restMemberId+\"aiaPiiData\");",
                  "",
                  "try{",
                  "    tests[\"Verifying that Email in Core VMMP DB is as passed\"] = body.email === environment.Email1;",
                  "    // tests[\"Verifying that First Name in Core VMMP DB is as passed\"] = body.firstName === environment.firstName;",
                  "    // tests[\"Verifying that Last Name in Core VMMP DB is as passed\"] = body.lastName === environment.lastName;",
                  "    // tests[\"Verifying that Gender in Core VMMP DB is as passed\"] = body.gender === \"M\";",
                  "    // tests[\"Verifying that DOB in Core VMMP DB is as passed\"] = Date.create(body.dateOfBirth).is(Date.create(environment.vmmpDOB));",
                  "    // tests[\"Verifying that Relationship Id in Core VMMP DB is as passed\"] = body.relationship.name === environment.relationshipName;",
                  "    ",
                  "    tests[\"Verifying that the pendingTerminationDate is updated\"] = body.memberships[0].pendingTerminationDate === undefined;",
                  "    tests[\"Verifying that the status is still ACTIVATED\"] = body.memberships[0].status.name === \"ACTIVATED\";",
                  "}",
                  "catch(err){",
                  "    ",
                  "    tests[\"Data does not exist\"] = false;",
                  "}",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{VmmpUrl}}/restapi-vitality-member-management-service/registration/members/{{Email}}",
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"email\":\"{{Email}}\"} "
            },
            "description": "A/C :\n\nDup check passed:\nGiven that a record is of a unique member \nWhen dup check runs\nThen VMMP core table member's record will be updated with the member's details"
          },
          "response": []
        },
        {
          "_postman_id": "67357ba2-c829-fae7-de65-f9725621379b",
          "name": "RA-267 : Duplicate request to Cancel pending termination",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "try {",
                  "    var jsonData = JSON.parse(responseBody);",
                  "",
                  "    tests[\"Verifying that the over all result is SUCCESS\"] = jsonData.response.status === \"success\";",
                  "    tests[\"Verifying that the appropriate MemberID is returned\"] = jsonData.response.member[0].memberId === environment.memberID;",
                  "    tests[\"Verifying that the individual result is FAILURE\"] = jsonData.response.member[0].status === \"failure\";",
                  "    tests[\"Verifying that the reason is'NO_ACTIVE_MEMBERSHIP'\"] = jsonData.response.member[0].reason === \"NO_REGISTERED_PENDING_TERMINATION\";",
                  "} catch (err) {",
                  "    tests[\"Data in response does not exist\"] = false;",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipMaintenance.rs.cancelTermination.v1 ",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"relationshipName\":\"GRESTFUNDMEMBER\",\r\n   \"member\":[\r\n      {\r\n         \"memberId\":\"{{memberID}}\"\r\n      }\r\n   ],\r\n   \"uuid\":\"{{$guid}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "31ef3eed-95f5-57da-eb13-b675b3f0a16b",
          "name": "RA-153: Enrolling a Member - New Process 2",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "",
                  "",
                  "tests[\"Verifying that Enrolment is successfull\"] =  body.status === \"Data Accepted\";",
                  "",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "",
                  "//Generating Random Email address to pass into the data so that user duplication does not happen",
                  "function makeEmail() {",
                  "  var strValues = \"qpotvghysbnxui56z\";",
                  "  var strEmail = \"\";",
                  "  var strTmp;",
                  "  for (var i = 0; i < 10; i++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strTmp = \"\";",
                  "  strEmail = strEmail + \"@\";",
                  "  for (var j = 0; j < 8; j++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strEmail = strEmail + \"esbpii.com\";",
                  "  return strEmail;",
                  "}",
                  "",
                  "",
                  "//Setting up the random email to an environment variable",
                  "postman.setEnvironmentVariable(\"Email\", makeEmail());",
                  "postman.setEnvironmentVariable(\"Email2\", environment.Email);",
                  "console.log(\"Email: \"+environment.Email);",
                  "",
                  "",
                  "var firstName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);",
                  "",
                  "//Setting up the firstName to an environment variable",
                  "postman.setEnvironmentVariable(\"firstName\", firstName);",
                  "console.log(\"firstName: \"+environment.firstName);",
                  "",
                  "var lastName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 8);",
                  "",
                  "//Setting up the lastName to an environment variable",
                  "postman.setEnvironmentVariable(\"lastName\", lastName);",
                  "console.log(\"lastName: \"+environment.lastName);",
                  "",
                  "",
                  "//Incrementing and Setting up the memberID to an environment variable",
                  "// var memberIdNumber = parseInt(environment.memberIdNumber)+1;",
                  "var memberIdNumber = Date.now();",
                  "console.log(memberIdNumber);",
                  "postman.setEnvironmentVariable(\"memberIdNumber\", memberIdNumber);",
                  "postman.setEnvironmentVariable(\"memberID\", \"RA\"+memberIdNumber.toString());",
                  "postman.setEnvironmentVariable(\"memberID2\", environment.memberID);",
                  "console.log(\"memberID :\"+environment.memberID);",
                  ""
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
            },
            "description": ""
          },
          "response": [
            {
              "id": "08133c78-5cc1-0d6d-43a0-81569d28cb86",
              "name": "response 1",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:13:56 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "215",
              "body": "{\"token\":\"39b8615a-307d-419f-a503-4d4fa6c7021d\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "2e093416-e13b-1547-efab-18266240b2c3",
              "name": "response 2",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:07 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "237",
              "body": "{\"token\":\"a77eb61e-5dd3-4680-931e-49122ab21153\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "4bb4ec70-6699-87e6-decf-a1cd7fd9cf6d",
              "name": "response 3",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:17 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "1830",
              "body": "{\"token\":\"1ed2d16e-9fc9-46ed-af8e-49e5b5207e79\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "8cca9f11-9504-7660-f399-d554069946c2",
              "name": "error",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "key": "Connection",
                  "value": "Keep-Alive",
                  "name": "Connection",
                  "description": ""
                },
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "name": "Content-Type",
                  "description": ""
                },
                {
                  "key": "Date",
                  "value": "Wed, 14 Dec 2016 00:42:55 GMT",
                  "name": "Date",
                  "description": ""
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked",
                  "name": "Transfer-Encoding",
                  "description": ""
                },
                {
                  "key": "X-Backside-Transport",
                  "value": "OK OK",
                  "name": "X-Backside-Transport",
                  "description": ""
                },
                {
                  "key": "X-Client-IP",
                  "value": "10.61.38.184",
                  "name": "X-Client-IP",
                  "description": ""
                },
                {
                  "key": "X-Global-Transaction-ID",
                  "value": "348720",
                  "name": "X-Global-Transaction-ID",
                  "description": ""
                }
              ],
              "cookie": [],
              "responseTime": "1537",
              "body": "{\"response\":{}}"
            }
          ]
        },
        {
          "_postman_id": "a7d74d25-793c-f0d9-b6db-0dc7c333346e",
          "name": "Wait for enrolment to finish 2",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "{{password_ESB}}",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{testPackageURL}}/rest/restTestPackage.ws.sleep?seconds=200",
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {},
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "d4862326-f4a4-4fb5-ea95-5f6067154870",
          "name": "RA-147 : Verifying user has been added to UMS and is InActive Status 2",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonObject = xml2Json(responseBody);\r",
                  "\r",
                  "try\r",
                  "{\r",
                  "    tests[\"Verifying that User status is Not Activated\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userStatus === \"I\";\r",
                  "    \r",
                  "    tests[\"Verifying that User ID is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userId === environment.Email ;\r",
                  "    \r",
                  "    tests[\"Verifying that Email is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.email === environment.Email ;\r",
                  "    \r",
                  "    tests[\"Verifying that First Name is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.givenName === environment.firstName ;\r",
                  "    \r",
                  "    tests[\"Verifying that Last name is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.surname === environment.lastName ;\r",
                  "    \r",
                  "    tests[\"Verifying that Member Type is as passed to UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.memberType === \"GROUP\" ;\r",
                  "    \r",
                  "    tests[\"Verifying that User Groups List is VITALITY_AWAITING_ACTIVATION\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userGroupsList === \"VITALITY_AWAITING_ACTIVATION\" ;\r",
                  "    \r",
                  "    \r",
                  "    //Setting up the token to an environment variable to be used in subsequent requests\r",
                  "    \r",
                  "    postman.setEnvironmentVariable(\"umsToken\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.token);\r",
                  "    \r",
                  "    postman.setEnvironmentVariable(\"aiaClientNumber\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaClientNumber);\r",
                  "    postman.setEnvironmentVariable(\"aiaVitalityMemberNumber\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaVitalityMemberNumber);\r",
                  "    postman.setEnvironmentVariable(\"aiaDsyPolicyNumber\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaDsyPolicyNumber);\r",
                  "    \r",
                  "    postman.setEnvironmentVariable(\"aiaVitalityId2\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaVitalityId);\r",
                  "}\r",
                  "\r",
                  "catch(err){\r",
                  "  tests[\"Data in response does not exist\"] = false;  \r",
                  "}\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "{{UmsURL}}/{{UMSContext}}/UsermanagementService",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "text/xml",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:ser=\"http://service.usermanagement.aiaa.com.au\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <ser:searchUserRequest>\n         <source>VITALITY</source>\n         <userType></userType>\n         <userDetails>\n            <userName></userName>\n            <userId></userId>\n            <userDN></userDN>\n            <email>{{Email}}</email>\n            <givenName></givenName>\n            <surname></surname>\n            <webChannel></webChannel>\n            <token></token>\n            <fundIdentifier></fundIdentifier>\n            <eligibilityAssessorEmail></eligibilityAssessorEmail>\n            <activationURL></activationURL>\n            <consentURL></consentURL>\n            <!--1 or more repetitions:-->\n            <userRolesList></userRolesList>\n            <title></title>\n            <dateOfBirth></dateOfBirth>\n            <gender></gender>\n            <addressLine1></addressLine1>\n            <addressLine2></addressLine2>\n            <suburb></suburb>\n            <state></state>\n            <postcode></postcode>\n            <country></country>\n            <mobilePhone></mobilePhone>\n            <workPhone></workPhone>\n            <homePhone></homePhone>\n            <fax></fax>\n            <isRetailLifeInsured></isRetailLifeInsured>\n            <passwordRequestDate></passwordRequestDate>\n            <password></password>\n            <passwordRequestCount></passwordRequestCount>\n            <aiaProposalNumber></aiaProposalNumber>\n            <aiaProposalWritingAdviser></aiaProposalWritingAdviser>\n            <aiaCCAppTnCAcceptedDate></aiaCCAppTnCAcceptedDate>\n            <aiaCCAppTnCVersion></aiaCCAppTnCVersion>\n            <!--1 or more repetitions:-->\n            <userGroupsList></userGroupsList>\n            <!--1 or more repetitions:-->\n            <userGroupsDNList></userGroupsDNList>\n            <memberType></memberType>\n            <residentialPostcode></residentialPostcode>\n            <userStatus></userStatus>\n            <aiaClientNumber></aiaClientNumber>\n            <aiaVitalityMemberNumber></aiaVitalityMemberNumber>\n            <aiaDsyPolicyNumber></aiaDsyPolicyNumber>\n            <aiaVitalityCobrandingInfo></aiaVitalityCobrandingInfo>\n         </userDetails>\n      </ser:searchUserRequest>\n   </soapenv:Body>\n</soapenv:Envelope>\n\n"
            },
            "description": "A/C:\r\nGiven that members activated their membership\r\nWhen ESB gets the action\r\nThen their membership will be activated in UMS"
          },
          "response": []
        },
        {
          "_postman_id": "3fd8bfd1-092b-c830-c40a-4353d3d690cc",
          "name": "RA-153: Enrolling a Member - New Process 3",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "",
                  "",
                  "tests[\"Verifying that Enrolment is successfull\"] =  body.status === \"Data Accepted\";",
                  "",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "",
                  "//Generating Random Email address to pass into the data so that user duplication does not happen",
                  "function makeEmail() {",
                  "  var strValues = \"qpotvghysbnxui56z\";",
                  "  var strEmail = \"\";",
                  "  var strTmp;",
                  "  for (var i = 0; i < 10; i++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strTmp = \"\";",
                  "  strEmail = strEmail + \"@\";",
                  "  for (var j = 0; j < 8; j++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strEmail = strEmail + \"esbpii.com\";",
                  "  return strEmail;",
                  "}",
                  "",
                  "",
                  "//Setting up the random email to an environment variable",
                  "postman.setEnvironmentVariable(\"Email\", makeEmail());",
                  "postman.setEnvironmentVariable(\"Email3\", environment.Email);",
                  "console.log(\"Email: \"+environment.Email);",
                  "",
                  "var firstName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);",
                  "",
                  "//Setting up the firstName to an environment variable",
                  "postman.setEnvironmentVariable(\"firstName\", firstName);",
                  "console.log(\"firstName: \"+environment.firstName);",
                  "",
                  "var lastName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 8);",
                  "",
                  "//Setting up the lastName to an environment variable",
                  "postman.setEnvironmentVariable(\"lastName\", lastName);",
                  "console.log(\"lastName: \"+environment.lastName);",
                  "",
                  "",
                  "//Incrementing and Setting up the memberID to an environment variable",
                  "// var memberIdNumber = parseInt(environment.memberIdNumber)+1;",
                  "var memberIdNumber = Date.now();",
                  "console.log(memberIdNumber);",
                  "postman.setEnvironmentVariable(\"memberIdNumber\", memberIdNumber);",
                  "postman.setEnvironmentVariable(\"memberID\", \"RA\"+memberIdNumber.toString());",
                  "postman.setEnvironmentVariable(\"memberID3\", environment.memberID);",
                  "console.log(\"memberID :\"+environment.memberID);",
                  ""
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
            },
            "description": ""
          },
          "response": [
            {
              "id": "2077332c-e1ce-79bf-34aa-8408e68a7cbc",
              "name": "response 3",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:17 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "1830",
              "body": "{\"token\":\"1ed2d16e-9fc9-46ed-af8e-49e5b5207e79\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "528b9128-d0fa-4cc5-a75a-cb3b613fa960",
              "name": "response 1",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:13:56 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "215",
              "body": "{\"token\":\"39b8615a-307d-419f-a503-4d4fa6c7021d\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "bd88c736-0b0e-b76a-4e51-d3be0cd7e3ba",
              "name": "error",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "key": "Connection",
                  "value": "Keep-Alive",
                  "name": "Connection",
                  "description": ""
                },
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "name": "Content-Type",
                  "description": ""
                },
                {
                  "key": "Date",
                  "value": "Wed, 14 Dec 2016 00:42:55 GMT",
                  "name": "Date",
                  "description": ""
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked",
                  "name": "Transfer-Encoding",
                  "description": ""
                },
                {
                  "key": "X-Backside-Transport",
                  "value": "OK OK",
                  "name": "X-Backside-Transport",
                  "description": ""
                },
                {
                  "key": "X-Client-IP",
                  "value": "10.61.38.184",
                  "name": "X-Client-IP",
                  "description": ""
                },
                {
                  "key": "X-Global-Transaction-ID",
                  "value": "348720",
                  "name": "X-Global-Transaction-ID",
                  "description": ""
                }
              ],
              "cookie": [],
              "responseTime": "1537",
              "body": "{\"response\":{}}"
            },
            {
              "id": "d364df70-e555-cf5b-e364-0113ecf71139",
              "name": "response 2",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:07 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "237",
              "body": "{\"token\":\"a77eb61e-5dd3-4680-931e-49122ab21153\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            }
          ]
        },
        {
          "_postman_id": "1510384e-b3a3-10de-789e-6d75bc8e4313",
          "name": "Wait for enrolment to finish 3",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "{{password_ESB}}",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{testPackageURL}}/rest/restTestPackage.ws.sleep?seconds=200",
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {},
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "acdf6e4e-491f-8ab6-2f24-752adb5d689e",
          "name": "RA-147 : Verifying user has been added to UMS and is InActive Status 2",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonObject = xml2Json(responseBody);\r",
                  "\r",
                  "try\r",
                  "{\r",
                  "    tests[\"Verifying that User status is Not Activated\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userStatus === \"I\";\r",
                  "    \r",
                  "    tests[\"Verifying that User ID is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userId === environment.Email ;\r",
                  "    \r",
                  "    tests[\"Verifying that Email is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.email === environment.Email ;\r",
                  "    \r",
                  "    tests[\"Verifying that First Name is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.givenName === environment.firstName ;\r",
                  "    \r",
                  "    tests[\"Verifying that Last name is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.surname === environment.lastName ;\r",
                  "    \r",
                  "    tests[\"Verifying that Member Type is as passed to UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.memberType === \"GROUP\" ;\r",
                  "    \r",
                  "    tests[\"Verifying that User Groups List is VITALITY_AWAITING_ACTIVATION\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userGroupsList === \"VITALITY_AWAITING_ACTIVATION\" ;\r",
                  "    \r",
                  "    \r",
                  "    //Setting up the token to an environment variable to be used in subsequent requests\r",
                  "    \r",
                  "    postman.setEnvironmentVariable(\"umsToken\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.token);\r",
                  "    \r",
                  "    postman.setEnvironmentVariable(\"aiaClientNumber\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaClientNumber);\r",
                  "    postman.setEnvironmentVariable(\"aiaVitalityMemberNumber\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaVitalityMemberNumber);\r",
                  "    postman.setEnvironmentVariable(\"aiaDsyPolicyNumber\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaDsyPolicyNumber);\r",
                  "    \r",
                  "    postman.setEnvironmentVariable(\"aiaVitalityId3\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaVitalityId);\r",
                  "}\r",
                  "\r",
                  "catch(err){\r",
                  "  tests[\"Data in response does not exist\"] = false;  \r",
                  "}\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "{{UmsURL}}/{{UMSContext}}/UsermanagementService",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "text/xml",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:ser=\"http://service.usermanagement.aiaa.com.au\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <ser:searchUserRequest>\n         <source>VITALITY</source>\n         <userType></userType>\n         <userDetails>\n            <userName></userName>\n            <userId></userId>\n            <userDN></userDN>\n            <email>{{Email}}</email>\n            <givenName></givenName>\n            <surname></surname>\n            <webChannel></webChannel>\n            <token></token>\n            <fundIdentifier></fundIdentifier>\n            <eligibilityAssessorEmail></eligibilityAssessorEmail>\n            <activationURL></activationURL>\n            <consentURL></consentURL>\n            <!--1 or more repetitions:-->\n            <userRolesList></userRolesList>\n            <title></title>\n            <dateOfBirth></dateOfBirth>\n            <gender></gender>\n            <addressLine1></addressLine1>\n            <addressLine2></addressLine2>\n            <suburb></suburb>\n            <state></state>\n            <postcode></postcode>\n            <country></country>\n            <mobilePhone></mobilePhone>\n            <workPhone></workPhone>\n            <homePhone></homePhone>\n            <fax></fax>\n            <isRetailLifeInsured></isRetailLifeInsured>\n            <passwordRequestDate></passwordRequestDate>\n            <password></password>\n            <passwordRequestCount></passwordRequestCount>\n            <aiaProposalNumber></aiaProposalNumber>\n            <aiaProposalWritingAdviser></aiaProposalWritingAdviser>\n            <aiaCCAppTnCAcceptedDate></aiaCCAppTnCAcceptedDate>\n            <aiaCCAppTnCVersion></aiaCCAppTnCVersion>\n            <!--1 or more repetitions:-->\n            <userGroupsList></userGroupsList>\n            <!--1 or more repetitions:-->\n            <userGroupsDNList></userGroupsDNList>\n            <memberType></memberType>\n            <residentialPostcode></residentialPostcode>\n            <userStatus></userStatus>\n            <aiaClientNumber></aiaClientNumber>\n            <aiaVitalityMemberNumber></aiaVitalityMemberNumber>\n            <aiaDsyPolicyNumber></aiaDsyPolicyNumber>\n            <aiaVitalityCobrandingInfo></aiaVitalityCobrandingInfo>\n         </userDetails>\n      </ser:searchUserRequest>\n   </soapenv:Body>\n</soapenv:Envelope>\n\n"
            },
            "description": "A/C:\r\nGiven that members activated their membership\r\nWhen ESB gets the action\r\nThen their membership will be activated in UMS"
          },
          "response": []
        },
        {
          "_postman_id": "4b82d616-b860-7c72-355a-0b6b56e6de57",
          "name": "RA-228 : Mark For Termination - Bulk",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 \r",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;\r",
                  "try {\r",
                  "    var jsonData = JSON.parse(responseBody);\r",
                  "    tests[\"Verifying that the over all result is SUCCESS\"] = jsonData.response.status === \"success\";\r",
                  "    \r",
                  "    tests[\"Verifying that the appropriate MemberID is returned\"] = jsonData.response.member[0].memberId === environment.memberID1;\r",
                  "    tests[\"Verifying that the individual result is SUCCESS\"] = jsonData.response.member[0].status === \"success\";\r",
                  "    \r",
                  "    tests[\"Verifying that the appropriate MemberID is returned\"] = jsonData.response.member[1].memberId === environment.memberID2;\r",
                  "    tests[\"Verifying that the individual result is SUCCESS\"] = jsonData.response.member[1].status === \"success\";\r",
                  "    \r",
                  "    tests[\"Verifying that the appropriate MemberID is returned\"] = jsonData.response.member[2].memberId === environment.memberID3;\r",
                  "    tests[\"Verifying that the individual result is SUCCESS\"] = jsonData.response.member[2].status === \"success\";\r",
                  "} catch (err) {\r",
                  "    tests[\"Data in response does not exist\"] = false;\r",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipMaintenance.rs.termination.v1 ",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"relationshipName\": \"GRESTFUNDMEMBER\",\n  \"member\": [\n    {\n      \"memberId\": \"{{memberID1}}\"\n    },\n    {\n      \"memberId\": \"{{memberID2}}\"\n    },\n    {\n      \"memberId\": \"{{memberID3}}\"\n    }\n  ],\n  \"uuid\": \"{{$guid}}\"\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "3f442a16-5be8-453b-0a0c-44f538591612",
          "name": "Wait for Termination to finish",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{testPackageURL}}/rest/restTestPackage.ws.sleep?seconds=80",
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {},
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "05b56e50-8e38-bf5f-d89d-5789d1eebde2",
          "name": "RA-144: Verifying that all the PENDINGTERMIANTIONDATE is updated 1",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "//Verifing that the response time is less than the value declared in global  variable ",
                  "tests[\"Response time is less than \" + globals.responseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < globals.responseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "//console.log(environment.restMemberId+\"aiaPiiData\");",
                  "",
                  "try{",
                  "    tests[\"Verifying that Email in Core VMMP DB is as passed\"] = body.email === environment.Email1;",
                  "    tests[\"Verifying that the Member ID is matching\"] = body.memberships[0].nominationNo === environment.memberID1;",
                  "    tests[\"Verifying that Relationship Id in Core VMMP DB is as passed\"] = body.relationship.name === environment.relationshipName;",
                  "    ",
                  "    tests[\"Verifying that the pendingTerminationDate is updated\"] = body.memberships[0].pendingTerminationDate !== undefined;",
                  "    tests[\"Verifying that the status is still ACTIVATED\"] = body.memberships[0].status.name === \"ACTIVATED\";",
                  "}",
                  "catch(err){",
                  "    tests[\"Data does not exist\"] = false;",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{VmmpUrl}}/restapi-vitality-member-management-service/registration/members/{{Email1}}",
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"email\":\"{{Email}}\"} "
            },
            "description": "A/C :\n\nDup check passed:\nGiven that a record is of a unique member \nWhen dup check runs\nThen VMMP core table member's record will be updated with the member's details"
          },
          "response": []
        },
        {
          "_postman_id": "bb4724e4-49ea-e082-bb4c-61a36fc5a117",
          "name": "RA-144: Verifying that all the PENDINGTERMIANTIONDATE is updated 2",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "//Verifing that the response time is less than the value declared in global  variable ",
                  "tests[\"Response time is less than \" + globals.responseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < globals.responseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "//console.log(environment.restMemberId+\"aiaPiiData\");",
                  "",
                  "try{",
                  "    tests[\"Verifying that Email in Core VMMP DB is as passed\"] = body.email === environment.Email2;",
                  "    tests[\"Verifying that the Member ID is matching\"] = body.memberships[0].nominationNo === environment.memberID2;",
                  "    tests[\"Verifying that Relationship Id in Core VMMP DB is as passed\"] = body.relationship.name === environment.relationshipName;",
                  "    ",
                  "    tests[\"Verifying that the pendingTerminationDate is updated\"] = body.memberships[0].pendingTerminationDate !== undefined;",
                  "    tests[\"Verifying that the status is still ACTIVATED\"] = body.memberships[0].status.name === \"AWAITING_ACTIVATION\";",
                  "}",
                  "catch(err){",
                  "    tests[\"Data does not exist\"] = false;",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{VmmpUrl}}/restapi-vitality-member-management-service/registration/members/{{Email2}}",
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"email\":\"{{Email}}\"} "
            },
            "description": "A/C :\n\nDup check passed:\nGiven that a record is of a unique member \nWhen dup check runs\nThen VMMP core table member's record will be updated with the member's details"
          },
          "response": []
        },
        {
          "_postman_id": "52ffac14-7a97-ea28-86de-e3f381b9605e",
          "name": "RA-144: Verifying that all the PENDINGTERMIANTIONDATE is updated 3",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "//Verifing that the response time is less than the value declared in global  variable ",
                  "tests[\"Response time is less than \" + globals.responseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < globals.responseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "//console.log(environment.restMemberId+\"aiaPiiData\");",
                  "",
                  "try{",
                  "    tests[\"Verifying that Email in Core VMMP DB is as passed\"] = body.email === environment.Email3;",
                  "    tests[\"Verifying that the Member ID is matching\"] = body.memberships[0].nominationNo === environment.memberID3;",
                  "    tests[\"Verifying that Relationship Id in Core VMMP DB is as passed\"] = body.relationship.name === environment.relationshipName;",
                  "    ",
                  "    tests[\"Verifying that the pendingTerminationDate is updated\"] = body.memberships[0].pendingTerminationDate !== undefined;",
                  "    tests[\"Verifying that the status is still ACTIVATED\"] = body.memberships[0].status.name === \"AWAITING_ACTIVATION\";",
                  "}",
                  "catch(err){",
                  "    tests[\"Data does not exist\"] = false;",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{VmmpUrl}}/restapi-vitality-member-management-service/registration/members/{{Email3}}",
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"email\":\"{{Email}}\"} "
            },
            "description": "A/C :\n\nDup check passed:\nGiven that a record is of a unique member \nWhen dup check runs\nThen VMMP core table member's record will be updated with the member's details"
          },
          "response": []
        },
        {
          "_postman_id": "4323d1d6-493f-80e4-56ab-7aea151d5f4b",
          "name": "RA-267 : Cancel pending termination - Bulk",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 \r",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;\r",
                  "try {\r",
                  "    var jsonData = JSON.parse(responseBody);\r",
                  "    tests[\"Verifying that the over all result is SUCCESS\"] = jsonData.response.status === \"success\";\r",
                  "    \r",
                  "    tests[\"Verifying that the appropriate MemberID is returned\"] = jsonData.response.member[0].memberId === environment.memberID1;\r",
                  "    tests[\"Verifying that the individual result is SUCCESS\"] = jsonData.response.member[0].status === \"success\";\r",
                  "    \r",
                  "    tests[\"Verifying that the appropriate MemberID is returned\"] = jsonData.response.member[1].memberId === environment.memberID2;\r",
                  "    tests[\"Verifying that the individual result is SUCCESS\"] = jsonData.response.member[1].status === \"success\";\r",
                  "    \r",
                  "    tests[\"Verifying that the appropriate MemberID is returned\"] = jsonData.response.member[2].memberId === environment.memberID3;\r",
                  "    tests[\"Verifying that the individual result is SUCCESS\"] = jsonData.response.member[2].status === \"success\";\r",
                  "} catch (err) {\r",
                  "    tests[\"Data in response does not exist\"] = false;\r",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipMaintenance.rs.cancelTermination.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"relationshipName\": \"GRESTFUNDMEMBER\",\n  \"member\": [\n    {\n      \"memberId\": \"{{memberID1}}\"\n    },\n    {\n      \"memberId\": \"{{memberID2}}\"\n    },\n    {\n      \"memberId\": \"{{memberID3}}\"\n    }\n  ],\n  \"uuid\": \"{{$guid}}\"\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "4a60a5f4-465a-0951-869a-d715d2cb82d4",
          "name": "Wait for Cancel Termination to finish",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{testPackageURL}}/rest/restTestPackage.ws.sleep?seconds=80",
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {},
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "0b7e6fd1-cbc5-34a7-53bf-f4c07f7d1720",
          "name": "RA-144: Verifying that all the PENDINGTERMIANTIONDATE value is removed 1",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "//Verifing that the response time is less than the value declared in global  variable ",
                  "tests[\"Response time is less than \" + globals.responseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < globals.responseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "//console.log(environment.restMemberId+\"aiaPiiData\");",
                  "",
                  "try{",
                  "    tests[\"Verifying that Email in Core VMMP DB is as passed\"] = body.email === environment.Email1;",
                  "    // tests[\"Verifying that First Name in Core VMMP DB is as passed\"] = body.firstName === environment.firstName;",
                  "    // tests[\"Verifying that Last Name in Core VMMP DB is as passed\"] = body.lastName === environment.lastName;",
                  "    // tests[\"Verifying that Gender in Core VMMP DB is as passed\"] = body.gender === \"M\";",
                  "    // tests[\"Verifying that DOB in Core VMMP DB is as passed\"] = Date.create(body.dateOfBirth).is(Date.create(environment.vmmpDOB));",
                  "    // tests[\"Verifying that Relationship Id in Core VMMP DB is as passed\"] = body.relationship.name === environment.relationshipName;",
                  "    ",
                  "    tests[\"Verifying that the pendingTerminationDate is updated\"] = body.memberships[0].pendingTerminationDate === undefined;",
                  "    tests[\"Verifying that the status is still ACTIVATED\"] = body.memberships[0].status.name === \"ACTIVATED\";",
                  "}",
                  "catch(err){",
                  "    ",
                  "    tests[\"Data does not exist\"] = false;",
                  "}",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{VmmpUrl}}/restapi-vitality-member-management-service/registration/members/{{Email1}}",
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"email\":\"{{Email}}\"} "
            },
            "description": "A/C :\n\nDup check passed:\nGiven that a record is of a unique member \nWhen dup check runs\nThen VMMP core table member's record will be updated with the member's details"
          },
          "response": []
        },
        {
          "_postman_id": "2574c8b2-3b29-0695-8988-4a6aa98adc41",
          "name": "RA-144: Verifying that all the PENDINGTERMIANTIONDATE value is removed 2",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "//Verifing that the response time is less than the value declared in global  variable ",
                  "tests[\"Response time is less than \" + globals.responseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < globals.responseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "//console.log(environment.restMemberId+\"aiaPiiData\");",
                  "",
                  "try{",
                  "    tests[\"Verifying that Email in Core VMMP DB is as passed\"] = body.email === environment.Email2;",
                  "    // tests[\"Verifying that First Name in Core VMMP DB is as passed\"] = body.firstName === environment.firstName;",
                  "    // tests[\"Verifying that Last Name in Core VMMP DB is as passed\"] = body.lastName === environment.lastName;",
                  "    // tests[\"Verifying that Gender in Core VMMP DB is as passed\"] = body.gender === \"M\";",
                  "    // tests[\"Verifying that DOB in Core VMMP DB is as passed\"] = Date.create(body.dateOfBirth).is(Date.create(environment.vmmpDOB));",
                  "    // tests[\"Verifying that Relationship Id in Core VMMP DB is as passed\"] = body.relationship.name === environment.relationshipName;",
                  "    ",
                  "    tests[\"Verifying that the pendingTerminationDate is updated\"] = body.memberships[0].pendingTerminationDate === undefined;",
                  "    tests[\"Verifying that the status is still AWAITING_ACTIVATION\"] = body.memberships[0].status.name === \"AWAITING_ACTIVATION\";",
                  "}",
                  "catch(err){",
                  "    ",
                  "    tests[\"Data does not exist\"] = false;",
                  "}",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{VmmpUrl}}/restapi-vitality-member-management-service/registration/members/{{Email2}}",
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"email\":\"{{Email}}\"} "
            },
            "description": "A/C :\n\nDup check passed:\nGiven that a record is of a unique member \nWhen dup check runs\nThen VMMP core table member's record will be updated with the member's details"
          },
          "response": []
        },
        {
          "_postman_id": "e498fbda-82fb-57a3-37d4-f3aba6adf16f",
          "name": "RA-144: Verifying that all the PENDINGTERMIANTIONDATE value is removed 3",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "//Verifing that the response time is less than the value declared in global  variable ",
                  "tests[\"Response time is less than \" + globals.responseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < globals.responseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "//console.log(environment.restMemberId+\"aiaPiiData\");",
                  "",
                  "try{",
                  "    tests[\"Verifying that Email in Core VMMP DB is as passed\"] = body.email === environment.Email3;",
                  "    // tests[\"Verifying that First Name in Core VMMP DB is as passed\"] = body.firstName === environment.firstName;",
                  "    // tests[\"Verifying that Last Name in Core VMMP DB is as passed\"] = body.lastName === environment.lastName;",
                  "    // tests[\"Verifying that Gender in Core VMMP DB is as passed\"] = body.gender === \"M\";",
                  "    // tests[\"Verifying that DOB in Core VMMP DB is as passed\"] = Date.create(body.dateOfBirth).is(Date.create(environment.vmmpDOB));",
                  "    // tests[\"Verifying that Relationship Id in Core VMMP DB is as passed\"] = body.relationship.name === environment.relationshipName;",
                  "    ",
                  "    tests[\"Verifying that the pendingTerminationDate is updated\"] = body.memberships[0].pendingTerminationDate === undefined;",
                  "    tests[\"Verifying that the status is still AWAITING_ACTIVATION\"] = body.memberships[0].status.name === \"AWAITING_ACTIVATION\";",
                  "}",
                  "catch(err){",
                  "    ",
                  "    tests[\"Data does not exist\"] = false;",
                  "}",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{VmmpUrl}}/restapi-vitality-member-management-service/registration/members/{{Email3}}",
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"email\":\"{{Email}}\"} "
            },
            "description": "A/C :\n\nDup check passed:\nGiven that a record is of a unique member \nWhen dup check runs\nThen VMMP core table member's record will be updated with the member's details"
          },
          "response": []
        },
        {
          "_postman_id": "ee0aa839-85c6-0ac4-4386-1946afac6c80",
          "name": "RA-144: Upating VMMP status to Terminated",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "var jsonData = JSON.parse(responseBody);",
                  "tests[\"Verifying that the status of the member has been updated to AWAITING ACTIVATION\"] = jsonData.memberships[0].status.name === \"TERMINATED\";"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var aiaClientNumber = (Math.random()*100000000000000000).toString().substr(0,4);",
                  "postman.setEnvironmentVariable(\"aiaClientNumber\",aiaClientNumber);",
                  "",
                  "var aiaVitalityMemberNumber = (Math.random()*100000000000000000).toString().substr(0,5);",
                  "postman.setEnvironmentVariable(\"aiaVitalityMemberNumber\",aiaVitalityMemberNumber);",
                  "",
                  "var aiaDsyPolicyNumber = (Math.random()*100000000000000000).toString().substr(0,6);",
                  "postman.setEnvironmentVariable(\"aiaDsyPolicyNumber\",aiaDsyPolicyNumber);",
                  "",
                  "var aiaVitalityId = (Math.random()*100000000000000000).toString().substr(0,7);",
                  "postman.setEnvironmentVariable(\"aiaVitalityId\",aiaVitalityId);",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "{{VmmpUrl}}/{{VMMPContext}}/registration/members/{{Email}}",
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"status\" : \"TERMINATED\",\r\n  \"failureReason\" : null\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "eae68670-e3cd-cb87-e920-47496686d942",
          "name": "RA-228 : Mark For Termination - Member already Terminated",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "try {",
                  "    var jsonData = JSON.parse(responseBody);",
                  "",
                  "    tests[\"Verifying that the over all result is SUCCESS\"] = jsonData.response.status === \"success\";",
                  "    tests[\"Verifying that the appropriate MemberID is returned\"] = jsonData.response.member[0].memberId === environment.memberID;",
                  "    tests[\"Verifying that the individual result is FAILURE\"] = jsonData.response.member[0].status === \"failure\";",
                  "    tests[\"Verifying that the reason is 'NO_ACTIVE_MEMBERSHIP'\"] = jsonData.response.member[0].reason === \"NO_ACTIVE_MEMBERSHIP\";",
                  "} catch (err) {",
                  "    tests[\"Data in response does not exist\"] = false;",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipMaintenance.rs.termination.v1 ",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"relationshipName\":\"GRESTFUNDMEMBER\",\r\n   \"member\":[\r\n      {\r\n         \"memberId\":\"{{memberID}}\"\r\n      }\r\n   ],\r\n   \"uuid\":\"{{$guid}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "2e579709-91c3-8d16-1759-27a3bb0486d2",
          "name": "RA-228 : Mark For Termination - Invalid Member ID",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "try {",
                  "    var jsonData = JSON.parse(responseBody);",
                  "",
                  "    tests[\"Verifying that the over all result is SUCCESS\"] = jsonData.response.status === \"success\";",
                  "    tests[\"Verifying that the appropriate MemberID is returned\"] = jsonData.response.member[0].memberId === \"SomeDummyMemberID\";",
                  "    tests[\"Verifying that the individual result is FAILURE\"] = jsonData.response.member[0].status === \"failure\";",
                  "    tests[\"Verifying that the reason is'User not found'\"] = jsonData.response.member[0].reason === \"User not found\";",
                  "} catch (err) {",
                  "    tests[\"Data in response does not exist\"] = false;",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipMaintenance.rs.termination.v1 ",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"relationshipName\":\"GRESTFUNDMEMBER\",\r\n   \"member\":[\r\n      {\r\n         \"memberId\":\"SomeDummyMemberID\"\r\n      }\r\n   ],\r\n   \"uuid\":\"{{$guid}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "040da8c1-cac9-9709-0b6d-93f8db090585",
          "name": "RA-228 : Mark For Termination - Invalid Relationship Name",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "try {",
                  "    var jsonData = JSON.parse(responseBody);",
                  "",
                  "    tests[\"Verifying that the over all result is SUCCESS\"] = jsonData.response.status === \"success\";",
                  "    tests[\"Verifying that the appropriate MemberID is returned\"] = jsonData.response.member[0].memberId === environment.memberID;",
                  "    tests[\"Verifying that the individual result is FAILURE\"] = jsonData.response.member[0].status === \"failure\";",
                  "    tests[\"Verifying that the reason is'INVALID_RELATIONSHIP'\"] = jsonData.response.member[0].reason === \"INVALID_RELATIONSHIP\";",
                  "} catch (err) {",
                  "    tests[\"Data in response does not exist\"] = false;",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipMaintenance.rs.termination.v1 ",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"relationshipName\":\"NotARelationship\",\r\n   \"member\":[\r\n      {\r\n         \"memberId\":\"{{memberID}}\"\r\n      }\r\n   ],\r\n   \"uuid\":\"{{$guid}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "cc642a79-d55d-50c4-540d-2151578308ac",
          "name": "RA-228 : Mark For Termination - Member ID is NULL",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "try {",
                  "    var jsonData = JSON.parse(responseBody);",
                  "",
                  "    tests[\"Verifying that the over all result is SUCCESS\"] = jsonData.response.status === \"success\";",
                  "    tests[\"Verifying that the appropriate MemberID is returned\"] = jsonData.response.member[0].memberId === null;",
                  "    tests[\"Verifying that the individual result is FAILURE\"] = jsonData.response.member[0].status === \"failure\";",
                  "    tests[\"Verifying that the reason is 'No Member ID provided'\"] = jsonData.response.member[0].reason === \"No Member ID provided\";",
                  "} catch (err) {",
                  "    tests[\"Data in response does not exist\"] = false;",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipMaintenance.rs.termination.v1 ",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"relationshipName\":\"GRESTFUNDMEMBER\",\r\n   \"member\":[\r\n      {\r\n         \"memberId\":null\r\n      }\r\n   ],\r\n   \"uuid\":\"{{$guid}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "dab7679e-a10b-0e1e-ae06-41d5418c3db9",
          "name": "RA-228 : Mark For Termination - Relationship Name is NULL",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "try {",
                  "    var jsonData = JSON.parse(responseBody);",
                  "",
                  "    tests[\"Verifying that the over all result is SUCCESS\"] = jsonData.response.status === \"success\";",
                  "    tests[\"Verifying that the appropriate MemberID is returned\"] = jsonData.response.member[0].memberId === environment.memberID;",
                  "    tests[\"Verifying that the individual result is FAILURE\"] = jsonData.response.member[0].status === \"failure\";",
                  "    tests[\"Verifying that the reason is'No Relationship Name provided'\"] = jsonData.response.member[0].reason === \"No Relationship Name provided\";",
                  "} catch (err) {",
                  "    tests[\"Data in response does not exist\"] = false;",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipMaintenance.rs.termination.v1 ",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"relationshipName\":null,\r\n   \"member\":[\r\n      {\r\n         \"memberId\":\"{{memberID}}\"\r\n      }\r\n   ],\r\n   \"uuid\":\"{{$guid}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "51a1a469-6176-628c-d829-62d5ed98294a",
          "name": "RA-228 : Mark For Termination - Invalid Member ID and Relationship Name",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "try {",
                  "    var jsonData = JSON.parse(responseBody);",
                  "",
                  "    tests[\"Verifying that the over all result is SUCCESS\"] = jsonData.response.status === \"success\";",
                  "    tests[\"Verifying that the appropriate MemberID is returned\"] = jsonData.response.member[0].memberId === null;",
                  "    tests[\"Verifying that the individual result is FAILURE\"] = jsonData.response.member[0].status === \"failure\";",
                  "    tests[\"Verifying that the reason is'No Relationship Name provided'\"] = jsonData.response.member[0].reason === \"No Relationship Name provided\";",
                  "} catch (err) {",
                  "    tests[\"Data in response does not exist\"] = false;",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipMaintenance.rs.termination.v1 ",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"relationshipName\":null,\r\n   \"member\":[\r\n      {\r\n         \"memberId\":null\r\n      }\r\n   ],\r\n   \"uuid\":\"{{$guid}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "317204f1-0f8c-cf04-226f-6afd052bc43e",
          "name": "RA-267 : Cancel pending termination - Invalid Member ID",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "try {",
                  "    var jsonData = JSON.parse(responseBody);",
                  "",
                  "    tests[\"Verifying that the over all result is SUCCESS\"] = jsonData.response.status === \"success\";",
                  "    tests[\"Verifying that the appropriate MemberID is returned\"] = jsonData.response.member[0].memberId === \"SomeDummyMemberID\";",
                  "    tests[\"Verifying that the individual result is FAILURE\"] = jsonData.response.member[0].status === \"failure\";",
                  "    tests[\"Verifying that the reason is'User not found'\"] = jsonData.response.member[0].reason === \"User not found\";",
                  "} catch (err) {",
                  "    tests[\"Data in response does not exist\"] = false;",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipMaintenance.rs.cancelTermination.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"relationshipName\":\"GRESTFUNDMEMBER\",\r\n   \"member\":[\r\n      {\r\n         \"memberId\":\"SomeDummyMemberID\"\r\n      }\r\n   ],\r\n   \"uuid\":\"{{$guid}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "7fbe3c8d-4500-700e-570b-7b4b308e0ff8",
          "name": "RA-267 : Cancel pending termination - Invalid Relationship Name",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "try {",
                  "    var jsonData = JSON.parse(responseBody);",
                  "",
                  "    tests[\"Verifying that the over all result is SUCCESS\"] = jsonData.response.status === \"success\";",
                  "    tests[\"Verifying that the appropriate MemberID is returned\"] = jsonData.response.member[0].memberId === environment.memberID;",
                  "    tests[\"Verifying that the individual result is FAILURE\"] = jsonData.response.member[0].status === \"failure\";",
                  "    tests[\"Verifying that the reason is'INVALID_RELATIONSHIP'\"] = jsonData.response.member[0].reason === \"INVALID_RELATIONSHIP\";",
                  "} catch (err) {",
                  "    tests[\"Data in response does not exist\"] = false;",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipMaintenance.rs.cancelTermination.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"relationshipName\":\"NotARelationship\",\r\n   \"member\":[\r\n      {\r\n         \"memberId\":\"{{memberID}}\"\r\n      }\r\n   ],\r\n   \"uuid\":\"{{$guid}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "6051b69f-29f2-b1e7-2390-b8c6300344ef",
          "name": "RA-267 : Cancel pending termination - Member ID is NULL",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "try {",
                  "    var jsonData = JSON.parse(responseBody);",
                  "",
                  "    tests[\"Verifying that the over all result is SUCCESS\"] = jsonData.response.status === \"success\";",
                  "    tests[\"Verifying that the appropriate MemberID is returned\"] = jsonData.response.member[0].memberId === null;",
                  "    tests[\"Verifying that the individual result is FAILURE\"] = jsonData.response.member[0].status === \"failure\";",
                  "    tests[\"Verifying that the reason is 'No Member ID provided'\"] = jsonData.response.member[0].reason === \"No Member ID provided\";",
                  "} catch (err) {",
                  "    tests[\"Data in response does not exist\"] = false;",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipMaintenance.rs.cancelTermination.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"relationshipName\":\"GRESTFUNDMEMBER\",\r\n   \"member\":[\r\n      {\r\n         \"memberId\":null\r\n      }\r\n   ],\r\n   \"uuid\":\"{{$guid}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "3144f95a-0773-c380-6fbf-34670940c08e",
          "name": "RA-267 : Cancel pending termination - Relationship Name is NULL",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "try {",
                  "    var jsonData = JSON.parse(responseBody);",
                  "",
                  "    tests[\"Verifying that the over all result is SUCCESS\"] = jsonData.response.status === \"success\";",
                  "    tests[\"Verifying that the appropriate MemberID is returned\"] = jsonData.response.member[0].memberId === environment.memberID;",
                  "    tests[\"Verifying that the individual result is FAILURE\"] = jsonData.response.member[0].status === \"failure\";",
                  "    tests[\"Verifying that the reason is'No Relationship Name provided'\"] = jsonData.response.member[0].reason === \"No Relationship Name provided\";",
                  "} catch (err) {",
                  "    tests[\"Data in response does not exist\"] = false;",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipMaintenance.rs.cancelTermination.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"relationshipName\":null,\r\n   \"member\":[\r\n      {\r\n         \"memberId\":\"{{memberID}}\"\r\n      }\r\n   ],\r\n   \"uuid\":\"{{$guid}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "4dcb9469-5fdc-db74-171b-45de36a90256",
          "name": "RA-267 : Cancel pending termination - Invalid Member ID and Relationship Name",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "try {",
                  "    var jsonData = JSON.parse(responseBody);",
                  "",
                  "    tests[\"Verifying that the over all result is SUCCESS\"] = jsonData.response.status === \"success\";",
                  "    tests[\"Verifying that the appropriate MemberID is returned\"] = jsonData.response.member[0].memberId === null;",
                  "    tests[\"Verifying that the individual result is FAILURE\"] = jsonData.response.member[0].status === \"failure\";",
                  "    tests[\"Verifying that the reason is'No Relationship Name provided'\"] = jsonData.response.member[0].reason === \"No Relationship Name provided\";",
                  "} catch (err) {",
                  "    tests[\"Data in response does not exist\"] = false;",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipMaintenance.rs.cancelTermination.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"relationshipName\":null,\r\n   \"member\":[\r\n      {\r\n         \"memberId\":null\r\n      }\r\n   ],\r\n   \"uuid\":\"{{$guid}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "157488b2-aaf5-f79c-f5a5-77070debf4e5",
          "name": "RA-267 : Cancel pending termination - Member already Terminated",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "try {",
                  "    var jsonData = JSON.parse(responseBody);",
                  "",
                  "    tests[\"Verifying that the over all result is SUCCESS\"] = jsonData.response.status === \"success\";",
                  "    tests[\"Verifying that the appropriate MemberID is returned\"] = jsonData.response.member[0].memberId === environment.memberID;",
                  "    tests[\"Verifying that the individual result is FAILURE\"] = jsonData.response.member[0].status === \"failure\";",
                  "    tests[\"Verifying that the reason is'NO_ACTIVE_MEMBERSHIP'\"] = jsonData.response.member[0].reason === \"NO_ACTIVE_MEMBERSHIP\";",
                  "} catch (err) {",
                  "    tests[\"Data in response does not exist\"] = false;",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipMaintenance.rs.cancelTermination.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"relationshipName\":\"GRESTFUNDMEMBER\",\r\n   \"member\":[\r\n      {\r\n         \"memberId\":\"{{memberID}}\"\r\n      }\r\n   ],\r\n   \"uuid\":\"{{$guid}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "98c44ea6-433b-f522-25de-cfab278e9d39",
      "name": "RA-142 and RA-141 : Create member in VMMP",
      "description": "RA-142:\r\nAs a REST member\r\nI want my details to be stored in the database\r\nSo that I can use Vitality\r\nThis story describes creating and storing members' details in the VMMP STAGING table\r\nThis includes ESB to mask all PII info and create the member in the staging table.\r\nA/C:\r\nGiven that REST sent members details\r\nWhen ESB store them in VMMp Staging table \r\nThen ESB will mask all PII info\r\nAnd ESB will store them in VMMP staging table\r\n\r\nRA-141:\r\nAs a REST member\r\nI want to receive a successfully enrolled message \r\nSo that I know I am enrolled to Vitality\r\nThis story describes sending a success message to REST when enrollment process completed for a member\r\nA/C;\r\nGiven that REST sent a member details to AIA\r\nWHEN enrollment process completed\r\nThen ESB will send a success message to REST",
      "item": [
        {
          "_postman_id": "d47afb68-f847-b73f-28c0-d620097b17ec",
          "name": "RA-152 : Enrolling a member - New Process",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifing that the response time is less than the value declared in global  variable \r",
                  "tests[\"Response time is less than \" + globals.responseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < globals.responseTime;\r",
                  "\r",
                  "var body = JSON.parse(responseBody);\r",
                  "\r",
                  "\r",
                  "tests[\"Verifying that response is registration successful\"] = body.status === \"Data Accepted\";\r",
                  "\r",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "",
                  "//Generating Random Email address to pass into the data so that user duplication does not happen",
                  "function makeEmail() {",
                  "  var strValues = \"qpotvghysbnxui56z\";",
                  "  var strEmail = \"\";",
                  "  var strTmp;",
                  "  for (var i = 0; i < 10; i++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strTmp = \"\";",
                  "  strEmail = strEmail + \"@\";",
                  "  for (var j = 0; j < 8; j++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strEmail = strEmail + \"testpii.com\";",
                  "  return strEmail;",
                  "}",
                  "",
                  "",
                  "//Setting up the random email to an environment variable",
                  "postman.setEnvironmentVariable(\"Email\", makeEmail());",
                  "",
                  "var firstName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);",
                  "",
                  "//Setting up the firstName to an environment variable",
                  "postman.setEnvironmentVariable(\"firstName\", firstName);",
                  "var lastName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 8);",
                  "",
                  "//Setting up the lastName to an environment variable",
                  "postman.setEnvironmentVariable(\"lastName\", lastName);",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"601466578\",\r\n    \"address\":{\r\n      \"line1\":\"test street1\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\",\r\n      \"clientNumber\":\"\"\r\n      \r\n    },\r\n     \r\n    \"vitalityPolicyDetails\":{\r\n    \"vitalityPolicyId\":\"\"\r\n \r\n  }\r\n  },\r\n    \r\n     \r\n  \"reasonForJoining\":\"Unknown\",\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"transactionId\":\"randomtransactionid\",\r\n  \"source\":\"REST\"\r\n}"
            },
            "description": "A/C;\r\nGiven that REST sent a member details to AIA\r\nWHEN enrollment process completed\r\nThen ESB will send a success message to REST"
          },
          "response": []
        },
        {
          "_postman_id": "dd03f47c-4100-7929-88f6-82dcf02f3663",
          "name": "Wait for enrollment to finish",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{testPackageURL}}/rest/restTestPackage.ws.sleep?seconds=180",
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {},
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "7428d300-533f-6446-bfc7-a68c202d8a8a",
          "name": "RA-142: Staging table should contain all masked PII data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "//Verifing that the response time is less than the value declared in global  variable ",
                  "tests[\"Response time is less than \" + globals.responseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < globals.responseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "try{",
                  "",
                  "",
                  "tests[\"Verifying that Email in staging VMMP DB is as passed\"] = body.getMemberInfoStagingOutput.results[0].EMAIL === environment.Email;",
                  "tests[\"Verifying that Title in staging VMMP DB is as passed\"] = body.getMemberInfoStagingOutput.results[0].TITLE === \"Mr\";",
                  "tests[\"Verifying that First Name in staging VMMP DB is as passed\"] = body.getMemberInfoStagingOutput.results[0].FIRST_NAME === environment.firstName;",
                  "tests[\"Verifying that Last Name in staging VMMP DB is as passed\"] = body.getMemberInfoStagingOutput.results[0].LAST_NAME === environment.lastName;",
                  "tests[\"Verifying that Gender in staging VMMP DB is as passed\"] = body.getMemberInfoStagingOutput.results[0].GENDER === \"M\";",
                  "tests[\"Verifying that DOB in staging VMMP DB is as passed\"] = body.getMemberInfoStagingOutput.results[0].DOB === \"1970-01-01\";",
                  "tests[\"Verifying that Mobile in staging VMMP DB is passed\"] = body.getMemberInfoStagingOutput.results[0].MOBILE === environment.mobileNumber;",
                  "tests[\"Verifying that Address 1 in staging VMMP DB is passed\"] = body.getMemberInfoStagingOutput.results[0].MAILING_ADDRESS1 ===\"test street1\";",
                  "tests[\"Verifying that Address 2 in staging VMMP DB is is passed\"] = body.getMemberInfoStagingOutput.results[0].MAILING_ADDRESS2 === null;",
                  "tests[\"Verifying that Suburb in staging VMMP DB is is passed\"] = body.getMemberInfoStagingOutput.results[0].MAILING_CITY === \"Wiseman's Ferry\";",
                  "tests[\"Verifying that State in staging VMMP DB is is passed\"] = body.getMemberInfoStagingOutput.results[0].MAILING_STATE === \"VIC\";",
                  "tests[\"Verifying that Postcode in staging VMMP DB is is passed\"] = body.getMemberInfoStagingOutput.results[0].MAILING_POSTCODE === environment.postcode;",
                  "tests[\"Verifying that Work Phone in staging VMMP DB is is passed\"] = body.getMemberInfoStagingOutput.results[0].WORK_PHONE === environment.workNumber;",
                  "tests[\"Verifying that Home Phone in staging VMMP DB is passed\"] = body.getMemberInfoStagingOutput.results[0].HOME_PHONE === environment.homeNumber;",
                  "tests[\"Verifying that Processed File staging VMMP DB is passed\"] = body.getMemberInfoStagingOutput.results[0].PROCESSED_FILE === null;",
                  "tests[\"Verifying that Relationship No. in staging VMMP DB is as passed\"] = body.getMemberInfoStagingOutput.results[0].RELATIONSHIP_NAME === environment.relationshipName;",
                  "tests[\"Verifying that NOMINATION ID in staging VMMP DB is as passed\"] = body.getMemberInfoStagingOutput.results[0].NOMINATION_ID === \"601466578\";",
                  "tests[\"Verifying that Status in staging VMMP DB is as passed\"] = body.getMemberInfoStagingOutput.results[0].STATUS === \"VALID_SHORT_PROCESS\";",
                  "",
                  "}",
                  "catch(err)",
                  "",
                  "{",
                  "    ",
                  "    tests[\"Data does not exist\"] = false;",
                  "}",
                  ""
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{StageDB}}",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"email\":\"{{Email}}\"} "
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "b0e42a22-c097-ba64-b75f-2741ec674246",
          "name": "RA-144: In VMMP core tables the PII data is being masked",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "//Verifing that the response time is less than the value declared in global  variable ",
                  "tests[\"Response time is less than \" + globals.responseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < globals.responseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "//console.log(environment.restMemberId+\"aiaPiiData\");",
                  "",
                  "try{",
                  "",
                  "tests[\"Verifying that Email in Core VMMP DB is as passed\"] = body.email === environment.Email;",
                  "tests[\"Verifying that First Name in Core VMMP DB is as passed\"] = body.firstName === environment.firstName;",
                  "tests[\"Verifying that status is Online Awaiting Activation\"] = body.memberships[0].status.name === \"AWAITING_ACTIVATION\";",
                  "tests[\"Verifying that Last Name in Core VMMP DB is as passed\"] = body.lastName === environment.lastName;",
                  "tests[\"Verifying that Gender in Core VMMP DB is as passed\"] = body.gender === \"M\";",
                  "tests[\"Verifying that DOB in Core VMMP DB is as passed\"] = body.dateOfBirth === \"1970-01-01\";",
                  "tests[\"Verifying that Relationship Id in Core VMMP DB is as passed\"] = body.relationship.name === environment.relationshipName;",
                  "",
                  "",
                  "",
                  "}",
                  "catch(err){",
                  "    ",
                  "    tests[\"Data does not exist\"] = false;",
                  "}",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "/*",
                  "",
                  "experimenting with delay",
                  "",
                  " function sleep(milliseconds) {",
                  "  var start = new Date().getTime();",
                  "  for (var i = 0; i < 1e7; i++) {",
                  "    if ((new Date().getTime() - start) > milliseconds){",
                  "      break;",
                  "    }",
                  "  }",
                  "}",
                  "",
                  "sleep(10000); // Delays for 10 seconds",
                  "",
                  "",
                  "*/"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{VmmpUrl}}/restapi-vitality-member-management-service/registration/members/{{Email}}",
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"email\":\"{{Email}}\"} "
            },
            "description": "A/C:\r\nGiven that REST sent members details\r\nWhen ESB store them in VMMp Staging table \r\nThen ESB will mask all PII info\r\nAnd ESB will store them in VMMP staging table"
          },
          "response": []
        },
        {
          "_postman_id": "59ab56f9-bfb6-e480-a08e-259305528883",
          "name": "RA-142: Member should be created in UMS with InActive Status",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonObject = xml2Json(responseBody);\r",
                  "\r",
                  "\r",
                  "try{\r",
                  "\r",
                  "\r",
                  "tests[\"Verifying that User ID is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userId === environment.Email ;\r",
                  "\r",
                  "tests[\"Verifying that Email is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.email === environment.Email ;\r",
                  "\r",
                  "tests[\"Verifying that First Name is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.givenName === environment.firstName ;\r",
                  "\r",
                  "tests[\"Verifying that Last name is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.surname === environment.lastName ;\r",
                  "\r",
                  "tests[\"Verifying that User status is InActive\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userStatus === \"I\" ;\r",
                  "\r",
                  "tests[\"Verifying that Member Type is as passed to UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.memberType === \"GROUP\" ;\r",
                  "\r",
                  "tests[\"Verifying that User Groups List is VITALITY_AWAITING_ACTIVATION\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userGroupsList === \"VITALITY_AWAITING_ACTIVATION\";\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "}\r",
                  "\r",
                  "catch(err){\r",
                  "    \r",
                  "  tests[\"Data in response does not exist\"] = false;  \r",
                  "}\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "{{UmsURL}}/restapi-user-management-service/UsermanagementService",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "text/xml",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:ser=\"http://service.usermanagement.aiaa.com.au\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <ser:searchUserRequest>\r\n         <source>VITALITY</source>\r\n         <userType></userType>\r\n         <userDetails>\r\n            <userName></userName>\r\n            <userId></userId>\r\n            <userDN></userDN>\r\n            <email>{{Email}}</email>\r\n            <givenName></givenName>\r\n            <surname></surname>\r\n            <webChannel></webChannel>\r\n            <token></token>\r\n            <fundIdentifier></fundIdentifier>\r\n            <eligibilityAssessorEmail></eligibilityAssessorEmail>\r\n            <activationURL></activationURL>\r\n            <consentURL></consentURL>\r\n            <!--1 or more repetitions:-->\r\n            <userRolesList></userRolesList>\r\n            <title></title>\r\n            <dateOfBirth></dateOfBirth>\r\n            <gender></gender>\r\n            <addressLine1></addressLine1>\r\n            <addressLine2></addressLine2>\r\n            <suburb></suburb>\r\n            <state></state>\r\n            <postcode></postcode>\r\n            <country></country>\r\n            <mobilePhone></mobilePhone>\r\n            <workPhone></workPhone>\r\n            <homePhone></homePhone>\r\n            <fax></fax>\r\n            <isRetailLifeInsured></isRetailLifeInsured>\r\n            <passwordRequestDate></passwordRequestDate>\r\n            <password></password>\r\n            <passwordRequestCount></passwordRequestCount>\r\n            <aiaProposalNumber></aiaProposalNumber>\r\n            <aiaProposalWritingAdviser></aiaProposalWritingAdviser>\r\n            <aiaCCAppTnCAcceptedDate></aiaCCAppTnCAcceptedDate>\r\n            <aiaCCAppTnCVersion></aiaCCAppTnCVersion>\r\n            <!--1 or more repetitions:-->\r\n            <userGroupsList></userGroupsList>\r\n            <!--1 or more repetitions:-->\r\n            <userGroupsDNList></userGroupsDNList>\r\n            <memberType></memberType>\r\n            <residentialPostcode></residentialPostcode>\r\n            <userStatus></userStatus>\r\n            <aiaClientNumber></aiaClientNumber>\r\n            <aiaVitalityMemberNumber></aiaVitalityMemberNumber>\r\n            <aiaDsyPolicyNumber></aiaDsyPolicyNumber>\r\n            <aiaVitalityCobrandingInfo></aiaVitalityCobrandingInfo>\r\n         </userDetails>\r\n      </ser:searchUserRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>\r\n\r\n"
            },
            "description": ""
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "9fee4310-266a-4803-3e61-57bf652c2dd6",
      "name": "RA-109 : UMS member activation Modified after changes",
      "description": "",
      "item": [
        {
          "_postman_id": "07b7679b-99de-289f-1e95-b22c4f8cd423",
          "name": "RA-147: Verifing user does not exist in UMS",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonObject = xml2Json(responseBody);\r",
                  "\r",
                  "\r",
                  "try{\r",
                  "\r",
                  "\r",
                  "tests[\"Verifying that User status is Inactive\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userStatus === \"I\" ;\r",
                  "\r",
                  "\r",
                  "\r",
                  "}\r",
                  "\r",
                  "catch(err){\r",
                  "    \r",
                  "  tests[\"User does not exist in UMS\"] = true;  \r",
                  "}\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Generating Random Email address to pass into the data so that user duplication does not happen",
                  "function makeEmail() {",
                  "  var strValues = \"qpotvghysbnxui56z\";",
                  "  var strEmail = \"\";",
                  "  var strTmp;",
                  "  for (var i = 0; i < 10; i++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strTmp = \"\";",
                  "  strEmail = strEmail + \"@\";",
                  "  for (var j = 0; j < 8; j++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strEmail = strEmail + \"esbpii.com\";",
                  "  return strEmail;",
                  "}",
                  "",
                  "//Setting up the random email to an environment variable",
                  "postman.setEnvironmentVariable(\"Email\", makeEmail());",
                  "",
                  "var firstName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);",
                  "",
                  "//Setting up the firstName to an environment variable",
                  "postman.setEnvironmentVariable(\"firstName\", firstName);",
                  "",
                  "var lastName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 8);",
                  "",
                  "//Setting up the lastName to an environment variable",
                  "postman.setEnvironmentVariable(\"lastName\", lastName);",
                  "",
                  "//Incrementing and Setting up the memberID to an environment variable",
                  "// var memberIdNumber = parseInt(environment.memberIdNumber)+1;",
                  "var memberIdNumber = Date.now();",
                  "postman.setEnvironmentVariable(\"memberIdNumber\", memberIdNumber);",
                  "postman.setEnvironmentVariable(\"memberID\", \"RA\"+memberIdNumber.toString());"
                ]
              }
            }
          ],
          "request": {
            "url": "{{UmsURL}}/{{UMSContext}}/UsermanagementService",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "text/xml",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:ser=\"http://service.usermanagement.aiaa.com.au\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <ser:searchUserRequest>\r\n         <source>VITALITY</source>\r\n         <userType></userType>\r\n         <userDetails>\r\n            <userName></userName>\r\n            <userId></userId>\r\n            <userDN></userDN>\r\n            <email>{{Email}}</email>\r\n            <givenName></givenName>\r\n            <surname></surname>\r\n            <webChannel></webChannel>\r\n            <token></token>\r\n            <fundIdentifier></fundIdentifier>\r\n            <eligibilityAssessorEmail></eligibilityAssessorEmail>\r\n            <activationURL></activationURL>\r\n            <consentURL></consentURL>\r\n            <!--1 or more repetitions:-->\r\n            <userRolesList></userRolesList>\r\n            <title></title>\r\n            <dateOfBirth></dateOfBirth>\r\n            <gender></gender>\r\n            <addressLine1></addressLine1>\r\n            <addressLine2></addressLine2>\r\n            <suburb></suburb>\r\n            <state></state>\r\n            <postcode></postcode>\r\n            <country></country>\r\n            <mobilePhone></mobilePhone>\r\n            <workPhone></workPhone>\r\n            <homePhone></homePhone>\r\n            <fax></fax>\r\n            <isRetailLifeInsured></isRetailLifeInsured>\r\n            <passwordRequestDate></passwordRequestDate>\r\n            <password></password>\r\n            <passwordRequestCount></passwordRequestCount>\r\n            <aiaProposalNumber></aiaProposalNumber>\r\n            <aiaProposalWritingAdviser></aiaProposalWritingAdviser>\r\n            <aiaCCAppTnCAcceptedDate></aiaCCAppTnCAcceptedDate>\r\n            <aiaCCAppTnCVersion></aiaCCAppTnCVersion>\r\n            <!--1 or more repetitions:-->\r\n            <userGroupsList></userGroupsList>\r\n            <!--1 or more repetitions:-->\r\n            <userGroupsDNList></userGroupsDNList>\r\n            <memberType></memberType>\r\n            <residentialPostcode></residentialPostcode>\r\n            <userStatus></userStatus>\r\n            <aiaClientNumber></aiaClientNumber>\r\n            <aiaVitalityMemberNumber></aiaVitalityMemberNumber>\r\n            <aiaDsyPolicyNumber></aiaDsyPolicyNumber>\r\n            <aiaVitalityCobrandingInfo></aiaVitalityCobrandingInfo>\r\n         </userDetails>\r\n      </ser:searchUserRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>\r\n\r\n"
            },
            "description": ""
          },
          "response": [
            {
              "id": "7926b93a-2ac1-54fc-1fbf-8b598d30870e",
              "name": "Sample",
              "originalRequest": {
                "url": "{{UmsURL}}/{{UMSContext}}/UsermanagementService",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "text/xml",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:ser=\"http://service.usermanagement.aiaa.com.au\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <ser:searchUserRequest>\r\n         <source>VITALITY</source>\r\n         <userType></userType>\r\n         <userDetails>\r\n            <userName></userName>\r\n            <userId></userId>\r\n            <userDN></userDN>\r\n            <email>{{Email}}</email>\r\n            <givenName></givenName>\r\n            <surname></surname>\r\n            <webChannel></webChannel>\r\n            <token></token>\r\n            <fundIdentifier></fundIdentifier>\r\n            <eligibilityAssessorEmail></eligibilityAssessorEmail>\r\n            <activationURL></activationURL>\r\n            <consentURL></consentURL>\r\n            <!--1 or more repetitions:-->\r\n            <userRolesList></userRolesList>\r\n            <title></title>\r\n            <dateOfBirth></dateOfBirth>\r\n            <gender></gender>\r\n            <addressLine1></addressLine1>\r\n            <addressLine2></addressLine2>\r\n            <suburb></suburb>\r\n            <state></state>\r\n            <postcode></postcode>\r\n            <country></country>\r\n            <mobilePhone></mobilePhone>\r\n            <workPhone></workPhone>\r\n            <homePhone></homePhone>\r\n            <fax></fax>\r\n            <isRetailLifeInsured></isRetailLifeInsured>\r\n            <passwordRequestDate></passwordRequestDate>\r\n            <password></password>\r\n            <passwordRequestCount></passwordRequestCount>\r\n            <aiaProposalNumber></aiaProposalNumber>\r\n            <aiaProposalWritingAdviser></aiaProposalWritingAdviser>\r\n            <aiaCCAppTnCAcceptedDate></aiaCCAppTnCAcceptedDate>\r\n            <aiaCCAppTnCVersion></aiaCCAppTnCVersion>\r\n            <!--1 or more repetitions:-->\r\n            <userGroupsList></userGroupsList>\r\n            <!--1 or more repetitions:-->\r\n            <userGroupsDNList></userGroupsDNList>\r\n            <memberType></memberType>\r\n            <residentialPostcode></residentialPostcode>\r\n            <userStatus></userStatus>\r\n            <aiaClientNumber></aiaClientNumber>\r\n            <aiaVitalityMemberNumber></aiaVitalityMemberNumber>\r\n            <aiaDsyPolicyNumber></aiaDsyPolicyNumber>\r\n            <aiaVitalityCobrandingInfo></aiaVitalityCobrandingInfo>\r\n         </userDetails>\r\n      </ser:searchUserRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>\r\n\r\n"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "xml",
              "_postman_previewtype": "text",
              "header": [
                {
                  "key": "Connection",
                  "value": "close",
                  "name": "Connection",
                  "description": ""
                },
                {
                  "key": "Content-Language",
                  "value": "en-AU",
                  "name": "Content-Language",
                  "description": ""
                },
                {
                  "key": "Content-Length",
                  "value": "265",
                  "name": "Content-Length",
                  "description": ""
                },
                {
                  "key": "Content-Type",
                  "value": "text/xml; charset=UTF-8",
                  "name": "Content-Type",
                  "description": ""
                },
                {
                  "key": "Date",
                  "value": "Wed, 19 Apr 2017 02:03:28 GMT",
                  "name": "Date",
                  "description": ""
                }
              ],
              "cookie": [],
              "responseTime": "231",
              "body": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\"><soapenv:Body><ns2:searchUserResponse xmlns:ns2=\"http://service.usermanagement.aiaa.com.au\"></ns2:searchUserResponse></soapenv:Body></soapenv:Envelope>"
            }
          ]
        },
        {
          "_postman_id": "f37b3dab-6d4e-6d08-371f-63833b97e8ba",
          "name": "RA-153: Enrolling a Member - New Process",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "tests[\"Verifying that Enrolment is successfull\"] =  body.status === \"Data Accepted\";"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"test street1\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
            },
            "description": ""
          },
          "response": [
            {
              "id": "243d075b-65e9-70e5-f647-43c594b29541",
              "name": "error",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"test street1\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "key": "Connection",
                  "value": "Keep-Alive",
                  "name": "Connection",
                  "description": ""
                },
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "name": "Content-Type",
                  "description": ""
                },
                {
                  "key": "Date",
                  "value": "Wed, 14 Dec 2016 00:42:55 GMT",
                  "name": "Date",
                  "description": ""
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked",
                  "name": "Transfer-Encoding",
                  "description": ""
                },
                {
                  "key": "X-Backside-Transport",
                  "value": "OK OK",
                  "name": "X-Backside-Transport",
                  "description": ""
                },
                {
                  "key": "X-Client-IP",
                  "value": "10.61.38.184",
                  "name": "X-Client-IP",
                  "description": ""
                },
                {
                  "key": "X-Global-Transaction-ID",
                  "value": "348720",
                  "name": "X-Global-Transaction-ID",
                  "description": ""
                }
              ],
              "cookie": [],
              "responseTime": "1537",
              "body": "{\"response\":{}}"
            },
            {
              "id": "a9953a7e-ef42-f2b7-ee7a-532adec5c79e",
              "name": "response 3",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"test street1\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:17 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "1830",
              "body": "{\"token\":\"1ed2d16e-9fc9-46ed-af8e-49e5b5207e79\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "c77d6f31-b71c-4a2f-85ef-e6d1459de938",
              "name": "response 1",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"test street1\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:13:56 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "215",
              "body": "{\"token\":\"39b8615a-307d-419f-a503-4d4fa6c7021d\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "cc2b1d19-5033-f612-6ef2-0f9f01db7021",
              "name": "response 2",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"test street1\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:07 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "237",
              "body": "{\"token\":\"a77eb61e-5dd3-4680-931e-49122ab21153\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            }
          ]
        },
        {
          "_postman_id": "d75c0f7b-5ff3-0094-bfd3-8703e758b37f",
          "name": "Wait for enrollment to finish",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{testPackageURL}}/rest/restTestPackage.ws.sleep?seconds=200",
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {},
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "b37785b3-4908-aa36-718f-2d0412b66c32",
          "name": "RA-147 : Verifing user has been added to UMS and is InActive Status",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonObject = xml2Json(responseBody);\r",
                  "\r",
                  "try\r",
                  "{\r",
                  "\r",
                  "\r",
                  "tests[\"Verifying that User status is Not Activated\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userStatus === \"I\";\r",
                  "\r",
                  "tests[\"Verifying that User ID is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userId === environment.Email ;\r",
                  "\r",
                  "tests[\"Verifying that Email is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.email === environment.Email ;\r",
                  "\r",
                  "tests[\"Verifying that First Name is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.givenName === environment.firstName ;\r",
                  "\r",
                  "tests[\"Verifying that Last name is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.surname === environment.lastName ;\r",
                  "\r",
                  "tests[\"Verifying that Member Type is as passed to UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.memberType === \"GROUP\" ;\r",
                  "\r",
                  "tests[\"Verifying that User Groups List is VITALITY_AWAITING_ACTIVATION\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userGroupsList === \"VITALITY_AWAITING_ACTIVATION\" ;\r",
                  "\r",
                  "\r",
                  "\r",
                  "//Setting up the token to an environment variable to be used in subsequent requests\r",
                  "\r",
                  "postman.setEnvironmentVariable(\"umsToken\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.token);\r",
                  "\r",
                  "postman.setEnvironmentVariable(\"aiaClientNumber\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaClientNumber);\r",
                  "postman.setEnvironmentVariable(\"aiaVitalityMemberNumber\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaVitalityMemberNumber);\r",
                  "postman.setEnvironmentVariable(\"aiaDsyPolicyNumber\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaDsyPolicyNumber);\r",
                  "\r",
                  "postman.setEnvironmentVariable(\"aiaVitalityId\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaVitalityId);\r",
                  "\r",
                  "\r",
                  "}\r",
                  "\r",
                  "\r",
                  "catch(err){\r",
                  "    \r",
                  "  tests[\"Data in response does not exist\"] = false;  \r",
                  "\r",
                  "\r",
                  "}\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "{{UmsURL}}/{{UMSContext}}/UsermanagementService",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "text/xml",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:ser=\"http://service.usermanagement.aiaa.com.au\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <ser:searchUserRequest>\n         <source>VITALITY</source>\n         <userType></userType>\n         <userDetails>\n            <userName></userName>\n            <userId></userId>\n            <userDN></userDN>\n            <email>{{Email}}</email>\n            <givenName></givenName>\n            <surname></surname>\n            <webChannel></webChannel>\n            <token></token>\n            <fundIdentifier></fundIdentifier>\n            <eligibilityAssessorEmail></eligibilityAssessorEmail>\n            <activationURL></activationURL>\n            <consentURL></consentURL>\n            <!--1 or more repetitions:-->\n            <userRolesList></userRolesList>\n            <title></title>\n            <dateOfBirth></dateOfBirth>\n            <gender></gender>\n            <addressLine1></addressLine1>\n            <addressLine2></addressLine2>\n            <suburb></suburb>\n            <state></state>\n            <postcode></postcode>\n            <country></country>\n            <mobilePhone></mobilePhone>\n            <workPhone></workPhone>\n            <homePhone></homePhone>\n            <fax></fax>\n            <isRetailLifeInsured></isRetailLifeInsured>\n            <passwordRequestDate></passwordRequestDate>\n            <password></password>\n            <passwordRequestCount></passwordRequestCount>\n            <aiaProposalNumber></aiaProposalNumber>\n            <aiaProposalWritingAdviser></aiaProposalWritingAdviser>\n            <aiaCCAppTnCAcceptedDate></aiaCCAppTnCAcceptedDate>\n            <aiaCCAppTnCVersion></aiaCCAppTnCVersion>\n            <!--1 or more repetitions:-->\n            <userGroupsList></userGroupsList>\n            <!--1 or more repetitions:-->\n            <userGroupsDNList></userGroupsDNList>\n            <memberType></memberType>\n            <residentialPostcode></residentialPostcode>\n            <userStatus></userStatus>\n            <aiaClientNumber></aiaClientNumber>\n            <aiaVitalityMemberNumber></aiaVitalityMemberNumber>\n            <aiaDsyPolicyNumber></aiaDsyPolicyNumber>\n            <aiaVitalityCobrandingInfo></aiaVitalityCobrandingInfo>\n         </userDetails>\n      </ser:searchUserRequest>\n   </soapenv:Body>\n</soapenv:Envelope>\n\n"
            },
            "description": "A/C:\r\nGiven that members activated their membership\r\nWhen ESB gets the action\r\nThen their membership will be activated in UMS"
          },
          "response": []
        },
        {
          "_postman_id": "7e750aef-9d98-35c9-51e2-c8af04357d7b",
          "name": "RA-153: Activate member - New Process",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "",
                  "//tests[\"Verifying that Activation is successfull\"] =  body.status === \"Activation Successful\";",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{ESBURL}}/rest/aiaVitalityMember/pub/activation",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"password\": \"Welcome123\",\r\n   \"reasonForJoining\": \"I am actively trying to maintain or improve my health\",\r\n   \"email\": \"{{Email}}\",\r\n   \"token\": \"{{umsToken}}\"   \r\n}\r\n"
            },
            "description": ""
          },
          "response": [
            {
              "id": "347971db-2484-7f71-73a4-5e0017f918e6",
              "name": "response 2",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMember/pub/activation",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"password\": \"Welcome123\",\r\n   \"reasonForJoining\": \"I am actively trying to maintain or improve my health\",\r\n   \"email\": \"{{Email}}\",\r\n   \"token\": \"{{umsToken}}\"   \r\n}\r\n"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:07 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "237",
              "body": "{\"token\":\"a77eb61e-5dd3-4680-931e-49122ab21153\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "36167bd0-a455-6897-e8c1-07042d92adf1",
              "name": "error",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMember/pub/activation",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"password\": \"Welcome123\",\r\n   \"reasonForJoining\": \"I am actively trying to maintain or improve my health\",\r\n   \"email\": \"{{Email}}\",\r\n   \"token\": \"{{umsToken}}\"   \r\n}\r\n"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "key": "Connection",
                  "value": "Keep-Alive",
                  "name": "Connection",
                  "description": ""
                },
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "name": "Content-Type",
                  "description": ""
                },
                {
                  "key": "Date",
                  "value": "Wed, 14 Dec 2016 00:42:55 GMT",
                  "name": "Date",
                  "description": ""
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked",
                  "name": "Transfer-Encoding",
                  "description": ""
                },
                {
                  "key": "X-Backside-Transport",
                  "value": "OK OK",
                  "name": "X-Backside-Transport",
                  "description": ""
                },
                {
                  "key": "X-Client-IP",
                  "value": "10.61.38.184",
                  "name": "X-Client-IP",
                  "description": ""
                },
                {
                  "key": "X-Global-Transaction-ID",
                  "value": "348720",
                  "name": "X-Global-Transaction-ID",
                  "description": ""
                }
              ],
              "cookie": [],
              "responseTime": "1537",
              "body": "{\"response\":{}}"
            },
            {
              "id": "527be0cc-214f-fdb2-6934-a5cdc0dd823c",
              "name": "error",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMember/pub/activation",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"password\": \"Welcome123\",\r\n   \"reasonForJoining\": \"I am actively trying to maintain or improve my health\",\r\n   \"email\": \"{{Email}}\",\r\n   \"token\": \"{{umsToken}}\"   \r\n}\r\n"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "key": "Connection",
                  "value": "Keep-Alive",
                  "name": "Connection",
                  "description": ""
                },
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "name": "Content-Type",
                  "description": ""
                },
                {
                  "key": "Date",
                  "value": "Wed, 14 Dec 2016 00:42:55 GMT",
                  "name": "Date",
                  "description": ""
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked",
                  "name": "Transfer-Encoding",
                  "description": ""
                },
                {
                  "key": "X-Backside-Transport",
                  "value": "OK OK",
                  "name": "X-Backside-Transport",
                  "description": ""
                },
                {
                  "key": "X-Client-IP",
                  "value": "10.61.38.184",
                  "name": "X-Client-IP",
                  "description": ""
                },
                {
                  "key": "X-Global-Transaction-ID",
                  "value": "348720",
                  "name": "X-Global-Transaction-ID",
                  "description": ""
                }
              ],
              "cookie": [],
              "responseTime": "1537",
              "body": "{\"response\":{}}"
            },
            {
              "id": "90f35d60-0226-7c27-85bb-b61c3480bc4f",
              "name": "response 2",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMember/pub/activation",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"password\": \"Welcome123\",\r\n   \"reasonForJoining\": \"I am actively trying to maintain or improve my health\",\r\n   \"email\": \"{{Email}}\",\r\n   \"token\": \"{{umsToken}}\"   \r\n}\r\n"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:07 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "237",
              "body": "{\"token\":\"a77eb61e-5dd3-4680-931e-49122ab21153\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "b665c7f6-15ba-5297-a361-d82b13ef6884",
              "name": "response 1",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMember/pub/activation",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"password\": \"Welcome123\",\r\n   \"reasonForJoining\": \"I am actively trying to maintain or improve my health\",\r\n   \"email\": \"{{Email}}\",\r\n   \"token\": \"{{umsToken}}\"   \r\n}\r\n"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:13:56 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "215",
              "body": "{\"token\":\"39b8615a-307d-419f-a503-4d4fa6c7021d\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "d5ba60f4-5c1d-58d9-1aee-370358e9b521",
              "name": "response 1",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMember/pub/activation",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"password\": \"Welcome123\",\r\n   \"reasonForJoining\": \"I am actively trying to maintain or improve my health\",\r\n   \"email\": \"{{Email}}\",\r\n   \"token\": \"{{umsToken}}\"   \r\n}\r\n"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:13:56 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "215",
              "body": "{\"token\":\"39b8615a-307d-419f-a503-4d4fa6c7021d\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "ed24b16f-3858-958f-2f66-4453c9889ebb",
              "name": "response 3",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMember/pub/activation",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"password\": \"Welcome123\",\r\n   \"reasonForJoining\": \"I am actively trying to maintain or improve my health\",\r\n   \"email\": \"{{Email}}\",\r\n   \"token\": \"{{umsToken}}\"   \r\n}\r\n"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:17 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "1830",
              "body": "{\"token\":\"1ed2d16e-9fc9-46ed-af8e-49e5b5207e79\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "fc2e5f54-698d-2c9f-2f76-0d26a49bf905",
              "name": "response 3",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMember/pub/activation",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"password\": \"Welcome123\",\r\n   \"reasonForJoining\": \"I am actively trying to maintain or improve my health\",\r\n   \"email\": \"{{Email}}\",\r\n   \"token\": \"{{umsToken}}\"   \r\n}\r\n"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:17 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "1830",
              "body": "{\"token\":\"1ed2d16e-9fc9-46ed-af8e-49e5b5207e79\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            }
          ]
        },
        {
          "_postman_id": "2c2a3c5c-df7b-b181-9512-2f0cfae1a15a",
          "name": "Wait for activation to finish",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{testPackageURL}}/rest/restTestPackage.ws.sleep?seconds=120",
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {},
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "6edc4507-1f9d-70d9-db66-e143fe43515a",
          "name": "RA-147 : Verifying user has been added to UMS and is activated",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonObject = xml2Json(responseBody);\r",
                  "\r",
                  "try\r",
                  "{\r",
                  "\r",
                  "\r",
                  "tests[\"Verifying that User status is  Activated\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userStatus === \"A\";\r",
                  "\r",
                  "tests[\"Verifying that User ID is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userId === environment.Email ;\r",
                  "\r",
                  "tests[\"Verifying that Email is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.email === environment.Email ;\r",
                  "\r",
                  "tests[\"Verifying that First Name is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.givenName === environment.firstName ;\r",
                  "\r",
                  "tests[\"Verifying that Last name is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.surname === environment.lastName ;\r",
                  "\r",
                  "tests[\"Verifying that Member Type is as passed to UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.memberType === \"GROUP\" ;\r",
                  "\r",
                  "tests[\"Verifying that User Groups List is VITALITY_ACTIVE\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userGroupsList === \"VITALITY_ACTIVE\" ;\r",
                  "\r",
                  "\r",
                  "\r",
                  "//Setting up the token to an environment variable to be used in subsequent requests\r",
                  "\r",
                  "postman.setEnvironmentVariable(\"umsToken\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.token);\r",
                  "\r",
                  "postman.setEnvironmentVariable(\"aiaClientNumber\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaClientNumber);\r",
                  "postman.setEnvironmentVariable(\"aiaVitalityMemberNumber\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaVitalityMemberNumber);\r",
                  "postman.setEnvironmentVariable(\"aiaDsyPolicyNumber\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaDsyPolicyNumber);\r",
                  "\r",
                  "postman.setEnvironmentVariable(\"aiaVitalityId\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaVitalityId);\r",
                  "\r",
                  "\r",
                  "}\r",
                  "\r",
                  "\r",
                  "catch(err){\r",
                  "    \r",
                  "  tests[\"Data in response does not exist\"] = false;  \r",
                  "\r",
                  "\r",
                  "}\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "{{UmsURL}}/{{UMSContext}}/UsermanagementService",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "text/xml",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:ser=\"http://service.usermanagement.aiaa.com.au\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <ser:searchUserRequest>\r\n         <source>VITALITY</source>\r\n         <userType></userType>\r\n         <userDetails>\r\n            <userName></userName>\r\n            <userId></userId>\r\n            <userDN></userDN>\r\n            <email>{{Email}}</email>\r\n            <givenName></givenName>\r\n            <surname></surname>\r\n            <webChannel></webChannel>\r\n            <token></token>\r\n            <fundIdentifier></fundIdentifier>\r\n            <eligibilityAssessorEmail></eligibilityAssessorEmail>\r\n            <activationURL></activationURL>\r\n            <consentURL></consentURL>\r\n            <!--1 or more repetitions:-->\r\n            <userRolesList></userRolesList>\r\n            <title></title>\r\n            <dateOfBirth></dateOfBirth>\r\n            <gender></gender>\r\n            <addressLine1></addressLine1>\r\n            <addressLine2></addressLine2>\r\n            <suburb></suburb>\r\n            <state></state>\r\n            <postcode></postcode>\r\n            <country></country>\r\n            <mobilePhone></mobilePhone>\r\n            <workPhone></workPhone>\r\n            <homePhone></homePhone>\r\n            <fax></fax>\r\n            <isRetailLifeInsured></isRetailLifeInsured>\r\n            <passwordRequestDate></passwordRequestDate>\r\n            <password></password>\r\n            <passwordRequestCount></passwordRequestCount>\r\n            <aiaProposalNumber></aiaProposalNumber>\r\n            <aiaProposalWritingAdviser></aiaProposalWritingAdviser>\r\n            <aiaCCAppTnCAcceptedDate></aiaCCAppTnCAcceptedDate>\r\n            <aiaCCAppTnCVersion></aiaCCAppTnCVersion>\r\n            <!--1 or more repetitions:-->\r\n            <userGroupsList></userGroupsList>\r\n            <!--1 or more repetitions:-->\r\n            <userGroupsDNList></userGroupsDNList>\r\n            <memberType></memberType>\r\n            <residentialPostcode></residentialPostcode>\r\n            <userStatus></userStatus>\r\n            <aiaClientNumber></aiaClientNumber>\r\n            <aiaVitalityMemberNumber></aiaVitalityMemberNumber>\r\n            <aiaDsyPolicyNumber></aiaDsyPolicyNumber>\r\n            <aiaVitalityCobrandingInfo></aiaVitalityCobrandingInfo>\r\n         </userDetails>\r\n      </ser:searchUserRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>\r\n\r\n"
            },
            "description": "A/C:\r\nGiven that members activated their membership\r\nWhen ESB gets the action\r\nThen their membership will be activated in UMS"
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "a8fc1813-c326-6de6-8c7b-28e7f9d75805",
      "name": "RA-110 : UMS failed response handling",
      "description": "",
      "item": [
        {
          "_postman_id": "fea51088-1668-fb81-48b3-49a4593e1c61",
          "name": "RA-108:Create user in UMS with VITALITY source",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonObject = xml2Json(responseBody);\r",
                  "\r",
                  "try{\r",
                  "\r",
                  "\r",
                  "tests[\"Verifying that UMS is returning true\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:createUserResponse'].result.successFlag === \"true\" ;\r",
                  "\r",
                  "tests[\"Verifying that User ID is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:createUserResponse'].userDetails.userId === environment.Email ;\r",
                  "\r",
                  "tests[\"Verifying that Email is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:createUserResponse'].userDetails.email === environment.Email ;\r",
                  "\r",
                  "tests[\"Verifying that First Name is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:createUserResponse'].userDetails.givenName === environment.firstName ;\r",
                  "\r",
                  "tests[\"Verifying that Last name is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:createUserResponse'].userDetails.surname === environment.lastName ;\r",
                  "\r",
                  "tests[\"Verifying that Email is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:createUserResponse'].userDetails.surname === environment.lastName ;\r",
                  "\r",
                  "tests[\"Verifying that User status is Inactive\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:createUserResponse'].userDetails.userStatus === \"I\" ;\r",
                  "\r",
                  "tests[\"Verifying that Member Type is as passed to UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:createUserResponse'].userDetails.memberType === \"GROUP\" ;\r",
                  "\r",
                  "tests[\"Verifying that AIA Client Number is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:createUserResponse'].userDetails.aiaClientNumber === environment.AIA_CLIENT_NUMBER ;\r",
                  "\r",
                  "tests[\"Verifying that AIA Vitality Member Number is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:createUserResponse'].userDetails.aiaVitalityMemberNumber === environment.AIA_VITALITY_ID ;\r",
                  "\r",
                  "//Setting up the token to an environment variable to be used in subsequent requests\r",
                  "postman.setEnvironmentVariable(\"umsToken\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:createUserResponse'].userDetails.token);\r",
                  "\r",
                  "\r",
                  "}\r",
                  "\r",
                  "catch(err){\r",
                  "    \r",
                  "  tests[\"Data in response does not exist\"] = false;  \r",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Generating Random Email address to pass into the data so that user duplication does not happen",
                  "function makeEmail() {",
                  "  var strValues = \"qwertyhgfdaszxc2873\";",
                  "  var strEmail = \"\";",
                  "  var strTmp;",
                  "  for (var i = 0; i < 10; i++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strTmp = \"\";",
                  "  strEmail = strEmail + \"@\";",
                  "  for (var j = 0; j < 8; j++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strEmail = strEmail + \".com\";",
                  "  return strEmail;",
                  "}",
                  "//Setting up the random email to an environment variable",
                  "postman.setEnvironmentVariable(\"Email\", makeEmail());",
                  "",
                  "//Setting up the lastName to an environment variable",
                  "var lastName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 8);",
                  "",
                  "//Setting up the random email to an environment variable",
                  "postman.setEnvironmentVariable(\"lastName\", lastName);",
                  "",
                  "//Generating Random name string to pass in first name ",
                  "var firstName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);",
                  "",
                  "//Setting up the firstName to an environment variable",
                  "postman.setEnvironmentVariable(\"firstName\", firstName);",
                  "",
                  "",
                  "//Generating Random 9 digit number to populate in variables to pass Id set 1 requests",
                  "var Txt1 = Math.floor(100000000 + Math.random() * 900000000);",
                  "",
                  "////Setting up the random numeric to an environment variable for AIA_VITALITY_ID",
                  "postman.setEnvironmentVariable(\"AIA_VITALITY_ID\", Txt1);",
                  "",
                  "//Generating Random 9 digit number to populate in variables to pass Id set 1 requests",
                  "var Txt2 = Math.floor(100000000 + Math.random() * 900000000);",
                  "postman.setEnvironmentVariable(\"AIA_CLIENT_NUMBER\", Txt2);",
                  "",
                  "//The variable will pick a random value from the array",
                  "//myArray = [\"GROUP\",\"DIRECT\"];",
                  "//var relationshipName = myArray[Math.random() * myArray.length>>0];",
                  "",
                  "//Setting up the relationshipName to an environment variable",
                  "//postman.setEnvironmentVariable(\"relationshipName\", relationshipName);",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "{{UmsURL}}/{{UMSContext}}/UsermanagementService",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "text/xml",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:ser=\"http://service.usermanagement.aiaa.com.au\">\r\n \r\n<soapenv:Header/>\r\n<soapenv:Body>\r\n    <ser:createUserRequest>\r\n        <source>VITALITY</source>\r\n        <userDetails>\r\n            <userName>{{firstName}}</userName>\r\n            <userId>{{Email}}</userId>\r\n            <email>{{Email}}</email>\r\n            <givenName>{{firstName}}</givenName>\r\n            <surname>{{lastName}}</surname>\r\n            <memberType>GROUP</memberType>\r\n            <aiaClientNumber>{{AIA_CLIENT_NUMBER}}</aiaClientNumber>\r\n            <aiaVitalityMemberNumber>{{AIA_VITALITY_ID}}</aiaVitalityMemberNumber>\r\n        </userDetails>\r\n    </ser:createUserRequest>\r\n</soapenv:Body>\r\n</soapenv:Envelope>"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "5be304e8-19a5-04d8-8869-5be3a739277b",
          "name": "RA-153: Enrolling a Member - New Process ",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "",
                  "",
                  "tests[\"Verifying that Enrolment is successfull\"] =  body.status === \"Data Accepted\";",
                  "",
                  "",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"601466578\",\r\n    \"address\":{\r\n      \"line1\":\"test street1\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\",\r\n      \"clientNumber\":\"\"\r\n      \r\n    },\r\n     \r\n    \"vitalityPolicyDetails\":{\r\n    \"vitalityPolicyId\":\"\"\r\n \r\n  }\r\n  },\r\n    \r\n     \r\n  \"reasonForJoining\":\"Unknown\",\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"transactionId\":\"randomtransactionid\",\r\n  \"source\":\"REST\"\r\n}"
            },
            "description": ""
          },
          "response": [
            {
              "id": "7ef03aa6-7a68-0b2c-5705-53f90897cc61",
              "name": "response 2",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"601466578\",\r\n    \"address\":{\r\n      \"line1\":\"test street1\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\",\r\n      \"clientNumber\":\"\"\r\n      \r\n    },\r\n     \r\n    \"vitalityPolicyDetails\":{\r\n    \"vitalityPolicyId\":\"\"\r\n \r\n  }\r\n  },\r\n    \r\n     \r\n  \"reasonForJoining\":\"Unknown\",\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"transactionId\":\"randomtransactionid\",\r\n  \"source\":\"REST\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:07 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "237",
              "body": "{\"token\":\"a77eb61e-5dd3-4680-931e-49122ab21153\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "83f3908e-5fe5-49e0-1da2-e39ba8ae7c56",
              "name": "response 1",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"601466578\",\r\n    \"address\":{\r\n      \"line1\":\"test street1\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\",\r\n      \"clientNumber\":\"\"\r\n      \r\n    },\r\n     \r\n    \"vitalityPolicyDetails\":{\r\n    \"vitalityPolicyId\":\"\"\r\n \r\n  }\r\n  },\r\n    \r\n     \r\n  \"reasonForJoining\":\"Unknown\",\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"transactionId\":\"randomtransactionid\",\r\n  \"source\":\"REST\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:13:56 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "215",
              "body": "{\"token\":\"39b8615a-307d-419f-a503-4d4fa6c7021d\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "8a5970f1-09b7-3898-57bb-72e2c50c3097",
              "name": "response 3",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"601466578\",\r\n    \"address\":{\r\n      \"line1\":\"test street1\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\",\r\n      \"clientNumber\":\"\"\r\n      \r\n    },\r\n     \r\n    \"vitalityPolicyDetails\":{\r\n    \"vitalityPolicyId\":\"\"\r\n \r\n  }\r\n  },\r\n    \r\n     \r\n  \"reasonForJoining\":\"Unknown\",\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"transactionId\":\"randomtransactionid\",\r\n  \"source\":\"REST\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:17 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "1830",
              "body": "{\"token\":\"1ed2d16e-9fc9-46ed-af8e-49e5b5207e79\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "ca3c8926-1a70-4211-91f0-ba781cbe8bb6",
              "name": "error",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"601466578\",\r\n    \"address\":{\r\n      \"line1\":\"test street1\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\",\r\n      \"clientNumber\":\"\"\r\n      \r\n    },\r\n     \r\n    \"vitalityPolicyDetails\":{\r\n    \"vitalityPolicyId\":\"\"\r\n \r\n  }\r\n  },\r\n    \r\n     \r\n  \"reasonForJoining\":\"Unknown\",\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"transactionId\":\"randomtransactionid\",\r\n  \"source\":\"REST\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "Keep-Alive"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Wed, 14 Dec 2016 00:42:55 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-Backside-Transport",
                  "name": "X-Backside-Transport",
                  "value": "OK OK"
                },
                {
                  "description": "",
                  "key": "X-Client-IP",
                  "name": "X-Client-IP",
                  "value": "10.61.38.184"
                },
                {
                  "description": "",
                  "key": "X-Global-Transaction-ID",
                  "name": "X-Global-Transaction-ID",
                  "value": "348720"
                }
              ],
              "cookie": [],
              "responseTime": "1537",
              "body": "{\"response\":{}}"
            }
          ]
        },
        {
          "_postman_id": "58d79a79-3194-51df-872b-d8d987f9a1cf",
          "name": "Wait for enrollment to finish",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{testPackageURL}}/rest/restTestPackage.ws.sleep?seconds=180",
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {},
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "21e1c873-822e-646e-c062-93dc1208225c",
          "name": "RA-110: Valid request should store all Data in VMMP staging table with status : VALID_SHORT_PROCESS",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "",
                  "",
                  "try{",
                  "",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "tests[\"Verifying that Status in staging VMMP DB is as passed\"] = body.getMemberInfoStagingOutput.results[0].STATUS === \"VALID_SHORT_PROCESS\";",
                  "",
                  "}",
                  "",
                  "catch(err)",
                  "",
                  "{",
                  "    ",
                  "    tests[\"Data does not exist\"] = false;",
                  "}",
                  ""
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{StageDB}}",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"email\":\"{{Email}}\"} "
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "c6c00333-8727-9b95-c697-6054721e33d9",
          "name": "RA-110: Status stored in Core table is UMS creation failed ",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "try{",
                  "",
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "tests[\"Verifying that Status in VMMP DB is UMS Creation Failed\"] = body.memberships[0].status.name === \"REGISTERING_ACTIVATION_FAILED\"  ;",
                  "tests[\"Verifying that Failure reason in Core VMMP DB is as username already exists\"] = body.memberships[0].failureReason === \"User Already Exists in UMS...Aborting Enrolment Process\"  ;",
                  "",
                  "}",
                  "catch(err)",
                  "",
                  "{",
                  "    ",
                  "    tests[\"Data does not exist\"] = false;",
                  "}",
                  ""
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{VmmpUrl}}/restapi-vitality-member-management-service/registration/members/{{Email}}",
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"email\":\"{{Email}}\"} "
            },
            "description": ""
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "b4ad3493-8c3d-9231-8370-8f5d0222189d",
      "name": "RA-249 : ESB API to update member details",
      "description": "",
      "item": [
        {
          "_postman_id": "19810219-bece-10a9-e472-5e4eeba710f7",
          "name": "RA-153: Enrolling a Member - New Process",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "//Verifing that the response time is less than the value declared in global  variable ",
                  "tests[\"Response time is less than \" + globals.responseTime + \" ms and is \" + responseTime + \" ms\"] = responseTime < globals.responseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "try {",
                  "    tests[\"Verifying that Enrolment is successfull\"] = body.status === \"Data Accepted\";",
                  "",
                  "    postman.setEnvironmentVariable(\"memberID1\", environment.memberID);",
                  "    postman.setEnvironmentVariable(\"Email1\", environment.Email);",
                  "} catch (err) {",
                  "    tests[\"Data in response does not exist\"] = false;",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "",
                  "//Generating Random Email address to pass into the data so that user duplication does not happen",
                  "function makeEmail() {",
                  "  var strValues = \"qpotvghysbnxui56z\";",
                  "  var strEmail = \"\";",
                  "  var strTmp;",
                  "  for (var i = 0; i < 10; i++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strTmp = \"\";",
                  "  strEmail = strEmail + \"@\";",
                  "  for (var j = 0; j < 8; j++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strEmail = strEmail + \"esbpii.com\";",
                  "  return strEmail;",
                  "}",
                  "",
                  "",
                  "//Setting up the random email to an environment variable",
                  "postman.setEnvironmentVariable(\"Email\", makeEmail());",
                  "postman.setEnvironmentVariable(\"Email1\", environment.Email);",
                  "console.log(\"Email: \"+environment.Email);",
                  "",
                  "var firstName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);",
                  "",
                  "//Setting up the firstName to an environment variable",
                  "postman.setEnvironmentVariable(\"firstName\", firstName);",
                  "console.log(\"firstName: \"+environment.firstName);",
                  "",
                  "var lastName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 8);",
                  "",
                  "//Setting up the lastName to an environment variable",
                  "postman.setEnvironmentVariable(\"lastName\", lastName);",
                  "console.log(\"lastName: \"+environment.lastName);",
                  "",
                  "",
                  "//Incrementing and Setting up the memberID to an environment variable",
                  "// var memberIdNumber = parseInt(environment.memberIdNumber)+1;",
                  "var memberIdNumber = Date.now();",
                  "console.log(memberIdNumber);",
                  "postman.setEnvironmentVariable(\"memberIdNumber\", memberIdNumber);",
                  "postman.setEnvironmentVariable(\"memberID\", \"RA\"+memberIdNumber.toString());",
                  "postman.setEnvironmentVariable(\"memberID1\", environment.memberID);",
                  "console.log(\"memberID :\"+environment.memberID);",
                  ""
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
            },
            "description": ""
          },
          "response": [
            {
              "id": "573ac9ac-073d-af26-26fb-89facfc7d954",
              "name": "error",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "key": "Connection",
                  "value": "Keep-Alive",
                  "name": "Connection",
                  "description": ""
                },
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "name": "Content-Type",
                  "description": ""
                },
                {
                  "key": "Date",
                  "value": "Wed, 14 Dec 2016 00:42:55 GMT",
                  "name": "Date",
                  "description": ""
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked",
                  "name": "Transfer-Encoding",
                  "description": ""
                },
                {
                  "key": "X-Backside-Transport",
                  "value": "OK OK",
                  "name": "X-Backside-Transport",
                  "description": ""
                },
                {
                  "key": "X-Client-IP",
                  "value": "10.61.38.184",
                  "name": "X-Client-IP",
                  "description": ""
                },
                {
                  "key": "X-Global-Transaction-ID",
                  "value": "348720",
                  "name": "X-Global-Transaction-ID",
                  "description": ""
                }
              ],
              "cookie": [],
              "responseTime": "1537",
              "body": "{\"response\":{}}"
            },
            {
              "id": "61e8b98a-b8ed-e4b6-1f29-c9c1e65ce705",
              "name": "response 3",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:17 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "1830",
              "body": "{\"token\":\"1ed2d16e-9fc9-46ed-af8e-49e5b5207e79\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "9df96d0a-e853-8e20-dc95-da74a26fbfef",
              "name": "response 2",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:07 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "237",
              "body": "{\"token\":\"a77eb61e-5dd3-4680-931e-49122ab21153\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "9f23b148-0cfb-378d-c139-f72bcf652639",
              "name": "response 1",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:13:56 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "215",
              "body": "{\"token\":\"39b8615a-307d-419f-a503-4d4fa6c7021d\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            }
          ]
        },
        {
          "_postman_id": "da879780-4cad-6f00-2b5a-3607ae0003e1",
          "name": "Wait for enrolment to finish",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "{{password_ESB}}",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{testPackageURL}}/rest/restTestPackage.ws.sleep?seconds=200",
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {},
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "2a03175a-8395-69e5-89aa-8f0aff18335e",
          "name": "RA-147 : Verifying user has been added to UMS and is InActive Status",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonObject = xml2Json(responseBody);\r",
                  "\r",
                  "try\r",
                  "{\r",
                  "\r",
                  "\r",
                  "tests[\"Verifying that User status is Not Activated\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userStatus === \"I\";\r",
                  "\r",
                  "tests[\"Verifying that User ID is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userId === environment.Email ;\r",
                  "\r",
                  "tests[\"Verifying that Email is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.email === environment.Email ;\r",
                  "\r",
                  "tests[\"Verifying that First Name is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.givenName === environment.firstName ;\r",
                  "\r",
                  "tests[\"Verifying that Last name is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.surname === environment.lastName ;\r",
                  "\r",
                  "tests[\"Verifying that Member Type is as passed to UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.memberType === \"GROUP\" ;\r",
                  "\r",
                  "tests[\"Verifying that User Groups List is VITALITY_AWAITING_ACTIVATION\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userGroupsList === \"VITALITY_AWAITING_ACTIVATION\" ;\r",
                  "\r",
                  "\r",
                  "\r",
                  "//Setting up the token to an environment variable to be used in subsequent requests\r",
                  "\r",
                  "postman.setEnvironmentVariable(\"umsToken\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.token);\r",
                  "\r",
                  "postman.setEnvironmentVariable(\"aiaClientNumber\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaClientNumber);\r",
                  "postman.setEnvironmentVariable(\"aiaVitalityMemberNumber\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaVitalityMemberNumber);\r",
                  "postman.setEnvironmentVariable(\"aiaDsyPolicyNumber\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaDsyPolicyNumber);\r",
                  "\r",
                  "postman.setEnvironmentVariable(\"aiaVitalityId\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaVitalityId);\r",
                  "\r",
                  "\r",
                  "}\r",
                  "\r",
                  "\r",
                  "catch(err){\r",
                  "    \r",
                  "  tests[\"Data in response does not exist\"] = false;  \r",
                  "\r",
                  "\r",
                  "}\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "{{UmsURL}}/{{UMSContext}}/UsermanagementService",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "text/xml",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:ser=\"http://service.usermanagement.aiaa.com.au\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <ser:searchUserRequest>\n         <source>VITALITY</source>\n         <userType></userType>\n         <userDetails>\n            <userName></userName>\n            <userId></userId>\n            <userDN></userDN>\n            <email>{{Email}}</email>\n            <givenName></givenName>\n            <surname></surname>\n            <webChannel></webChannel>\n            <token></token>\n            <fundIdentifier></fundIdentifier>\n            <eligibilityAssessorEmail></eligibilityAssessorEmail>\n            <activationURL></activationURL>\n            <consentURL></consentURL>\n            <!--1 or more repetitions:-->\n            <userRolesList></userRolesList>\n            <title></title>\n            <dateOfBirth></dateOfBirth>\n            <gender></gender>\n            <addressLine1></addressLine1>\n            <addressLine2></addressLine2>\n            <suburb></suburb>\n            <state></state>\n            <postcode></postcode>\n            <country></country>\n            <mobilePhone></mobilePhone>\n            <workPhone></workPhone>\n            <homePhone></homePhone>\n            <fax></fax>\n            <isRetailLifeInsured></isRetailLifeInsured>\n            <passwordRequestDate></passwordRequestDate>\n            <password></password>\n            <passwordRequestCount></passwordRequestCount>\n            <aiaProposalNumber></aiaProposalNumber>\n            <aiaProposalWritingAdviser></aiaProposalWritingAdviser>\n            <aiaCCAppTnCAcceptedDate></aiaCCAppTnCAcceptedDate>\n            <aiaCCAppTnCVersion></aiaCCAppTnCVersion>\n            <!--1 or more repetitions:-->\n            <userGroupsList></userGroupsList>\n            <!--1 or more repetitions:-->\n            <userGroupsDNList></userGroupsDNList>\n            <memberType></memberType>\n            <residentialPostcode></residentialPostcode>\n            <userStatus></userStatus>\n            <aiaClientNumber></aiaClientNumber>\n            <aiaVitalityMemberNumber></aiaVitalityMemberNumber>\n            <aiaDsyPolicyNumber></aiaDsyPolicyNumber>\n            <aiaVitalityCobrandingInfo></aiaVitalityCobrandingInfo>\n         </userDetails>\n      </ser:searchUserRequest>\n   </soapenv:Body>\n</soapenv:Envelope>\n\n"
            },
            "description": "A/C:\r\nGiven that members activated their membership\r\nWhen ESB gets the action\r\nThen their membership will be activated in UMS"
          },
          "response": []
        },
        {
          "_postman_id": "42cd84b4-b3cd-ae53-8d3a-d1b298cafc33",
          "name": "RA-153: Activate member - New Process",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "var body = JSON.parse(responseBody);"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{ESBURL}}/rest/aiaVitalityMember/pub/activation",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"password\": \"Welcome123\",\r\n   \"reasonForJoining\": \"I am actively trying to maintain or improve my health\",\r\n   \"email\": \"{{Email}}\",\r\n   \"token\": \"{{umsToken}}\"   \r\n}\r\n"
            },
            "description": ""
          },
          "response": [
            {
              "id": "071f50e2-c33c-6746-d137-dea152d7779f",
              "name": "response 1",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMember/pub/activation",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"password\": \"Welcome123\",\r\n   \"reasonForJoining\": \"I am actively trying to maintain or improve my health\",\r\n   \"email\": \"{{Email}}\",\r\n   \"token\": \"{{umsToken}}\"   \r\n}\r\n"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:13:56 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "215",
              "body": "{\"token\":\"39b8615a-307d-419f-a503-4d4fa6c7021d\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "77cf1f31-b9eb-3b6f-014f-d0cd747b44ac",
              "name": "error",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMember/pub/activation",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"password\": \"Welcome123\",\r\n   \"reasonForJoining\": \"I am actively trying to maintain or improve my health\",\r\n   \"email\": \"{{Email}}\",\r\n   \"token\": \"{{umsToken}}\"   \r\n}\r\n"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "key": "Connection",
                  "value": "Keep-Alive",
                  "name": "Connection",
                  "description": ""
                },
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "name": "Content-Type",
                  "description": ""
                },
                {
                  "key": "Date",
                  "value": "Wed, 14 Dec 2016 00:42:55 GMT",
                  "name": "Date",
                  "description": ""
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked",
                  "name": "Transfer-Encoding",
                  "description": ""
                },
                {
                  "key": "X-Backside-Transport",
                  "value": "OK OK",
                  "name": "X-Backside-Transport",
                  "description": ""
                },
                {
                  "key": "X-Client-IP",
                  "value": "10.61.38.184",
                  "name": "X-Client-IP",
                  "description": ""
                },
                {
                  "key": "X-Global-Transaction-ID",
                  "value": "348720",
                  "name": "X-Global-Transaction-ID",
                  "description": ""
                }
              ],
              "cookie": [],
              "responseTime": "1537",
              "body": "{\"response\":{}}"
            },
            {
              "id": "8de0ff65-36c8-0ff8-8b33-b644603b56ba",
              "name": "response 3",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMember/pub/activation",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"password\": \"Welcome123\",\r\n   \"reasonForJoining\": \"I am actively trying to maintain or improve my health\",\r\n   \"email\": \"{{Email}}\",\r\n   \"token\": \"{{umsToken}}\"   \r\n}\r\n"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:17 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "1830",
              "body": "{\"token\":\"1ed2d16e-9fc9-46ed-af8e-49e5b5207e79\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "a967ea68-2c3e-0197-ce58-bb9c8a69ce1d",
              "name": "response 2",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMember/pub/activation",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"password\": \"Welcome123\",\r\n   \"reasonForJoining\": \"I am actively trying to maintain or improve my health\",\r\n   \"email\": \"{{Email}}\",\r\n   \"token\": \"{{umsToken}}\"   \r\n}\r\n"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:07 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "237",
              "body": "{\"token\":\"a77eb61e-5dd3-4680-931e-49122ab21153\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            }
          ]
        },
        {
          "_postman_id": "90161561-18e7-c866-812d-8bb46eb0b9a1",
          "name": "Wait for activation to finish",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{testPackageURL}}/rest/restTestPackage.ws.sleep?seconds=120",
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {},
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "4f66aef0-90f0-ea4d-b21b-80ca9700640f",
          "name": "RA-147 : Verifying user has been added to UMS and is activated",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonObject = xml2Json(responseBody);",
                  "",
                  "try {",
                  "    tests[\"Verifying that User status is  Activated\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userStatus === \"A\";",
                  "",
                  "    tests[\"Verifying that User ID is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userId === environment.Email;",
                  "",
                  "    tests[\"Verifying that Email is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.email === environment.Email;",
                  "",
                  "    tests[\"Verifying that First Name is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.givenName === environment.firstName;",
                  "",
                  "    tests[\"Verifying that Last name is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.surname === environment.lastName;",
                  "",
                  "    tests[\"Verifying that Member Type is as passed to UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.memberType === \"GROUP\";",
                  "",
                  "    tests[\"Verifying that User Groups List is VITALITY_ACTIVE\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userGroupsList === \"VITALITY_ACTIVE\";",
                  "",
                  "    //Setting up the token to an environment variable to be used in subsequent requests",
                  "    postman.setEnvironmentVariable(\"umsToken\", jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.token);",
                  "",
                  "    postman.setEnvironmentVariable(\"aiaClientNumber\", jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaClientNumber);",
                  "    postman.setEnvironmentVariable(\"aiaVitalityMemberNumber\", jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaVitalityMemberNumber);",
                  "    postman.setEnvironmentVariable(\"aiaDsyPolicyNumber\", jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaDsyPolicyNumber);",
                  "",
                  "    postman.setEnvironmentVariable(\"aiaVitalityId\", jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaVitalityId);",
                  "} catch (err) {",
                  "    tests[\"Data in response does not exist\"] = false;",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "{{UmsURL}}/{{UMSContext}}/UsermanagementService",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "text/xml",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:ser=\"http://service.usermanagement.aiaa.com.au\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <ser:searchUserRequest>\r\n         <source>VITALITY</source>\r\n         <userType></userType>\r\n         <userDetails>\r\n            <userName></userName>\r\n            <userId></userId>\r\n            <userDN></userDN>\r\n            <email>{{Email}}</email>\r\n            <givenName></givenName>\r\n            <surname></surname>\r\n            <webChannel></webChannel>\r\n            <token></token>\r\n            <fundIdentifier></fundIdentifier>\r\n            <eligibilityAssessorEmail></eligibilityAssessorEmail>\r\n            <activationURL></activationURL>\r\n            <consentURL></consentURL>\r\n            <!--1 or more repetitions:-->\r\n            <userRolesList></userRolesList>\r\n            <title></title>\r\n            <dateOfBirth></dateOfBirth>\r\n            <gender></gender>\r\n            <addressLine1></addressLine1>\r\n            <addressLine2></addressLine2>\r\n            <suburb></suburb>\r\n            <state></state>\r\n            <postcode></postcode>\r\n            <country></country>\r\n            <mobilePhone></mobilePhone>\r\n            <workPhone></workPhone>\r\n            <homePhone></homePhone>\r\n            <fax></fax>\r\n            <isRetailLifeInsured></isRetailLifeInsured>\r\n            <passwordRequestDate></passwordRequestDate>\r\n            <password></password>\r\n            <passwordRequestCount></passwordRequestCount>\r\n            <aiaProposalNumber></aiaProposalNumber>\r\n            <aiaProposalWritingAdviser></aiaProposalWritingAdviser>\r\n            <aiaCCAppTnCAcceptedDate></aiaCCAppTnCAcceptedDate>\r\n            <aiaCCAppTnCVersion></aiaCCAppTnCVersion>\r\n            <!--1 or more repetitions:-->\r\n            <userGroupsList></userGroupsList>\r\n            <!--1 or more repetitions:-->\r\n            <userGroupsDNList></userGroupsDNList>\r\n            <memberType></memberType>\r\n            <residentialPostcode></residentialPostcode>\r\n            <userStatus></userStatus>\r\n            <aiaClientNumber></aiaClientNumber>\r\n            <aiaVitalityMemberNumber></aiaVitalityMemberNumber>\r\n            <aiaDsyPolicyNumber></aiaDsyPolicyNumber>\r\n            <aiaVitalityCobrandingInfo></aiaVitalityCobrandingInfo>\r\n         </userDetails>\r\n      </ser:searchUserRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>\r\n\r\n"
            },
            "description": "A/C:\r\nGiven that members activated their membership\r\nWhen ESB gets the action\r\nThen their membership will be activated in UMS"
          },
          "response": []
        },
        {
          "_postman_id": "76c7bbb2-6781-78c0-d4fa-cc5ca669eebe",
          "name": "RA-249 : ESB - Request to update details of a member in ACTIVATED status",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "try {",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    // tests[\"Verifying that the overall result is SUCCESS\"] = jsonData.result === \"SUCCESS\";",
                  "    // tests[\"Verifying that the individual result is SUCCESS\"] = jsonData.responses[0].result === \"SUCCESS\";",
                  "    tests[\"Verifying that the appropriate MemberID is returned\"] = jsonData.memberUpdateSuccess[0].memberId === environment.memberID;",
                  "    // tests[\"Verifying that the appropriate Relationship Name is returned\"] = jsonData.responses[0].relationshipName === environment.relationshipName;",
                  "} catch (err) {",
                  "    tests[\"Data in response does not exist\"] = false;",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Setting up the firstName to an environment variable",
                  "var firstName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);",
                  "postman.setEnvironmentVariable(\"firstName\", firstName);",
                  "",
                  "//Setting up the lastName to an environment variable",
                  "var lastName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 8);",
                  "postman.setEnvironmentVariable(\"lastName\", lastName);",
                  "",
                  "var mobileNumber = \"0\"+((Math.random()*10000000000).toString().substr(0,9));",
                  "postman.setEnvironmentVariable(\"mobileNumber\", mobileNumber);",
                  "console.log(environment.mobileNumber);",
                  "",
                  "var homeNumber = \"0\"+((Math.random()*10000000000).toString().substr(0,9));",
                  "postman.setEnvironmentVariable(\"homeNumber\", homeNumber);",
                  "console.log(environment.homeNumber);",
                  "",
                  "var workNumber = \"0\"+((Math.random()*10000000000).toString().substr(0,9));",
                  "postman.setEnvironmentVariable(\"workNumber\", workNumber);",
                  "console.log(environment.workNumber);"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipMaintenance.rs.updateMemberInfo.v1",
            "method": "PUT",
            "header": [
              {
                "key": "cache-control",
                "value": "no-cache",
                "description": ""
              },
              {
                "key": "content-type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "postman-token",
                "value": "840692de-45a7-79c0-1e80-679ec3312e9e",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"members\": [\n    {\n      \"member\": {\n        \"title\": \"Ms\",\n        \"firstName\": \"{{firstName}}\",\n        \"lastName\": \"{{lastName}}\",\n        \"gender\": \"F\",\n        \"dateOfBirth\": \"07/12/1970\",\n        \"email\": null,\n        \"memberId\": \"{{memberID}}\",\n        \"address\": {\n          \"line1\": \"{{memberIdNumber}} {{firstName}} New Test Street\",\n          \"line2\": \"{{lastName}} Line 2\",\n          \"suburb\": \"Sydney\",\n          \"state\": \"NSW\",\n          \"country\": \"Australia\",\n          \"postcode\": \"2000\"\n        },\n        \"phone\": {\n          \"mobileNumber\": \"{{mobileNumber}}\",\n          \"homeNumber\": \"{{homeNumber}}\",\n          \"workNumber\": \"{{workNumber}}\"\n        }\n      }\n    }\n  ],\n  \"relationshipName\": \"GRESTFUNDMEMBER\",\n  \"uuid\": \"{{$guid}}\"\n}"
            },
            "description": "Generated from a curl request: \ncurl -X PUT \\\n  http://aaiwklt021512.aia.biz:5555/rest/aiaVitalityMembershipMaintenance.rs.updateMemberInfo.v1 \\\n  -H 'authorization: Basic QWRtaW5pc3RyYXRvcjoxUDF0eXRoMw==' \\\n  -H 'cache-control: no-cache' \\\n  -H 'content-type: application/json' \\\n  -H 'postman-token: 840692de-45a7-79c0-1e80-679ec3312e9e' \\\n  -d '{\n\t\\\"members\\\":[\n\t\t{\n\t\t\t\\\"member\\\":{\n\t\t\t\t\\\"title\\\":\\\"Mr\\\",\n\t\t\t\t\\\"firstName\\\":\\\"Charlie\\\",\n    \t\t\t\\\"lastName\\\":\\\"Chaplin\\\",\n    \t\t\t\\\"gender\\\":\\\"M\\\",\n    \t\t\t\\\"dateOfBirth\\\":\\\"07/12/1970\\\",\n    \t\t\t\\\"email\\\":\\\"tst1357426917@hotmail.com\\\",\n    \t\t\t\\\"memberId\\\":\\\"TESTNOM1357426917\\\",\n    \t\t\t\\\"address\\\":{\n    \t\t\t\t\\\"line1\\\":\\\"Drewrey Lane\\\",\n    \t\t\t\t\\\"line2\\\":\\\"\\\",\n    \t\t\t\t\\\"suburb\\\":\\\"London\\\",\n    \t\t\t\t\\\"state\\\":\\\"VIC\\\",\n    \t\t\t\t\\\"country\\\":\\\"Australia\\\",\n    \t\t\t\t\\\"postcode\\\":\\\"3000\\\"\n    \t\t\t},\n    \t\t\t\\\"phone\\\":{\n    \t\t\t\t\\\"mobileNumber\\\":\\\"0404040404\\\",\n    \t\t\t\t\\\"homeNumber\\\":\\\"0288911783\\\",\n    \t\t\t\t\\\"workNumber\\\":\\\"0288944513\\\"\n    \t\t\t}\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\\\"member\\\":{\n\t\t\t\t\\\"title\\\":\\\"Mr\\\",\n\t\t\t\t\\\"firstName\\\":\\\"Fred\\\",\n    \t\t\t\\\"lastName\\\":\\\"Lucy\\\",\n    \t\t\t\\\"gender\\\":\\\"M\\\",\n    \t\t\t\\\"dateOfBirth\\\":\\\"01/04/1986\\\",\n    \t\t\t\\\"memberId\\\":\\\"TESTNOM200940062\\\",\n    \t\t\t\\\"phone\\\":{\n    \t\t\t\t\\\"mobileNumber\\\":\\\"0400000000\\\",\n    \t\t\t\t\\\"homeNumber\\\":\\\"0213456789\\\",\n    \t\t\t\t\\\"workNumber\\\":\\\"0298765431\\\"\n    \t\t\t}\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\\\"member\\\":{\n\t\t\t\t\\\"title\\\":\\\"Mr\\\",\n\t\t\t\t\\\"firstName\\\":\\\"Dianne\\\",\n    \t\t\t\\\"lastName\\\":\\\"Gray\\\",\n    \t\t\t\\\"gender\\\":\\\"M\\\",\n    \t\t\t\\\"dateOfBirth\\\":\\\"08/13/1970\\\",\n    \t\t\t\\\"memberId\\\":\\\"TESTNOM14449914\\\",\n    \t\t\t\\\"address\\\":{\n    \t\t\t\t\\\"line1\\\":\\\"Changed Line1\\\",\n    \t\t\t\t\\\"line2\\\":\\\"Changed Line2\\\",\n    \t\t\t\t\\\"suburb\\\":\\\"Changed Suburb\\\",\n    \t\t\t\t\\\"state\\\":\\\"VIC\\\",\n    \t\t\t\t\\\"country\\\":\\\"Australia\\\",\n    \t\t\t\t\\\"postcode\\\":\\\"3100\\\"\n    \t\t\t},\n    \t\t\t\\\"phone\\\":{\n    \t\t\t\t\\\"mobileNumber\\\":\\\"0404040404\\\",\n    \t\t\t\t\\\"homeNumber\\\":\\\"0288911783\\\",\n    \t\t\t\t\\\"workNumber\\\":\\\"0288944513\\\"\n    \t\t\t}\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\\\"member\\\":{\n\t\t\t\t\\\"title\\\":\\\"Mr\\\",\n\t\t\t\t\\\"firstName\\\":\\\"Ge0rge\\\",\n    \t\t\t\\\"lastName\\\":\\\"Lucas\\\",\n    \t\t\t\\\"gender\\\":\\\"M\\\",\n    \t\t\t\\\"dateOfBirth\\\":\\\"08/13/1970\\\",\n    \t\t\t\\\"memberId\\\":\\\"TESTNOM-828628027\\\",\n    \t\t\t\\\"address\\\":{\n    \t\t\t\t\\\"line1\\\":\\\"Changed Line1\\\",\n    \t\t\t\t\\\"line2\\\":\\\"Changed Line2\\\",\n    \t\t\t\t\\\"suburb\\\":\\\"Changed Suburb\\\",\n    \t\t\t\t\\\"state\\\":\\\"VIC\\\",\n    \t\t\t\t\\\"country\\\":\\\"Australia\\\",\n    \t\t\t\t\\\"postcode\\\":\\\"3100\\\"\n    \t\t\t},\n    \t\t\t\\\"phone\\\":{\n    \t\t\t\t\\\"mobileNumber\\\":\\\"0404040404\\\",\n    \t\t\t\t\\\"homeNumber\\\":\\\"0288911783\\\",\n    \t\t\t\t\\\"workNumber\\\":\\\"0288944513\\\"\n    \t\t\t}\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\\\"member\\\":{\n\t\t\t\t\\\"title\\\":\\\"Mr\\\",\n\t\t\t\t\\\"firstName\\\":\\\"George\\\",\n    \t\t\t\\\"lastName\\\":\\\"Lucas\\\",\n    \t\t\t\\\"gender\\\":\\\"M\\\",\n    \t\t\t\\\"dateOfBirth\\\":\\\"08/13/1970\\\",\n    \t\t\t\\\"memberId\\\":\\\"TESTNOM1237596314\\\",\n    \t\t\t\\\"address\\\":{\n    \t\t\t\t\\\"line1\\\":\\\"Changed Line1\\\",\n    \t\t\t\t\\\"line2\\\":\\\"Changed Line2\\\",\n    \t\t\t\t\\\"suburb\\\":\\\"Changed Suburb\\\",\n    \t\t\t\t\\\"state\\\":\\\"VIC\\\",\n    \t\t\t\t\\\"country\\\":\\\"Australia\\\",\n    \t\t\t\t\\\"postcode\\\":\\\"3100\\\"\n    \t\t\t},\n    \t\t\t\\\"phone\\\":{\n    \t\t\t\t\\\"mobileNumber\\\":\\\"0404040404\\\",\n    \t\t\t\t\\\"homeNumber\\\":\\\"0288911783\\\",\n    \t\t\t\t\\\"workNumber\\\":\\\"0288944513\\\"\n    \t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t],\n\t\\\"relationshipName\\\": \\\"GRESTFUNDMEMBER\\\",\n\t\\\"uuid\\\":\\\"599f9790-5c4f-13d4-8dd1-ffffffbaabca\\\"\n}'"
          },
          "response": []
        },
        {
          "_postman_id": "1614bfcb-d961-c666-ee1a-51272cebed7c",
          "name": "Wait for update to finish",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{testPackageURL}}/rest/restTestPackage.ws.sleep?seconds=30",
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {},
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "8669d4f1-4ec4-40dc-d4bc-413769ec7f72",
          "name": "RA-144: Verifying that all the details are updated",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "//Verifing that the response time is less than the value declared in global  variable ",
                  "tests[\"Response time is less than \" + globals.responseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < globals.responseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "//console.log(environment.restMemberId+\"aiaPiiData\");",
                  "",
                  "try{",
                  "    tests[\"Verifying that Email in Core VMMP DB is as passed\"] = body.email === environment.Email;",
                  "    tests[\"Verifying that First Name in Core VMMP DB is as passed\"] = body.firstName === environment.firstName;",
                  "    tests[\"Verifying that Last Name in Core VMMP DB is as passed\"] = body.lastName === environment.lastName;",
                  "    tests[\"Verifying that Gender in Core VMMP DB is as passed\"] = body.gender === \"F\";",
                  "    tests[\"Verifying that DOB in Core VMMP DB is as passed\"] = Date.create(body.dateOfBirth).is(Date.create(environment.vmmpDOB));",
                  "    tests[\"Verifying that Relationship Id in Core VMMP DB is as passed\"] = body.relationship.name === environment.relationshipName;",
                  "}",
                  "catch(err){",
                  "    ",
                  "    tests[\"Data does not exist\"] = false;",
                  "}",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{VmmpUrl}}/{{VMMPContext}}/registration/members/{{Email}}",
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"email\":\"{{Email}}\"} "
            },
            "description": "A/C :\n\nDup check passed:\nGiven that a record is of a unique member \nWhen dup check runs\nThen VMMP core table member's record will be updated with the member's details"
          },
          "response": []
        },
        {
          "_postman_id": "4d066948-9599-da3b-5e90-faa57f1127de",
          "name": "RA-249 : ESB - Request to update email of a member in ACTIVATED status",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "try {",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    // tests[\"Verifying that the overall result is SUCCESS\"] = jsonData.result === \"SUCCESS\";",
                  "    // tests[\"Verifying that the individual result is SUCCESS\"] = jsonData.responses[0].result === \"SUCCESS\";",
                  "    // tests[\"Verifying that the appropriate MemberID is returned\"] = jsonData.memberUpdateFailure[0].memberId === environment.memberID;",
                  "    tests[\"Verifying that the appropriate MemberID is returned\"] = jsonData.memberUpdateFailure[0].failureReason === \"USER_ALREADY_ACTIVATED_CANNOT_UPDATE_EMAIL\";",
                  "    // tests[\"Verifying that the appropriate Relationship Name is returned\"] = jsonData.responses[0].relationshipName === environment.relationshipName;",
                  "} catch (err) {",
                  "    tests[\"Data in response does not exist\"] = false;",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Generating Random Email address to pass into the data so that user duplication does not happen",
                  "function makeEmail() {",
                  "  var strValues = \"qpotvghysbnxui56z\";",
                  "  var strEmail = \"\";",
                  "  var strTmp;",
                  "  for (var i = 0; i < 10; i++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strTmp = \"\";",
                  "  strEmail = strEmail + \"@\";",
                  "  for (var j = 0; j < 8; j++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strEmail = strEmail + \"vmmpemail.com\";",
                  "  return strEmail;",
                  "}",
                  "",
                  "//Setting up the random email to an environment variable",
                  "postman.setEnvironmentVariable(\"Email\", makeEmail());",
                  "",
                  "//Setting up the firstName to an environment variable",
                  "var firstName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);",
                  "postman.setEnvironmentVariable(\"firstName\", firstName);",
                  "",
                  "//Setting up the lastName to an environment variable",
                  "var lastName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 8);",
                  "postman.setEnvironmentVariable(\"lastName\", lastName);",
                  "",
                  "var mobileNumber = \"0\"+((Math.random()*10000000000).toString().substr(0,9));",
                  "postman.setEnvironmentVariable(\"mobileNumber\", mobileNumber);",
                  "console.log(environment.mobileNumber);",
                  "",
                  "var homeNumber = \"0\"+((Math.random()*10000000000).toString().substr(0,9));",
                  "postman.setEnvironmentVariable(\"homeNumber\", homeNumber);",
                  "console.log(environment.homeNumber);",
                  "",
                  "var workNumber = \"0\"+((Math.random()*10000000000).toString().substr(0,9));",
                  "postman.setEnvironmentVariable(\"workNumber\", workNumber);",
                  "console.log(environment.workNumber);"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipMaintenance.rs.updateMemberInfo.v1",
            "method": "PUT",
            "header": [
              {
                "key": "cache-control",
                "value": "no-cache",
                "description": ""
              },
              {
                "key": "content-type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "postman-token",
                "value": "840692de-45a7-79c0-1e80-679ec3312e9e",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"members\": [\n    {\n      \"member\": {\n        \"title\": \"Ms\",\n        \"firstName\": \"{{firstName}}\",\n        \"lastName\": \"{{lastName}}\",\n        \"gender\": \"F\",\n        \"dateOfBirth\": \"07/12/1970\",\n        \"email\": \"{{Email}}\",\n        \"memberId\": \"{{memberID}}\",\n        \"address\": {\n          \"line1\": \"{{memberIdNumber}} {{firstName}} New Test Street\",\n          \"line2\": \"{{lastName}} Line 2\",\n          \"suburb\": \"Sydney\",\n          \"state\": \"NSW\",\n          \"country\": \"Australia\",\n          \"postcode\": \"2000\"\n        },\n        \"phone\": {\n          \"mobileNumber\": \"{{mobileNumber}}\",\n          \"homeNumber\": \"{{homeNumber}}\",\n          \"workNumber\": \"{{workNumber}}\"\n        }\n      }\n    }\n  ],\n  \"relationshipName\": \"GRESTFUNDMEMBER\",\n  \"uuid\": \"{{$guid}}\"\n}"
            },
            "description": "Generated from a curl request: \ncurl -X PUT \\\n  http://aaiwklt021512.aia.biz:5555/rest/aiaVitalityMembershipMaintenance.rs.updateMemberInfo.v1 \\\n  -H 'authorization: Basic QWRtaW5pc3RyYXRvcjoxUDF0eXRoMw==' \\\n  -H 'cache-control: no-cache' \\\n  -H 'content-type: application/json' \\\n  -H 'postman-token: 840692de-45a7-79c0-1e80-679ec3312e9e' \\\n  -d '{\n\t\\\"members\\\":[\n\t\t{\n\t\t\t\\\"member\\\":{\n\t\t\t\t\\\"title\\\":\\\"Mr\\\",\n\t\t\t\t\\\"firstName\\\":\\\"Charlie\\\",\n    \t\t\t\\\"lastName\\\":\\\"Chaplin\\\",\n    \t\t\t\\\"gender\\\":\\\"M\\\",\n    \t\t\t\\\"dateOfBirth\\\":\\\"07/12/1970\\\",\n    \t\t\t\\\"email\\\":\\\"tst1357426917@hotmail.com\\\",\n    \t\t\t\\\"memberId\\\":\\\"TESTNOM1357426917\\\",\n    \t\t\t\\\"address\\\":{\n    \t\t\t\t\\\"line1\\\":\\\"Drewrey Lane\\\",\n    \t\t\t\t\\\"line2\\\":\\\"\\\",\n    \t\t\t\t\\\"suburb\\\":\\\"London\\\",\n    \t\t\t\t\\\"state\\\":\\\"VIC\\\",\n    \t\t\t\t\\\"country\\\":\\\"Australia\\\",\n    \t\t\t\t\\\"postcode\\\":\\\"3000\\\"\n    \t\t\t},\n    \t\t\t\\\"phone\\\":{\n    \t\t\t\t\\\"mobileNumber\\\":\\\"0404040404\\\",\n    \t\t\t\t\\\"homeNumber\\\":\\\"0288911783\\\",\n    \t\t\t\t\\\"workNumber\\\":\\\"0288944513\\\"\n    \t\t\t}\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\\\"member\\\":{\n\t\t\t\t\\\"title\\\":\\\"Mr\\\",\n\t\t\t\t\\\"firstName\\\":\\\"Fred\\\",\n    \t\t\t\\\"lastName\\\":\\\"Lucy\\\",\n    \t\t\t\\\"gender\\\":\\\"M\\\",\n    \t\t\t\\\"dateOfBirth\\\":\\\"01/04/1986\\\",\n    \t\t\t\\\"memberId\\\":\\\"TESTNOM200940062\\\",\n    \t\t\t\\\"phone\\\":{\n    \t\t\t\t\\\"mobileNumber\\\":\\\"0400000000\\\",\n    \t\t\t\t\\\"homeNumber\\\":\\\"0213456789\\\",\n    \t\t\t\t\\\"workNumber\\\":\\\"0298765431\\\"\n    \t\t\t}\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\\\"member\\\":{\n\t\t\t\t\\\"title\\\":\\\"Mr\\\",\n\t\t\t\t\\\"firstName\\\":\\\"Dianne\\\",\n    \t\t\t\\\"lastName\\\":\\\"Gray\\\",\n    \t\t\t\\\"gender\\\":\\\"M\\\",\n    \t\t\t\\\"dateOfBirth\\\":\\\"08/13/1970\\\",\n    \t\t\t\\\"memberId\\\":\\\"TESTNOM14449914\\\",\n    \t\t\t\\\"address\\\":{\n    \t\t\t\t\\\"line1\\\":\\\"Changed Line1\\\",\n    \t\t\t\t\\\"line2\\\":\\\"Changed Line2\\\",\n    \t\t\t\t\\\"suburb\\\":\\\"Changed Suburb\\\",\n    \t\t\t\t\\\"state\\\":\\\"VIC\\\",\n    \t\t\t\t\\\"country\\\":\\\"Australia\\\",\n    \t\t\t\t\\\"postcode\\\":\\\"3100\\\"\n    \t\t\t},\n    \t\t\t\\\"phone\\\":{\n    \t\t\t\t\\\"mobileNumber\\\":\\\"0404040404\\\",\n    \t\t\t\t\\\"homeNumber\\\":\\\"0288911783\\\",\n    \t\t\t\t\\\"workNumber\\\":\\\"0288944513\\\"\n    \t\t\t}\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\\\"member\\\":{\n\t\t\t\t\\\"title\\\":\\\"Mr\\\",\n\t\t\t\t\\\"firstName\\\":\\\"Ge0rge\\\",\n    \t\t\t\\\"lastName\\\":\\\"Lucas\\\",\n    \t\t\t\\\"gender\\\":\\\"M\\\",\n    \t\t\t\\\"dateOfBirth\\\":\\\"08/13/1970\\\",\n    \t\t\t\\\"memberId\\\":\\\"TESTNOM-828628027\\\",\n    \t\t\t\\\"address\\\":{\n    \t\t\t\t\\\"line1\\\":\\\"Changed Line1\\\",\n    \t\t\t\t\\\"line2\\\":\\\"Changed Line2\\\",\n    \t\t\t\t\\\"suburb\\\":\\\"Changed Suburb\\\",\n    \t\t\t\t\\\"state\\\":\\\"VIC\\\",\n    \t\t\t\t\\\"country\\\":\\\"Australia\\\",\n    \t\t\t\t\\\"postcode\\\":\\\"3100\\\"\n    \t\t\t},\n    \t\t\t\\\"phone\\\":{\n    \t\t\t\t\\\"mobileNumber\\\":\\\"0404040404\\\",\n    \t\t\t\t\\\"homeNumber\\\":\\\"0288911783\\\",\n    \t\t\t\t\\\"workNumber\\\":\\\"0288944513\\\"\n    \t\t\t}\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\\\"member\\\":{\n\t\t\t\t\\\"title\\\":\\\"Mr\\\",\n\t\t\t\t\\\"firstName\\\":\\\"George\\\",\n    \t\t\t\\\"lastName\\\":\\\"Lucas\\\",\n    \t\t\t\\\"gender\\\":\\\"M\\\",\n    \t\t\t\\\"dateOfBirth\\\":\\\"08/13/1970\\\",\n    \t\t\t\\\"memberId\\\":\\\"TESTNOM1237596314\\\",\n    \t\t\t\\\"address\\\":{\n    \t\t\t\t\\\"line1\\\":\\\"Changed Line1\\\",\n    \t\t\t\t\\\"line2\\\":\\\"Changed Line2\\\",\n    \t\t\t\t\\\"suburb\\\":\\\"Changed Suburb\\\",\n    \t\t\t\t\\\"state\\\":\\\"VIC\\\",\n    \t\t\t\t\\\"country\\\":\\\"Australia\\\",\n    \t\t\t\t\\\"postcode\\\":\\\"3100\\\"\n    \t\t\t},\n    \t\t\t\\\"phone\\\":{\n    \t\t\t\t\\\"mobileNumber\\\":\\\"0404040404\\\",\n    \t\t\t\t\\\"homeNumber\\\":\\\"0288911783\\\",\n    \t\t\t\t\\\"workNumber\\\":\\\"0288944513\\\"\n    \t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t],\n\t\\\"relationshipName\\\": \\\"GRESTFUNDMEMBER\\\",\n\t\\\"uuid\\\":\\\"599f9790-5c4f-13d4-8dd1-ffffffbaabca\\\"\n}'"
          },
          "response": []
        },
        {
          "_postman_id": "1d3628ad-4286-79df-15b1-5a3d59448b7d",
          "name": "RA-153: Enrolling a Member - New Process 2",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "//Verifing that the response time is less than the value declared in global  variable ",
                  "tests[\"Response time is less than \" + globals.responseTime + \" ms and is \" + responseTime + \" ms\"] = responseTime < globals.responseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "try {",
                  "    tests[\"Verifying that Enrolment is successfull\"] = body.status === \"Data Accepted\";",
                  "",
                  "    postman.setEnvironmentVariable(\"memberID2\", environment.memberID);",
                  "    postman.setEnvironmentVariable(\"Email2\", environment.Email);",
                  "} catch (err) {",
                  "    tests[\"Data in response does not exist\"] = false;",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "",
                  "//Generating Random Email address to pass into the data so that user duplication does not happen",
                  "function makeEmail() {",
                  "  var strValues = \"qpotvghysbnxui56z\";",
                  "  var strEmail = \"\";",
                  "  var strTmp;",
                  "  for (var i = 0; i < 10; i++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strTmp = \"\";",
                  "  strEmail = strEmail + \"@\";",
                  "  for (var j = 0; j < 8; j++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strEmail = strEmail + \"esbpii.com\";",
                  "  return strEmail;",
                  "}",
                  "",
                  "",
                  "//Setting up the random email to an environment variable",
                  "postman.setEnvironmentVariable(\"Email\", makeEmail());",
                  "postman.setEnvironmentVariable(\"Email2\", environment.Email);",
                  "console.log(\"Email: \"+environment.Email);",
                  "",
                  "",
                  "var firstName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);",
                  "",
                  "//Setting up the firstName to an environment variable",
                  "postman.setEnvironmentVariable(\"firstName\", firstName);",
                  "console.log(\"firstName: \"+environment.firstName);",
                  "",
                  "var lastName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 8);",
                  "",
                  "//Setting up the lastName to an environment variable",
                  "postman.setEnvironmentVariable(\"lastName\", lastName);",
                  "console.log(\"lastName: \"+environment.lastName);",
                  "",
                  "",
                  "//Incrementing and Setting up the memberID to an environment variable",
                  "// var memberIdNumber = parseInt(environment.memberIdNumber)+1;",
                  "var memberIdNumber = Date.now();",
                  "console.log(memberIdNumber);",
                  "postman.setEnvironmentVariable(\"memberIdNumber\", memberIdNumber);",
                  "postman.setEnvironmentVariable(\"memberID\", \"RA\"+memberIdNumber.toString());",
                  "postman.setEnvironmentVariable(\"memberID2\", environment.memberID);",
                  "console.log(\"memberID :\"+environment.memberID);",
                  ""
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
            },
            "description": ""
          },
          "response": [
            {
              "id": "36e8b3ba-619a-3057-3061-bc34e21de8cd",
              "name": "error",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "key": "Connection",
                  "value": "Keep-Alive",
                  "name": "Connection",
                  "description": ""
                },
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "name": "Content-Type",
                  "description": ""
                },
                {
                  "key": "Date",
                  "value": "Wed, 14 Dec 2016 00:42:55 GMT",
                  "name": "Date",
                  "description": ""
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked",
                  "name": "Transfer-Encoding",
                  "description": ""
                },
                {
                  "key": "X-Backside-Transport",
                  "value": "OK OK",
                  "name": "X-Backside-Transport",
                  "description": ""
                },
                {
                  "key": "X-Client-IP",
                  "value": "10.61.38.184",
                  "name": "X-Client-IP",
                  "description": ""
                },
                {
                  "key": "X-Global-Transaction-ID",
                  "value": "348720",
                  "name": "X-Global-Transaction-ID",
                  "description": ""
                }
              ],
              "cookie": [],
              "responseTime": "1537",
              "body": "{\"response\":{}}"
            },
            {
              "id": "775c538b-906b-0f97-0923-b3eb860f2ea3",
              "name": "response 3",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:17 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "1830",
              "body": "{\"token\":\"1ed2d16e-9fc9-46ed-af8e-49e5b5207e79\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "98bc61f8-680c-92ba-f6a3-c63a39c01902",
              "name": "response 1",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:13:56 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "215",
              "body": "{\"token\":\"39b8615a-307d-419f-a503-4d4fa6c7021d\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "c1ec9419-692e-10c3-95fe-ca73fc7fd779",
              "name": "response 2",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:07 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "237",
              "body": "{\"token\":\"a77eb61e-5dd3-4680-931e-49122ab21153\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            }
          ]
        },
        {
          "_postman_id": "76c1e7a6-37f2-8627-f6ab-64f4524f1b52",
          "name": "Wait for enrolment to finish 2",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "{{password_ESB}}",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{testPackageURL}}/rest/restTestPackage.ws.sleep?seconds=200",
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {},
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "48730198-7443-d7fa-883a-ffa965ed869e",
          "name": "RA-147 : Verifying user has been added to UMS and is InActive Status 2",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonObject = xml2Json(responseBody);\r",
                  "\r",
                  "try\r",
                  "{\r",
                  "    tests[\"Verifying that User status is Not Activated\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userStatus === \"I\";\r",
                  "    \r",
                  "    tests[\"Verifying that User ID is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userId === environment.Email ;\r",
                  "    \r",
                  "    tests[\"Verifying that Email is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.email === environment.Email ;\r",
                  "    \r",
                  "    tests[\"Verifying that First Name is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.givenName === environment.firstName ;\r",
                  "    \r",
                  "    tests[\"Verifying that Last name is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.surname === environment.lastName ;\r",
                  "    \r",
                  "    tests[\"Verifying that Member Type is as passed to UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.memberType === \"GROUP\" ;\r",
                  "    \r",
                  "    tests[\"Verifying that User Groups List is VITALITY_AWAITING_ACTIVATION\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userGroupsList === \"VITALITY_AWAITING_ACTIVATION\" ;\r",
                  "    \r",
                  "    \r",
                  "    //Setting up the token to an environment variable to be used in subsequent requests\r",
                  "    \r",
                  "    postman.setEnvironmentVariable(\"umsToken\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.token);\r",
                  "    \r",
                  "    postman.setEnvironmentVariable(\"aiaClientNumber\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaClientNumber);\r",
                  "    postman.setEnvironmentVariable(\"aiaVitalityMemberNumber\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaVitalityMemberNumber);\r",
                  "    postman.setEnvironmentVariable(\"aiaDsyPolicyNumber\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaDsyPolicyNumber);\r",
                  "    \r",
                  "    postman.setEnvironmentVariable(\"aiaVitalityId2\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaVitalityId);\r",
                  "}\r",
                  "\r",
                  "catch(err){\r",
                  "  tests[\"Data in response does not exist\"] = false;  \r",
                  "}\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "{{UmsURL}}/{{UMSContext}}/UsermanagementService",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "text/xml",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:ser=\"http://service.usermanagement.aiaa.com.au\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <ser:searchUserRequest>\n         <source>VITALITY</source>\n         <userType></userType>\n         <userDetails>\n            <userName></userName>\n            <userId></userId>\n            <userDN></userDN>\n            <email>{{Email}}</email>\n            <givenName></givenName>\n            <surname></surname>\n            <webChannel></webChannel>\n            <token></token>\n            <fundIdentifier></fundIdentifier>\n            <eligibilityAssessorEmail></eligibilityAssessorEmail>\n            <activationURL></activationURL>\n            <consentURL></consentURL>\n            <!--1 or more repetitions:-->\n            <userRolesList></userRolesList>\n            <title></title>\n            <dateOfBirth></dateOfBirth>\n            <gender></gender>\n            <addressLine1></addressLine1>\n            <addressLine2></addressLine2>\n            <suburb></suburb>\n            <state></state>\n            <postcode></postcode>\n            <country></country>\n            <mobilePhone></mobilePhone>\n            <workPhone></workPhone>\n            <homePhone></homePhone>\n            <fax></fax>\n            <isRetailLifeInsured></isRetailLifeInsured>\n            <passwordRequestDate></passwordRequestDate>\n            <password></password>\n            <passwordRequestCount></passwordRequestCount>\n            <aiaProposalNumber></aiaProposalNumber>\n            <aiaProposalWritingAdviser></aiaProposalWritingAdviser>\n            <aiaCCAppTnCAcceptedDate></aiaCCAppTnCAcceptedDate>\n            <aiaCCAppTnCVersion></aiaCCAppTnCVersion>\n            <!--1 or more repetitions:-->\n            <userGroupsList></userGroupsList>\n            <!--1 or more repetitions:-->\n            <userGroupsDNList></userGroupsDNList>\n            <memberType></memberType>\n            <residentialPostcode></residentialPostcode>\n            <userStatus></userStatus>\n            <aiaClientNumber></aiaClientNumber>\n            <aiaVitalityMemberNumber></aiaVitalityMemberNumber>\n            <aiaDsyPolicyNumber></aiaDsyPolicyNumber>\n            <aiaVitalityCobrandingInfo></aiaVitalityCobrandingInfo>\n         </userDetails>\n      </ser:searchUserRequest>\n   </soapenv:Body>\n</soapenv:Envelope>\n\n"
            },
            "description": "A/C:\r\nGiven that members activated their membership\r\nWhen ESB gets the action\r\nThen their membership will be activated in UMS"
          },
          "response": []
        },
        {
          "_postman_id": "db37ca5a-d1b3-dc0e-3d90-49c08a42e1e0",
          "name": "RA-249 : ESB - Request to update details of a member with already existing Email address",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "try {",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    // tests[\"Verifying that the overall result is SUCCESS\"] = jsonData.result === \"SUCCESS\";",
                  "    // tests[\"Verifying that the individual result is SUCCESS\"] = jsonData.responses[0].result === \"SUCCESS\";",
                  "    // tests[\"Verifying that the appropriate MemberID is returned\"] = jsonData.memberUpdateFailure[0].memberId === environment.memberID;",
                  "    tests[\"Verifying that the appropriate MemberID is returned\"] = jsonData.memberUpdateFailure[0].failureReason === \"EMAIL_ADDRESS_EXISTS\";",
                  "    // tests[\"Verifying that the appropriate Relationship Name is returned\"] = jsonData.responses[0].relationshipName === environment.relationshipName;",
                  "} catch (err) {",
                  "    tests[\"Data in response does not exist\"] = false;",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Generating Random Email address to pass into the data so that user duplication does not happen",
                  "function makeEmail() {",
                  "  var strValues = \"qpotvghysbnxui56z\";",
                  "  var strEmail = \"\";",
                  "  var strTmp;",
                  "  for (var i = 0; i < 10; i++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strTmp = \"\";",
                  "  strEmail = strEmail + \"@\";",
                  "  for (var j = 0; j < 8; j++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strEmail = strEmail + \"vmmpemail.com\";",
                  "  return strEmail;",
                  "}",
                  "",
                  "//Setting up the random email to an environment variable",
                  "postman.setEnvironmentVariable(\"Email\", makeEmail());",
                  "",
                  "//Setting up the firstName to an environment variable",
                  "var firstName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);",
                  "postman.setEnvironmentVariable(\"firstName\", firstName);",
                  "",
                  "//Setting up the lastName to an environment variable",
                  "var lastName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 8);",
                  "postman.setEnvironmentVariable(\"lastName\", lastName);",
                  "",
                  "var mobileNumber = \"0\"+((Math.random()*10000000000).toString().substr(0,9));",
                  "postman.setEnvironmentVariable(\"mobileNumber\", mobileNumber);",
                  "console.log(environment.mobileNumber);",
                  "",
                  "var homeNumber = \"0\"+((Math.random()*10000000000).toString().substr(0,9));",
                  "postman.setEnvironmentVariable(\"homeNumber\", homeNumber);",
                  "console.log(environment.homeNumber);",
                  "",
                  "var workNumber = \"0\"+((Math.random()*10000000000).toString().substr(0,9));",
                  "postman.setEnvironmentVariable(\"workNumber\", workNumber);",
                  "console.log(environment.workNumber);"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipMaintenance.rs.updateMemberInfo.v1",
            "method": "PUT",
            "header": [
              {
                "key": "cache-control",
                "value": "no-cache",
                "description": ""
              },
              {
                "key": "content-type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "postman-token",
                "value": "840692de-45a7-79c0-1e80-679ec3312e9e",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"members\": [\n    {\n      \"member\": {\n        \"title\": \"Ms\",\n        \"firstName\": \"{{firstName}}\",\n        \"lastName\": \"{{lastName}}\",\n        \"gender\": \"F\",\n        \"dateOfBirth\": \"07/12/1970\",\n        \"email\": \"{{Email1}}\",\n        \"memberId\": \"{{memberID2}}\",\n        \"address\": {\n          \"line1\": \"{{memberIdNumber}} {{firstName}} New Test Street\",\n          \"line2\": \"{{lastName}} Line 2\",\n          \"suburb\": \"Sydney\",\n          \"state\": \"NSW\",\n          \"country\": \"Australia\",\n          \"postcode\": \"2000\"\n        },\n        \"phone\": {\n          \"mobileNumber\": \"{{mobileNumber}}\",\n          \"homeNumber\": \"{{homeNumber}}\",\n          \"workNumber\": \"{{workNumber}}\"\n        }\n      }\n    }\n  ],\n  \"relationshipName\": \"GRESTFUNDMEMBER\",\n  \"uuid\": \"{{$guid}}\"\n}"
            },
            "description": "Generated from a curl request: \ncurl -X PUT \\\n  http://aaiwklt021512.aia.biz:5555/rest/aiaVitalityMembershipMaintenance.rs.updateMemberInfo.v1 \\\n  -H 'authorization: Basic QWRtaW5pc3RyYXRvcjoxUDF0eXRoMw==' \\\n  -H 'cache-control: no-cache' \\\n  -H 'content-type: application/json' \\\n  -H 'postman-token: 840692de-45a7-79c0-1e80-679ec3312e9e' \\\n  -d '{\n\t\\\"members\\\":[\n\t\t{\n\t\t\t\\\"member\\\":{\n\t\t\t\t\\\"title\\\":\\\"Mr\\\",\n\t\t\t\t\\\"firstName\\\":\\\"Charlie\\\",\n    \t\t\t\\\"lastName\\\":\\\"Chaplin\\\",\n    \t\t\t\\\"gender\\\":\\\"M\\\",\n    \t\t\t\\\"dateOfBirth\\\":\\\"07/12/1970\\\",\n    \t\t\t\\\"email\\\":\\\"tst1357426917@hotmail.com\\\",\n    \t\t\t\\\"memberId\\\":\\\"TESTNOM1357426917\\\",\n    \t\t\t\\\"address\\\":{\n    \t\t\t\t\\\"line1\\\":\\\"Drewrey Lane\\\",\n    \t\t\t\t\\\"line2\\\":\\\"\\\",\n    \t\t\t\t\\\"suburb\\\":\\\"London\\\",\n    \t\t\t\t\\\"state\\\":\\\"VIC\\\",\n    \t\t\t\t\\\"country\\\":\\\"Australia\\\",\n    \t\t\t\t\\\"postcode\\\":\\\"3000\\\"\n    \t\t\t},\n    \t\t\t\\\"phone\\\":{\n    \t\t\t\t\\\"mobileNumber\\\":\\\"0404040404\\\",\n    \t\t\t\t\\\"homeNumber\\\":\\\"0288911783\\\",\n    \t\t\t\t\\\"workNumber\\\":\\\"0288944513\\\"\n    \t\t\t}\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\\\"member\\\":{\n\t\t\t\t\\\"title\\\":\\\"Mr\\\",\n\t\t\t\t\\\"firstName\\\":\\\"Fred\\\",\n    \t\t\t\\\"lastName\\\":\\\"Lucy\\\",\n    \t\t\t\\\"gender\\\":\\\"M\\\",\n    \t\t\t\\\"dateOfBirth\\\":\\\"01/04/1986\\\",\n    \t\t\t\\\"memberId\\\":\\\"TESTNOM200940062\\\",\n    \t\t\t\\\"phone\\\":{\n    \t\t\t\t\\\"mobileNumber\\\":\\\"0400000000\\\",\n    \t\t\t\t\\\"homeNumber\\\":\\\"0213456789\\\",\n    \t\t\t\t\\\"workNumber\\\":\\\"0298765431\\\"\n    \t\t\t}\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\\\"member\\\":{\n\t\t\t\t\\\"title\\\":\\\"Mr\\\",\n\t\t\t\t\\\"firstName\\\":\\\"Dianne\\\",\n    \t\t\t\\\"lastName\\\":\\\"Gray\\\",\n    \t\t\t\\\"gender\\\":\\\"M\\\",\n    \t\t\t\\\"dateOfBirth\\\":\\\"08/13/1970\\\",\n    \t\t\t\\\"memberId\\\":\\\"TESTNOM14449914\\\",\n    \t\t\t\\\"address\\\":{\n    \t\t\t\t\\\"line1\\\":\\\"Changed Line1\\\",\n    \t\t\t\t\\\"line2\\\":\\\"Changed Line2\\\",\n    \t\t\t\t\\\"suburb\\\":\\\"Changed Suburb\\\",\n    \t\t\t\t\\\"state\\\":\\\"VIC\\\",\n    \t\t\t\t\\\"country\\\":\\\"Australia\\\",\n    \t\t\t\t\\\"postcode\\\":\\\"3100\\\"\n    \t\t\t},\n    \t\t\t\\\"phone\\\":{\n    \t\t\t\t\\\"mobileNumber\\\":\\\"0404040404\\\",\n    \t\t\t\t\\\"homeNumber\\\":\\\"0288911783\\\",\n    \t\t\t\t\\\"workNumber\\\":\\\"0288944513\\\"\n    \t\t\t}\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\\\"member\\\":{\n\t\t\t\t\\\"title\\\":\\\"Mr\\\",\n\t\t\t\t\\\"firstName\\\":\\\"Ge0rge\\\",\n    \t\t\t\\\"lastName\\\":\\\"Lucas\\\",\n    \t\t\t\\\"gender\\\":\\\"M\\\",\n    \t\t\t\\\"dateOfBirth\\\":\\\"08/13/1970\\\",\n    \t\t\t\\\"memberId\\\":\\\"TESTNOM-828628027\\\",\n    \t\t\t\\\"address\\\":{\n    \t\t\t\t\\\"line1\\\":\\\"Changed Line1\\\",\n    \t\t\t\t\\\"line2\\\":\\\"Changed Line2\\\",\n    \t\t\t\t\\\"suburb\\\":\\\"Changed Suburb\\\",\n    \t\t\t\t\\\"state\\\":\\\"VIC\\\",\n    \t\t\t\t\\\"country\\\":\\\"Australia\\\",\n    \t\t\t\t\\\"postcode\\\":\\\"3100\\\"\n    \t\t\t},\n    \t\t\t\\\"phone\\\":{\n    \t\t\t\t\\\"mobileNumber\\\":\\\"0404040404\\\",\n    \t\t\t\t\\\"homeNumber\\\":\\\"0288911783\\\",\n    \t\t\t\t\\\"workNumber\\\":\\\"0288944513\\\"\n    \t\t\t}\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\\\"member\\\":{\n\t\t\t\t\\\"title\\\":\\\"Mr\\\",\n\t\t\t\t\\\"firstName\\\":\\\"George\\\",\n    \t\t\t\\\"lastName\\\":\\\"Lucas\\\",\n    \t\t\t\\\"gender\\\":\\\"M\\\",\n    \t\t\t\\\"dateOfBirth\\\":\\\"08/13/1970\\\",\n    \t\t\t\\\"memberId\\\":\\\"TESTNOM1237596314\\\",\n    \t\t\t\\\"address\\\":{\n    \t\t\t\t\\\"line1\\\":\\\"Changed Line1\\\",\n    \t\t\t\t\\\"line2\\\":\\\"Changed Line2\\\",\n    \t\t\t\t\\\"suburb\\\":\\\"Changed Suburb\\\",\n    \t\t\t\t\\\"state\\\":\\\"VIC\\\",\n    \t\t\t\t\\\"country\\\":\\\"Australia\\\",\n    \t\t\t\t\\\"postcode\\\":\\\"3100\\\"\n    \t\t\t},\n    \t\t\t\\\"phone\\\":{\n    \t\t\t\t\\\"mobileNumber\\\":\\\"0404040404\\\",\n    \t\t\t\t\\\"homeNumber\\\":\\\"0288911783\\\",\n    \t\t\t\t\\\"workNumber\\\":\\\"0288944513\\\"\n    \t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t],\n\t\\\"relationshipName\\\": \\\"GRESTFUNDMEMBER\\\",\n\t\\\"uuid\\\":\\\"599f9790-5c4f-13d4-8dd1-ffffffbaabca\\\"\n}'"
          },
          "response": []
        },
        {
          "_postman_id": "b84a8aba-77f7-aeb7-b550-046127dc73c2",
          "name": "RA-249 : ESB - Request to update details of a member in AWAITING_ACTIVATION status",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "try {",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    // tests[\"Verifying that the overall result is SUCCESS\"] = jsonData.result === \"SUCCESS\";",
                  "    // tests[\"Verifying that the individual result is SUCCESS\"] = jsonData.responses[0].result === \"SUCCESS\";",
                  "    tests[\"Verifying that the appropriate MemberID is returned\"] = jsonData.memberUpdateSuccess[0].memberId === environment.memberID;",
                  "    // tests[\"Verifying that the appropriate Relationship Name is returned\"] = jsonData.responses[0].relationshipName === environment.relationshipName;",
                  "} catch (err) {",
                  "    tests[\"Data in response does not exist\"] = false;",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Generating Random Email address to pass into the data so that user duplication does not happen",
                  "function makeEmail() {",
                  "  var strValues = \"qpotvghysbnxui56z\";",
                  "  var strEmail = \"\";",
                  "  var strTmp;",
                  "  for (var i = 0; i < 10; i++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strTmp = \"\";",
                  "  strEmail = strEmail + \"@\";",
                  "  for (var j = 0; j < 8; j++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strEmail = strEmail + \"esbemail.com\";",
                  "  return strEmail;",
                  "}",
                  "",
                  "//Setting up the random email to an environment variable",
                  "postman.setEnvironmentVariable(\"Email\", makeEmail());",
                  "",
                  "//Setting up the firstName to an environment variable",
                  "var firstName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);",
                  "postman.setEnvironmentVariable(\"firstName\", firstName);",
                  "",
                  "//Setting up the lastName to an environment variable",
                  "var lastName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 8);",
                  "postman.setEnvironmentVariable(\"lastName\", lastName);",
                  "",
                  "var mobileNumber = \"0\"+((Math.random()*10000000000).toString().substr(0,9));",
                  "postman.setEnvironmentVariable(\"mobileNumber\", mobileNumber);",
                  "console.log(environment.mobileNumber);",
                  "",
                  "var homeNumber = \"0\"+((Math.random()*10000000000).toString().substr(0,9));",
                  "postman.setEnvironmentVariable(\"homeNumber\", homeNumber);",
                  "console.log(environment.homeNumber);",
                  "",
                  "var workNumber = \"0\"+((Math.random()*10000000000).toString().substr(0,9));",
                  "postman.setEnvironmentVariable(\"workNumber\", workNumber);",
                  "console.log(environment.workNumber);"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipMaintenance.rs.updateMemberInfo.v1",
            "method": "PUT",
            "header": [
              {
                "key": "cache-control",
                "value": "no-cache",
                "description": ""
              },
              {
                "key": "content-type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "postman-token",
                "value": "840692de-45a7-79c0-1e80-679ec3312e9e",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"members\": [\n    {\n      \"member\": {\n        \"title\": \"Ms\",\n        \"firstName\": \"{{firstName}}\",\n        \"lastName\": \"{{lastName}}\",\n        \"gender\": \"F\",\n        \"dateOfBirth\": \"07/12/1970\",\n        \"email\": \"{{Email}}\",\n        \"memberId\": \"{{memberID}}\",\n        \"address\": {\n          \"line1\": \"{{memberIdNumber}} {{firstName}} New Test Street\",\n          \"line2\": \"{{lastName}} Line 2\",\n          \"suburb\": \"Sydney\",\n          \"state\": \"NSW\",\n          \"country\": \"Australia\",\n          \"postcode\": \"2000\"\n        },\n        \"phone\": {\n          \"mobileNumber\": \"{{mobileNumber}}\",\n          \"homeNumber\": \"{{homeNumber}}\",\n          \"workNumber\": \"{{workNumber}}\"\n        }\n      }\n    }\n  ],\n  \"relationshipName\": \"GRESTFUNDMEMBER\",\n  \"uuid\": \"{{$guid}}\"\n}"
            },
            "description": "Generated from a curl request: \ncurl -X PUT \\\n  http://aaiwklt021512.aia.biz:5555/rest/aiaVitalityMembershipMaintenance.rs.updateMemberInfo.v1 \\\n  -H 'authorization: Basic QWRtaW5pc3RyYXRvcjoxUDF0eXRoMw==' \\\n  -H 'cache-control: no-cache' \\\n  -H 'content-type: application/json' \\\n  -H 'postman-token: 840692de-45a7-79c0-1e80-679ec3312e9e' \\\n  -d '{\n\t\\\"members\\\":[\n\t\t{\n\t\t\t\\\"member\\\":{\n\t\t\t\t\\\"title\\\":\\\"Mr\\\",\n\t\t\t\t\\\"firstName\\\":\\\"Charlie\\\",\n    \t\t\t\\\"lastName\\\":\\\"Chaplin\\\",\n    \t\t\t\\\"gender\\\":\\\"M\\\",\n    \t\t\t\\\"dateOfBirth\\\":\\\"07/12/1970\\\",\n    \t\t\t\\\"email\\\":\\\"tst1357426917@hotmail.com\\\",\n    \t\t\t\\\"memberId\\\":\\\"TESTNOM1357426917\\\",\n    \t\t\t\\\"address\\\":{\n    \t\t\t\t\\\"line1\\\":\\\"Drewrey Lane\\\",\n    \t\t\t\t\\\"line2\\\":\\\"\\\",\n    \t\t\t\t\\\"suburb\\\":\\\"London\\\",\n    \t\t\t\t\\\"state\\\":\\\"VIC\\\",\n    \t\t\t\t\\\"country\\\":\\\"Australia\\\",\n    \t\t\t\t\\\"postcode\\\":\\\"3000\\\"\n    \t\t\t},\n    \t\t\t\\\"phone\\\":{\n    \t\t\t\t\\\"mobileNumber\\\":\\\"0404040404\\\",\n    \t\t\t\t\\\"homeNumber\\\":\\\"0288911783\\\",\n    \t\t\t\t\\\"workNumber\\\":\\\"0288944513\\\"\n    \t\t\t}\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\\\"member\\\":{\n\t\t\t\t\\\"title\\\":\\\"Mr\\\",\n\t\t\t\t\\\"firstName\\\":\\\"Fred\\\",\n    \t\t\t\\\"lastName\\\":\\\"Lucy\\\",\n    \t\t\t\\\"gender\\\":\\\"M\\\",\n    \t\t\t\\\"dateOfBirth\\\":\\\"01/04/1986\\\",\n    \t\t\t\\\"memberId\\\":\\\"TESTNOM200940062\\\",\n    \t\t\t\\\"phone\\\":{\n    \t\t\t\t\\\"mobileNumber\\\":\\\"0400000000\\\",\n    \t\t\t\t\\\"homeNumber\\\":\\\"0213456789\\\",\n    \t\t\t\t\\\"workNumber\\\":\\\"0298765431\\\"\n    \t\t\t}\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\\\"member\\\":{\n\t\t\t\t\\\"title\\\":\\\"Mr\\\",\n\t\t\t\t\\\"firstName\\\":\\\"Dianne\\\",\n    \t\t\t\\\"lastName\\\":\\\"Gray\\\",\n    \t\t\t\\\"gender\\\":\\\"M\\\",\n    \t\t\t\\\"dateOfBirth\\\":\\\"08/13/1970\\\",\n    \t\t\t\\\"memberId\\\":\\\"TESTNOM14449914\\\",\n    \t\t\t\\\"address\\\":{\n    \t\t\t\t\\\"line1\\\":\\\"Changed Line1\\\",\n    \t\t\t\t\\\"line2\\\":\\\"Changed Line2\\\",\n    \t\t\t\t\\\"suburb\\\":\\\"Changed Suburb\\\",\n    \t\t\t\t\\\"state\\\":\\\"VIC\\\",\n    \t\t\t\t\\\"country\\\":\\\"Australia\\\",\n    \t\t\t\t\\\"postcode\\\":\\\"3100\\\"\n    \t\t\t},\n    \t\t\t\\\"phone\\\":{\n    \t\t\t\t\\\"mobileNumber\\\":\\\"0404040404\\\",\n    \t\t\t\t\\\"homeNumber\\\":\\\"0288911783\\\",\n    \t\t\t\t\\\"workNumber\\\":\\\"0288944513\\\"\n    \t\t\t}\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\\\"member\\\":{\n\t\t\t\t\\\"title\\\":\\\"Mr\\\",\n\t\t\t\t\\\"firstName\\\":\\\"Ge0rge\\\",\n    \t\t\t\\\"lastName\\\":\\\"Lucas\\\",\n    \t\t\t\\\"gender\\\":\\\"M\\\",\n    \t\t\t\\\"dateOfBirth\\\":\\\"08/13/1970\\\",\n    \t\t\t\\\"memberId\\\":\\\"TESTNOM-828628027\\\",\n    \t\t\t\\\"address\\\":{\n    \t\t\t\t\\\"line1\\\":\\\"Changed Line1\\\",\n    \t\t\t\t\\\"line2\\\":\\\"Changed Line2\\\",\n    \t\t\t\t\\\"suburb\\\":\\\"Changed Suburb\\\",\n    \t\t\t\t\\\"state\\\":\\\"VIC\\\",\n    \t\t\t\t\\\"country\\\":\\\"Australia\\\",\n    \t\t\t\t\\\"postcode\\\":\\\"3100\\\"\n    \t\t\t},\n    \t\t\t\\\"phone\\\":{\n    \t\t\t\t\\\"mobileNumber\\\":\\\"0404040404\\\",\n    \t\t\t\t\\\"homeNumber\\\":\\\"0288911783\\\",\n    \t\t\t\t\\\"workNumber\\\":\\\"0288944513\\\"\n    \t\t\t}\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\\\"member\\\":{\n\t\t\t\t\\\"title\\\":\\\"Mr\\\",\n\t\t\t\t\\\"firstName\\\":\\\"George\\\",\n    \t\t\t\\\"lastName\\\":\\\"Lucas\\\",\n    \t\t\t\\\"gender\\\":\\\"M\\\",\n    \t\t\t\\\"dateOfBirth\\\":\\\"08/13/1970\\\",\n    \t\t\t\\\"memberId\\\":\\\"TESTNOM1237596314\\\",\n    \t\t\t\\\"address\\\":{\n    \t\t\t\t\\\"line1\\\":\\\"Changed Line1\\\",\n    \t\t\t\t\\\"line2\\\":\\\"Changed Line2\\\",\n    \t\t\t\t\\\"suburb\\\":\\\"Changed Suburb\\\",\n    \t\t\t\t\\\"state\\\":\\\"VIC\\\",\n    \t\t\t\t\\\"country\\\":\\\"Australia\\\",\n    \t\t\t\t\\\"postcode\\\":\\\"3100\\\"\n    \t\t\t},\n    \t\t\t\\\"phone\\\":{\n    \t\t\t\t\\\"mobileNumber\\\":\\\"0404040404\\\",\n    \t\t\t\t\\\"homeNumber\\\":\\\"0288911783\\\",\n    \t\t\t\t\\\"workNumber\\\":\\\"0288944513\\\"\n    \t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t],\n\t\\\"relationshipName\\\": \\\"GRESTFUNDMEMBER\\\",\n\t\\\"uuid\\\":\\\"599f9790-5c4f-13d4-8dd1-ffffffbaabca\\\"\n}'"
          },
          "response": []
        },
        {
          "_postman_id": "7f4cec5a-6f64-d574-8559-230359831e39",
          "name": "RA-153: Enrolling a Member - New Process 3",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "",
                  "",
                  "tests[\"Verifying that Enrolment is successfull\"] =  body.status === \"Data Accepted\";",
                  "",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "",
                  "//Generating Random Email address to pass into the data so that user duplication does not happen",
                  "function makeEmail() {",
                  "  var strValues = \"qpotvghysbnxui56z\";",
                  "  var strEmail = \"\";",
                  "  var strTmp;",
                  "  for (var i = 0; i < 10; i++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strTmp = \"\";",
                  "  strEmail = strEmail + \"@\";",
                  "  for (var j = 0; j < 8; j++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strEmail = strEmail + \"esbpii.com\";",
                  "  return strEmail;",
                  "}",
                  "",
                  "",
                  "//Setting up the random email to an environment variable",
                  "postman.setEnvironmentVariable(\"Email\", makeEmail());",
                  "postman.setEnvironmentVariable(\"Email3\", environment.Email);",
                  "console.log(\"Email: \"+environment.Email);",
                  "",
                  "var firstName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);",
                  "",
                  "//Setting up the firstName to an environment variable",
                  "postman.setEnvironmentVariable(\"firstName\", firstName);",
                  "console.log(\"firstName: \"+environment.firstName);",
                  "",
                  "var lastName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 8);",
                  "",
                  "//Setting up the lastName to an environment variable",
                  "postman.setEnvironmentVariable(\"lastName\", lastName);",
                  "console.log(\"lastName: \"+environment.lastName);",
                  "",
                  "",
                  "//Incrementing and Setting up the memberID to an environment variable",
                  "// var memberIdNumber = parseInt(environment.memberIdNumber)+1;",
                  "var memberIdNumber = Date.now();",
                  "console.log(memberIdNumber);",
                  "postman.setEnvironmentVariable(\"memberIdNumber\", memberIdNumber);",
                  "postman.setEnvironmentVariable(\"memberID\", \"RA\"+memberIdNumber.toString());",
                  "postman.setEnvironmentVariable(\"memberID3\", environment.memberID);",
                  "console.log(\"memberID :\"+environment.memberID);",
                  ""
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
            },
            "description": ""
          },
          "response": [
            {
              "id": "02bf07aa-66fe-aa7e-c290-3fa54fabce11",
              "name": "error",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "key": "Connection",
                  "value": "Keep-Alive",
                  "name": "Connection",
                  "description": ""
                },
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "name": "Content-Type",
                  "description": ""
                },
                {
                  "key": "Date",
                  "value": "Wed, 14 Dec 2016 00:42:55 GMT",
                  "name": "Date",
                  "description": ""
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked",
                  "name": "Transfer-Encoding",
                  "description": ""
                },
                {
                  "key": "X-Backside-Transport",
                  "value": "OK OK",
                  "name": "X-Backside-Transport",
                  "description": ""
                },
                {
                  "key": "X-Client-IP",
                  "value": "10.61.38.184",
                  "name": "X-Client-IP",
                  "description": ""
                },
                {
                  "key": "X-Global-Transaction-ID",
                  "value": "348720",
                  "name": "X-Global-Transaction-ID",
                  "description": ""
                }
              ],
              "cookie": [],
              "responseTime": "1537",
              "body": "{\"response\":{}}"
            },
            {
              "id": "07f67c31-4911-91d3-4bb2-9c49b4f4d16a",
              "name": "response 2",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:07 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "237",
              "body": "{\"token\":\"a77eb61e-5dd3-4680-931e-49122ab21153\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "1065dd02-139c-df06-a719-c5e31aff46ab",
              "name": "response 1",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:13:56 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "215",
              "body": "{\"token\":\"39b8615a-307d-419f-a503-4d4fa6c7021d\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "b9bb8aef-4f5f-cd80-c622-ff6790860ecf",
              "name": "response 3",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:17 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "1830",
              "body": "{\"token\":\"1ed2d16e-9fc9-46ed-af8e-49e5b5207e79\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            }
          ]
        },
        {
          "_postman_id": "1f42e2d0-92f6-c3a5-0d09-8fd09a715ddf",
          "name": "Wait for enrolment to finish 3",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "{{password_ESB}}",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{testPackageURL}}/rest/restTestPackage.ws.sleep?seconds=200",
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {},
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "a8121cb0-8a7e-37e5-f6de-28f8b601b95d",
          "name": "RA-147 : Verifying user has been added to UMS and is InActive Status 2",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonObject = xml2Json(responseBody);\r",
                  "\r",
                  "try\r",
                  "{\r",
                  "    tests[\"Verifying that User status is Not Activated\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userStatus === \"I\";\r",
                  "    \r",
                  "    tests[\"Verifying that User ID is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userId === environment.Email ;\r",
                  "    \r",
                  "    tests[\"Verifying that Email is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.email === environment.Email ;\r",
                  "    \r",
                  "    tests[\"Verifying that First Name is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.givenName === environment.firstName ;\r",
                  "    \r",
                  "    tests[\"Verifying that Last name is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.surname === environment.lastName ;\r",
                  "    \r",
                  "    tests[\"Verifying that Member Type is as passed to UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.memberType === \"GROUP\" ;\r",
                  "    \r",
                  "    tests[\"Verifying that User Groups List is VITALITY_AWAITING_ACTIVATION\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userGroupsList === \"VITALITY_AWAITING_ACTIVATION\" ;\r",
                  "    \r",
                  "    \r",
                  "    //Setting up the token to an environment variable to be used in subsequent requests\r",
                  "    \r",
                  "    postman.setEnvironmentVariable(\"umsToken\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.token);\r",
                  "    \r",
                  "    postman.setEnvironmentVariable(\"aiaClientNumber\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaClientNumber);\r",
                  "    postman.setEnvironmentVariable(\"aiaVitalityMemberNumber\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaVitalityMemberNumber);\r",
                  "    postman.setEnvironmentVariable(\"aiaDsyPolicyNumber\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaDsyPolicyNumber);\r",
                  "    \r",
                  "    postman.setEnvironmentVariable(\"aiaVitalityId3\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaVitalityId);\r",
                  "}\r",
                  "\r",
                  "catch(err){\r",
                  "  tests[\"Data in response does not exist\"] = false;  \r",
                  "}\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "{{UmsURL}}/{{UMSContext}}/UsermanagementService",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "text/xml",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:ser=\"http://service.usermanagement.aiaa.com.au\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <ser:searchUserRequest>\n         <source>VITALITY</source>\n         <userType></userType>\n         <userDetails>\n            <userName></userName>\n            <userId></userId>\n            <userDN></userDN>\n            <email>{{Email}}</email>\n            <givenName></givenName>\n            <surname></surname>\n            <webChannel></webChannel>\n            <token></token>\n            <fundIdentifier></fundIdentifier>\n            <eligibilityAssessorEmail></eligibilityAssessorEmail>\n            <activationURL></activationURL>\n            <consentURL></consentURL>\n            <!--1 or more repetitions:-->\n            <userRolesList></userRolesList>\n            <title></title>\n            <dateOfBirth></dateOfBirth>\n            <gender></gender>\n            <addressLine1></addressLine1>\n            <addressLine2></addressLine2>\n            <suburb></suburb>\n            <state></state>\n            <postcode></postcode>\n            <country></country>\n            <mobilePhone></mobilePhone>\n            <workPhone></workPhone>\n            <homePhone></homePhone>\n            <fax></fax>\n            <isRetailLifeInsured></isRetailLifeInsured>\n            <passwordRequestDate></passwordRequestDate>\n            <password></password>\n            <passwordRequestCount></passwordRequestCount>\n            <aiaProposalNumber></aiaProposalNumber>\n            <aiaProposalWritingAdviser></aiaProposalWritingAdviser>\n            <aiaCCAppTnCAcceptedDate></aiaCCAppTnCAcceptedDate>\n            <aiaCCAppTnCVersion></aiaCCAppTnCVersion>\n            <!--1 or more repetitions:-->\n            <userGroupsList></userGroupsList>\n            <!--1 or more repetitions:-->\n            <userGroupsDNList></userGroupsDNList>\n            <memberType></memberType>\n            <residentialPostcode></residentialPostcode>\n            <userStatus></userStatus>\n            <aiaClientNumber></aiaClientNumber>\n            <aiaVitalityMemberNumber></aiaVitalityMemberNumber>\n            <aiaDsyPolicyNumber></aiaDsyPolicyNumber>\n            <aiaVitalityCobrandingInfo></aiaVitalityCobrandingInfo>\n         </userDetails>\n      </ser:searchUserRequest>\n   </soapenv:Body>\n</soapenv:Envelope>\n\n"
            },
            "description": "A/C:\r\nGiven that members activated their membership\r\nWhen ESB gets the action\r\nThen their membership will be activated in UMS"
          },
          "response": []
        },
        {
          "_postman_id": "32d870d5-f1c2-3ad1-af95-52fdac79e308",
          "name": "RA-228 : Mark For Termination - Bulk",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 \r",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;\r",
                  "try {\r",
                  "    var jsonData = JSON.parse(responseBody);\r",
                  "    tests[\"Verifying that the over all result is SUCCESS\"] = jsonData.response.status === \"success\";\r",
                  "    \r",
                  "    tests[\"Verifying that the appropriate MemberID is returned\"] = jsonData.response.member[0].memberId === environment.memberID1;\r",
                  "    tests[\"Verifying that the individual result is SUCCESS\"] = jsonData.response.member[0].status === \"success\";\r",
                  "    \r",
                  "    tests[\"Verifying that the appropriate MemberID is returned\"] = jsonData.response.member[1].memberId === environment.memberID2;\r",
                  "    tests[\"Verifying that the individual result is SUCCESS\"] = jsonData.response.member[1].status === \"success\";\r",
                  "    \r",
                  "    tests[\"Verifying that the appropriate MemberID is returned\"] = jsonData.response.member[2].memberId === environment.memberID3;\r",
                  "    tests[\"Verifying that the individual result is SUCCESS\"] = jsonData.response.member[2].status === \"success\";\r",
                  "} catch (err) {\r",
                  "    tests[\"Data in response does not exist\"] = false;\r",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipMaintenance.rs.termination.v1 ",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"relationshipName\": \"GRESTFUNDMEMBER\",\n  \"member\": [\n    {\n      \"memberId\": \"{{memberID1}}\"\n    },\n    {\n      \"memberId\": \"{{memberID2}}\"\n    },\n    {\n      \"memberId\": \"{{memberID3}}\"\n    }\n  ],\n  \"uuid\": \"{{$guid}}\"\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "179ae467-bbfd-8c6c-b376-fbd2a3f93cd1",
          "name": "Wait for Termination to finish",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{testPackageURL}}/rest/restTestPackage.ws.sleep?seconds=80",
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {},
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "d0456581-244f-35c5-9fe9-45359b71a841",
          "name": "RA-144: Verifying that all the PENDINGTERMIANTIONDATE is updated 1",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "//Verifing that the response time is less than the value declared in global  variable ",
                  "tests[\"Response time is less than \" + globals.responseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < globals.responseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "//console.log(environment.restMemberId+\"aiaPiiData\");",
                  "",
                  "try{",
                  "    tests[\"Verifying that Email in Core VMMP DB is as passed\"] = body.email === environment.Email1;",
                  "    tests[\"Verifying that the Member ID is matching\"] = body.memberships[0].nominationNo === environment.memberID1;",
                  "    tests[\"Verifying that Relationship Id in Core VMMP DB is as passed\"] = body.relationship.name === environment.relationshipName;",
                  "    ",
                  "    tests[\"Verifying that the pendingTerminationDate is updated\"] = body.memberships[0].pendingTerminationDate !== undefined;",
                  "    tests[\"Verifying that the status is still ACTIVATED\"] = body.memberships[0].status.name === \"ACTIVATED\";",
                  "}",
                  "catch(err){",
                  "    tests[\"Data does not exist\"] = false;",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{VmmpUrl}}/restapi-vitality-member-management-service/registration/members/{{Email1}}",
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"email\":\"{{Email}}\"} "
            },
            "description": "A/C :\n\nDup check passed:\nGiven that a record is of a unique member \nWhen dup check runs\nThen VMMP core table member's record will be updated with the member's details"
          },
          "response": []
        },
        {
          "_postman_id": "a485f607-94db-1f1f-930a-5e4233df4efd",
          "name": "RA-144: Verifying that all the PENDINGTERMIANTIONDATE is updated 2",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "//Verifing that the response time is less than the value declared in global  variable ",
                  "tests[\"Response time is less than \" + globals.responseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < globals.responseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "//console.log(environment.restMemberId+\"aiaPiiData\");",
                  "",
                  "try{",
                  "    tests[\"Verifying that Email in Core VMMP DB is as passed\"] = body.email === environment.Email2;",
                  "    tests[\"Verifying that the Member ID is matching\"] = body.memberships[0].nominationNo === environment.memberID2;",
                  "    tests[\"Verifying that Relationship Id in Core VMMP DB is as passed\"] = body.relationship.name === environment.relationshipName;",
                  "    ",
                  "    tests[\"Verifying that the pendingTerminationDate is updated\"] = body.memberships[0].pendingTerminationDate !== undefined;",
                  "    tests[\"Verifying that the status is still ACTIVATED\"] = body.memberships[0].status.name === \"AWAITING_ACTIVATION\";",
                  "}",
                  "catch(err){",
                  "    tests[\"Data does not exist\"] = false;",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{VmmpUrl}}/restapi-vitality-member-management-service/registration/members/{{Email2}}",
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"email\":\"{{Email}}\"} "
            },
            "description": "A/C :\n\nDup check passed:\nGiven that a record is of a unique member \nWhen dup check runs\nThen VMMP core table member's record will be updated with the member's details"
          },
          "response": []
        },
        {
          "_postman_id": "a7729e36-4306-d3c9-461b-4b35625e24e5",
          "name": "RA-144: Verifying that all the PENDINGTERMIANTIONDATE is updated 3",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "//Verifing that the response time is less than the value declared in global  variable ",
                  "tests[\"Response time is less than \" + globals.responseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < globals.responseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "//console.log(environment.restMemberId+\"aiaPiiData\");",
                  "",
                  "try{",
                  "    tests[\"Verifying that Email in Core VMMP DB is as passed\"] = body.email === environment.Email3;",
                  "    tests[\"Verifying that the Member ID is matching\"] = body.memberships[0].nominationNo === environment.memberID3;",
                  "    tests[\"Verifying that Relationship Id in Core VMMP DB is as passed\"] = body.relationship.name === environment.relationshipName;",
                  "    ",
                  "    tests[\"Verifying that the pendingTerminationDate is updated\"] = body.memberships[0].pendingTerminationDate !== undefined;",
                  "    tests[\"Verifying that the status is still ACTIVATED\"] = body.memberships[0].status.name === \"AWAITING_ACTIVATION\";",
                  "}",
                  "catch(err){",
                  "    tests[\"Data does not exist\"] = false;",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{VmmpUrl}}/restapi-vitality-member-management-service/registration/members/{{Email3}}",
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"email\":\"{{Email}}\"} "
            },
            "description": "A/C :\n\nDup check passed:\nGiven that a record is of a unique member \nWhen dup check runs\nThen VMMP core table member's record will be updated with the member's details"
          },
          "response": []
        },
        {
          "_postman_id": "49b21264-97a2-3f26-0061-99478d4e4d84",
          "name": "RA-267 : Cancel pending termination - Bulk",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 \r",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;\r",
                  "try {\r",
                  "    var jsonData = JSON.parse(responseBody);\r",
                  "    tests[\"Verifying that the over all result is SUCCESS\"] = jsonData.response.status === \"success\";\r",
                  "    \r",
                  "    tests[\"Verifying that the appropriate MemberID is returned\"] = jsonData.response.member[0].memberId === environment.memberID1;\r",
                  "    tests[\"Verifying that the individual result is SUCCESS\"] = jsonData.response.member[0].status === \"success\";\r",
                  "    \r",
                  "    tests[\"Verifying that the appropriate MemberID is returned\"] = jsonData.response.member[1].memberId === environment.memberID2;\r",
                  "    tests[\"Verifying that the individual result is SUCCESS\"] = jsonData.response.member[1].status === \"success\";\r",
                  "    \r",
                  "    tests[\"Verifying that the appropriate MemberID is returned\"] = jsonData.response.member[2].memberId === environment.memberID3;\r",
                  "    tests[\"Verifying that the individual result is SUCCESS\"] = jsonData.response.member[2].status === \"success\";\r",
                  "} catch (err) {\r",
                  "    tests[\"Data in response does not exist\"] = false;\r",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipMaintenance.rs.cancelTermination.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"relationshipName\": \"GRESTFUNDMEMBER\",\n  \"member\": [\n    {\n      \"memberId\": \"{{memberID1}}\"\n    },\n    {\n      \"memberId\": \"{{memberID2}}\"\n    },\n    {\n      \"memberId\": \"{{memberID3}}\"\n    }\n  ],\n  \"uuid\": \"{{$guid}}\"\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "f83af982-c135-c963-0a2d-2509bbb36c52",
          "name": "Wait for Cancel Termination to finish",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{testPackageURL}}/rest/restTestPackage.ws.sleep?seconds=80",
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {},
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "31369f08-8564-22bd-b3a4-e1fb8847f4e0",
          "name": "RA-144: Verifying that all the PENDINGTERMIANTIONDATE value is removed 1",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "//Verifing that the response time is less than the value declared in global  variable ",
                  "tests[\"Response time is less than \" + globals.responseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < globals.responseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "//console.log(environment.restMemberId+\"aiaPiiData\");",
                  "",
                  "try{",
                  "    tests[\"Verifying that Email in Core VMMP DB is as passed\"] = body.email === environment.Email1;",
                  "    // tests[\"Verifying that First Name in Core VMMP DB is as passed\"] = body.firstName === environment.firstName;",
                  "    // tests[\"Verifying that Last Name in Core VMMP DB is as passed\"] = body.lastName === environment.lastName;",
                  "    // tests[\"Verifying that Gender in Core VMMP DB is as passed\"] = body.gender === \"M\";",
                  "    // tests[\"Verifying that DOB in Core VMMP DB is as passed\"] = Date.create(body.dateOfBirth).is(Date.create(environment.vmmpDOB));",
                  "    // tests[\"Verifying that Relationship Id in Core VMMP DB is as passed\"] = body.relationship.name === environment.relationshipName;",
                  "    ",
                  "    tests[\"Verifying that the pendingTerminationDate is updated\"] = body.memberships[0].pendingTerminationDate === undefined;",
                  "    tests[\"Verifying that the status is still ACTIVATED\"] = body.memberships[0].status.name === \"ACTIVATED\";",
                  "}",
                  "catch(err){",
                  "    ",
                  "    tests[\"Data does not exist\"] = false;",
                  "}",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{VmmpUrl}}/restapi-vitality-member-management-service/registration/members/{{Email1}}",
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"email\":\"{{Email}}\"} "
            },
            "description": "A/C :\n\nDup check passed:\nGiven that a record is of a unique member \nWhen dup check runs\nThen VMMP core table member's record will be updated with the member's details"
          },
          "response": []
        },
        {
          "_postman_id": "d4bc3ce7-9be8-e4e1-e379-5926c9b5d747",
          "name": "RA-144: Verifying that all the PENDINGTERMIANTIONDATE value is removed 2",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "//Verifing that the response time is less than the value declared in global  variable ",
                  "tests[\"Response time is less than \" + globals.responseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < globals.responseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "//console.log(environment.restMemberId+\"aiaPiiData\");",
                  "",
                  "try{",
                  "    tests[\"Verifying that Email in Core VMMP DB is as passed\"] = body.email === environment.Email2;",
                  "    // tests[\"Verifying that First Name in Core VMMP DB is as passed\"] = body.firstName === environment.firstName;",
                  "    // tests[\"Verifying that Last Name in Core VMMP DB is as passed\"] = body.lastName === environment.lastName;",
                  "    // tests[\"Verifying that Gender in Core VMMP DB is as passed\"] = body.gender === \"M\";",
                  "    // tests[\"Verifying that DOB in Core VMMP DB is as passed\"] = Date.create(body.dateOfBirth).is(Date.create(environment.vmmpDOB));",
                  "    // tests[\"Verifying that Relationship Id in Core VMMP DB is as passed\"] = body.relationship.name === environment.relationshipName;",
                  "    ",
                  "    tests[\"Verifying that the pendingTerminationDate is updated\"] = body.memberships[0].pendingTerminationDate === undefined;",
                  "    tests[\"Verifying that the status is still AWAITING_ACTIVATION\"] = body.memberships[0].status.name === \"AWAITING_ACTIVATION\";",
                  "}",
                  "catch(err){",
                  "    ",
                  "    tests[\"Data does not exist\"] = false;",
                  "}",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{VmmpUrl}}/restapi-vitality-member-management-service/registration/members/{{Email2}}",
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"email\":\"{{Email}}\"} "
            },
            "description": "A/C :\n\nDup check passed:\nGiven that a record is of a unique member \nWhen dup check runs\nThen VMMP core table member's record will be updated with the member's details"
          },
          "response": []
        },
        {
          "_postman_id": "cff5566f-22f2-ef27-6b8d-76f0709eab12",
          "name": "RA-144: Verifying that all the PENDINGTERMIANTIONDATE value is removed 3",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "//Verifing that the response time is less than the value declared in global  variable ",
                  "tests[\"Response time is less than \" + globals.responseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < globals.responseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "//console.log(environment.restMemberId+\"aiaPiiData\");",
                  "",
                  "try{",
                  "    tests[\"Verifying that Email in Core VMMP DB is as passed\"] = body.email === environment.Email3;",
                  "    // tests[\"Verifying that First Name in Core VMMP DB is as passed\"] = body.firstName === environment.firstName;",
                  "    // tests[\"Verifying that Last Name in Core VMMP DB is as passed\"] = body.lastName === environment.lastName;",
                  "    // tests[\"Verifying that Gender in Core VMMP DB is as passed\"] = body.gender === \"M\";",
                  "    // tests[\"Verifying that DOB in Core VMMP DB is as passed\"] = Date.create(body.dateOfBirth).is(Date.create(environment.vmmpDOB));",
                  "    // tests[\"Verifying that Relationship Id in Core VMMP DB is as passed\"] = body.relationship.name === environment.relationshipName;",
                  "    ",
                  "    tests[\"Verifying that the pendingTerminationDate is updated\"] = body.memberships[0].pendingTerminationDate === undefined;",
                  "    tests[\"Verifying that the status is still AWAITING_ACTIVATION\"] = body.memberships[0].status.name === \"AWAITING_ACTIVATION\";",
                  "}",
                  "catch(err){",
                  "    ",
                  "    tests[\"Data does not exist\"] = false;",
                  "}",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{VmmpUrl}}/restapi-vitality-member-management-service/registration/members/{{Email3}}",
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"email\":\"{{Email}}\"} "
            },
            "description": "A/C :\n\nDup check passed:\nGiven that a record is of a unique member \nWhen dup check runs\nThen VMMP core table member's record will be updated with the member's details"
          },
          "response": []
        },
        {
          "_postman_id": "717db3ea-a689-e3fc-47fd-97d122efc87d",
          "name": "RA-144: Upating VMMP status to Terminated",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "var jsonData = JSON.parse(responseBody);",
                  "tests[\"Verifying that the status of the member has been updated to AWAITING ACTIVATION\"] = jsonData.memberships[0].status.name === \"TERMINATED\";"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var aiaClientNumber = (Math.random()*100000000000000000).toString().substr(0,4);",
                  "postman.setEnvironmentVariable(\"aiaClientNumber\",aiaClientNumber);",
                  "",
                  "var aiaVitalityMemberNumber = (Math.random()*100000000000000000).toString().substr(0,5);",
                  "postman.setEnvironmentVariable(\"aiaVitalityMemberNumber\",aiaVitalityMemberNumber);",
                  "",
                  "var aiaDsyPolicyNumber = (Math.random()*100000000000000000).toString().substr(0,6);",
                  "postman.setEnvironmentVariable(\"aiaDsyPolicyNumber\",aiaDsyPolicyNumber);",
                  "",
                  "var aiaVitalityId = (Math.random()*100000000000000000).toString().substr(0,7);",
                  "postman.setEnvironmentVariable(\"aiaVitalityId\",aiaVitalityId);",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "{{VmmpUrl}}/{{VMMPContext}}/registration/members/{{Email}}",
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"status\" : \"TERMINATED\",\r\n  \"failureReason\" : null\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "d5e177b3-86dd-26f7-93d3-61d578eb563c",
          "name": "RA-228 : Mark For Termination - Member already Terminated",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "try {",
                  "    var jsonData = JSON.parse(responseBody);",
                  "",
                  "    tests[\"Verifying that the over all result is SUCCESS\"] = jsonData.response.status === \"success\";",
                  "    tests[\"Verifying that the appropriate MemberID is returned\"] = jsonData.response.member[0].memberId === environment.memberID;",
                  "    tests[\"Verifying that the individual result is FAILURE\"] = jsonData.response.member[0].status === \"failure\";",
                  "    tests[\"Verifying that the reason is 'NO_ACTIVE_MEMBERSHIP'\"] = jsonData.response.member[0].reason === \"NO_ACTIVE_MEMBERSHIP\";",
                  "} catch (err) {",
                  "    tests[\"Data in response does not exist\"] = false;",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipMaintenance.rs.termination.v1 ",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"relationshipName\":\"GRESTFUNDMEMBER\",\r\n   \"member\":[\r\n      {\r\n         \"memberId\":\"{{memberID}}\"\r\n      }\r\n   ],\r\n   \"uuid\":\"{{$guid}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "003dc002-c501-10c3-1652-9de4929d1e72",
          "name": "RA-228 : Mark For Termination - Invalid Member ID",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "try {",
                  "    var jsonData = JSON.parse(responseBody);",
                  "",
                  "    tests[\"Verifying that the over all result is SUCCESS\"] = jsonData.response.status === \"success\";",
                  "    tests[\"Verifying that the appropriate MemberID is returned\"] = jsonData.response.member[0].memberId === \"SomeDummyMemberID\";",
                  "    tests[\"Verifying that the individual result is FAILURE\"] = jsonData.response.member[0].status === \"failure\";",
                  "    tests[\"Verifying that the reason is'User not found'\"] = jsonData.response.member[0].reason === \"User not found\";",
                  "} catch (err) {",
                  "    tests[\"Data in response does not exist\"] = false;",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipMaintenance.rs.termination.v1 ",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"relationshipName\":\"GRESTFUNDMEMBER\",\r\n   \"member\":[\r\n      {\r\n         \"memberId\":\"SomeDummyMemberID\"\r\n      }\r\n   ],\r\n   \"uuid\":\"{{$guid}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "92e47e16-0aff-a94a-7a76-ecd1073662d5",
          "name": "RA-228 : Mark For Termination - Invalid Relationship Name",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "try {",
                  "    var jsonData = JSON.parse(responseBody);",
                  "",
                  "    tests[\"Verifying that the over all result is SUCCESS\"] = jsonData.response.status === \"success\";",
                  "    tests[\"Verifying that the appropriate MemberID is returned\"] = jsonData.response.member[0].memberId === environment.memberID;",
                  "    tests[\"Verifying that the individual result is FAILURE\"] = jsonData.response.member[0].status === \"failure\";",
                  "    tests[\"Verifying that the reason is'INVALID_RELATIONSHIP'\"] = jsonData.response.member[0].reason === \"INVALID_RELATIONSHIP\";",
                  "} catch (err) {",
                  "    tests[\"Data in response does not exist\"] = false;",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipMaintenance.rs.termination.v1 ",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"relationshipName\":\"NotARelationship\",\r\n   \"member\":[\r\n      {\r\n         \"memberId\":\"{{memberID}}\"\r\n      }\r\n   ],\r\n   \"uuid\":\"{{$guid}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "95f22f08-3bd6-bea8-7f13-b66351114d64",
          "name": "RA-228 : Mark For Termination - Member ID is NULL",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "try {",
                  "    var jsonData = JSON.parse(responseBody);",
                  "",
                  "    tests[\"Verifying that the over all result is SUCCESS\"] = jsonData.response.status === \"success\";",
                  "    tests[\"Verifying that the appropriate MemberID is returned\"] = jsonData.response.member[0].memberId === null;",
                  "    tests[\"Verifying that the individual result is FAILURE\"] = jsonData.response.member[0].status === \"failure\";",
                  "    tests[\"Verifying that the reason is 'User not found'\"] = jsonData.response.member[0].reason === \"User not found\";",
                  "} catch (err) {",
                  "    tests[\"Data in response does not exist\"] = false;",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipMaintenance.rs.termination.v1 ",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"relationshipName\":\"GRESTFUNDMEMBER\",\r\n   \"member\":[\r\n      {\r\n         \"memberId\":null\r\n      }\r\n   ],\r\n   \"uuid\":\"{{$guid}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "e62ab051-faff-9b07-15db-ddf51fa3b76a",
          "name": "RA-228 : Mark For Termination - Relationship Name is NULL",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "try {",
                  "    var jsonData = JSON.parse(responseBody);",
                  "",
                  "    tests[\"Verifying that the over all result is SUCCESS\"] = jsonData.response.status === \"success\";",
                  "    tests[\"Verifying that the appropriate MemberID is returned\"] = jsonData.response.member[0].memberId === environment.memberID;",
                  "    tests[\"Verifying that the individual result is FAILURE\"] = jsonData.response.member[0].status === \"failure\";",
                  "    tests[\"Verifying that the reason is'No Relationship Name provided'\"] = jsonData.response.member[0].reason === \"No Relationship Name provided\";",
                  "} catch (err) {",
                  "    tests[\"Data in response does not exist\"] = false;",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipMaintenance.rs.termination.v1 ",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"relationshipName\":null,\r\n   \"member\":[\r\n      {\r\n         \"memberId\":\"{{memberID}}\"\r\n      }\r\n   ],\r\n   \"uuid\":\"{{$guid}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "4ebcd59f-c37b-4e9f-4d55-dc6d615d37fe",
          "name": "RA-228 : Mark For Termination - Invalid Member ID and Relationship Name",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "try {",
                  "    var jsonData = JSON.parse(responseBody);",
                  "",
                  "    tests[\"Verifying that the over all result is SUCCESS\"] = jsonData.response.status === \"success\";",
                  "    tests[\"Verifying that the appropriate MemberID is returned\"] = jsonData.response.member[0].memberId === null;",
                  "    tests[\"Verifying that the individual result is FAILURE\"] = jsonData.response.member[0].status === \"failure\";",
                  "    tests[\"Verifying that the reason is'No Relationship Name provided'\"] = jsonData.response.member[0].reason === \"No Relationship Name provided\";",
                  "} catch (err) {",
                  "    tests[\"Data in response does not exist\"] = false;",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipMaintenance.rs.termination.v1 ",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"relationshipName\":null,\r\n   \"member\":[\r\n      {\r\n         \"memberId\":null\r\n      }\r\n   ],\r\n   \"uuid\":\"{{$guid}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "a8c8fd06-426f-2b43-2d0d-4c9752c9c874",
          "name": "RA-267 : Cancel pending termination - Invalid Member ID",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "try {",
                  "    var jsonData = JSON.parse(responseBody);",
                  "",
                  "    tests[\"Verifying that the over all result is SUCCESS\"] = jsonData.response.status === \"success\";",
                  "    tests[\"Verifying that the appropriate MemberID is returned\"] = jsonData.response.member[0].memberId === \"SomeDummyMemberID\";",
                  "    tests[\"Verifying that the individual result is FAILURE\"] = jsonData.response.member[0].status === \"failure\";",
                  "    tests[\"Verifying that the reason is'User not found'\"] = jsonData.response.member[0].reason === \"User not found\";",
                  "} catch (err) {",
                  "    tests[\"Data in response does not exist\"] = false;",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipMaintenance.rs.cancelTermination.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"relationshipName\":\"GRESTFUNDMEMBER\",\r\n   \"member\":[\r\n      {\r\n         \"memberId\":\"SomeDummyMemberID\"\r\n      }\r\n   ],\r\n   \"uuid\":\"{{$guid}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "97d82cd6-69df-4423-f1d6-dedd7e7d42ee",
          "name": "RA-267 : Cancel pending termination - Invalid Relationship Name",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "try {",
                  "    var jsonData = JSON.parse(responseBody);",
                  "",
                  "    tests[\"Verifying that the over all result is SUCCESS\"] = jsonData.response.status === \"success\";",
                  "    tests[\"Verifying that the appropriate MemberID is returned\"] = jsonData.response.member[0].memberId === environment.memberID;",
                  "    tests[\"Verifying that the individual result is FAILURE\"] = jsonData.response.member[0].status === \"failure\";",
                  "    tests[\"Verifying that the reason is'INVALID_RELATIONSHIP'\"] = jsonData.response.member[0].reason === \"INVALID_RELATIONSHIP\";",
                  "} catch (err) {",
                  "    tests[\"Data in response does not exist\"] = false;",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipMaintenance.rs.cancelTermination.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"relationshipName\":\"NotARelationship\",\r\n   \"member\":[\r\n      {\r\n         \"memberId\":\"{{memberID}}\"\r\n      }\r\n   ],\r\n   \"uuid\":\"{{$guid}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "47c537af-c38d-f1f0-0be5-0c737ea8aba5",
          "name": "RA-267 : Cancel pending termination - Member ID is NULL",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "try {",
                  "    var jsonData = JSON.parse(responseBody);",
                  "",
                  "    tests[\"Verifying that the over all result is SUCCESS\"] = jsonData.response.status === \"success\";",
                  "    tests[\"Verifying that the appropriate MemberID is returned\"] = jsonData.response.member[0].memberId === null;",
                  "    tests[\"Verifying that the individual result is FAILURE\"] = jsonData.response.member[0].status === \"failure\";",
                  "    tests[\"Verifying that the reason is 'User not found'\"] = jsonData.response.member[0].reason === \"User not found\";",
                  "} catch (err) {",
                  "    tests[\"Data in response does not exist\"] = false;",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipMaintenance.rs.cancelTermination.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"relationshipName\":\"GRESTFUNDMEMBER\",\r\n   \"member\":[\r\n      {\r\n         \"memberId\":null\r\n      }\r\n   ],\r\n   \"uuid\":\"{{$guid}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "0a0293b3-be70-ac88-1c55-f618b58672d3",
          "name": "RA-267 : Cancel pending termination - Relationship Name is NULL",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "try {",
                  "    var jsonData = JSON.parse(responseBody);",
                  "",
                  "    tests[\"Verifying that the over all result is SUCCESS\"] = jsonData.response.status === \"success\";",
                  "    tests[\"Verifying that the appropriate MemberID is returned\"] = jsonData.response.member[0].memberId === environment.memberID;",
                  "    tests[\"Verifying that the individual result is FAILURE\"] = jsonData.response.member[0].status === \"failure\";",
                  "    tests[\"Verifying that the reason is'No Relationship Name provided'\"] = jsonData.response.member[0].reason === \"No Relationship Name provided\";",
                  "} catch (err) {",
                  "    tests[\"Data in response does not exist\"] = false;",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipMaintenance.rs.cancelTermination.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"relationshipName\":null,\r\n   \"member\":[\r\n      {\r\n         \"memberId\":\"{{memberID}}\"\r\n      }\r\n   ],\r\n   \"uuid\":\"{{$guid}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "2b817393-f567-de5c-5476-626868223aca",
          "name": "RA-267 : Cancel pending termination - Invalid Member ID and Relationship Name",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "try {",
                  "    var jsonData = JSON.parse(responseBody);",
                  "",
                  "    tests[\"Verifying that the over all result is SUCCESS\"] = jsonData.response.status === \"success\";",
                  "    tests[\"Verifying that the appropriate MemberID is returned\"] = jsonData.response.member[0].memberId === null;",
                  "    tests[\"Verifying that the individual result is FAILURE\"] = jsonData.response.member[0].status === \"failure\";",
                  "    tests[\"Verifying that the reason is'No Relationship Name provided'\"] = jsonData.response.member[0].reason === \"No Relationship Name provided\";",
                  "} catch (err) {",
                  "    tests[\"Data in response does not exist\"] = false;",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipMaintenance.rs.cancelTermination.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"relationshipName\":null,\r\n   \"member\":[\r\n      {\r\n         \"memberId\":null\r\n      }\r\n   ],\r\n   \"uuid\":\"{{$guid}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "464f7bc4-245a-5ee2-c2f8-94029757ccfb",
          "name": "RA-267 : Cancel pending termination - Member already Terminated",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "try {",
                  "    var jsonData = JSON.parse(responseBody);",
                  "",
                  "    tests[\"Verifying that the over all result is SUCCESS\"] = jsonData.response.status === \"success\";",
                  "    tests[\"Verifying that the appropriate MemberID is returned\"] = jsonData.response.member[0].memberId === environment.memberID;",
                  "    tests[\"Verifying that the individual result is FAILURE\"] = jsonData.response.member[0].status === \"failure\";",
                  "    tests[\"Verifying that the reason is'NO_ACTIVE_MEMBERSHIP'\"] = jsonData.response.member[0].reason === \"NO_ACTIVE_MEMBERSHIP\";",
                  "} catch (err) {",
                  "    tests[\"Data in response does not exist\"] = false;",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipMaintenance.rs.cancelTermination.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"relationshipName\":\"GRESTFUNDMEMBER\",\r\n   \"member\":[\r\n      {\r\n         \"memberId\":\"{{memberID}}\"\r\n      }\r\n   ],\r\n   \"uuid\":\"{{$guid}}\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "fb44e27c-00ed-47d3-44c6-ed8e51b06ab0",
          "name": "RA-249 : ESB API - Request to update details of members in bulk with VALID and INVALID member details",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Setting up the firstName to an environment variable",
                  "var firstName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);",
                  "postman.setEnvironmentVariable(\"firstName\", firstName);",
                  "",
                  "//Setting up the lastName to an environment variable",
                  "var lastName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 8);",
                  "postman.setEnvironmentVariable(\"lastName\", lastName);",
                  "",
                  "var mobileNumber = \"0\"+((Math.random()*10000000000).toString().substr(0,9));",
                  "postman.setEnvironmentVariable(\"mobileNumber\", mobileNumber);",
                  "console.log(environment.mobileNumber);",
                  "",
                  "var homeNumber = \"0\"+((Math.random()*10000000000).toString().substr(0,9));",
                  "postman.setEnvironmentVariable(\"homeNumber\", homeNumber);",
                  "console.log(environment.homeNumber);",
                  "",
                  "var workNumber = \"0\"+((Math.random()*10000000000).toString().substr(0,9));",
                  "postman.setEnvironmentVariable(\"workNumber\", workNumber);",
                  "console.log(environment.workNumber);"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipMaintenance.rs.updateMemberInfo.v1",
            "method": "PUT",
            "header": [
              {
                "key": "cache-control",
                "value": "no-cache",
                "description": ""
              },
              {
                "key": "content-type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "postman-token",
                "value": "840692de-45a7-79c0-1e80-679ec3312e9e",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"members\": [\n    {\n      \"member\": {\n        \"title\": \"Ms\",\n        \"firstName\": \"{{firstName}}\",\n        \"lastName\": \"{{lastName}}\",\n        \"gender\": \"F\",\n        \"dateOfBirth\": \"07/12/1970\",\n        \"email\": \"{{Email}}\",\n        \"memberId\": \"{{memberID}}\",\n        \"address\": {\n          \"line1\": \"{{memberIdNumber}} {{firstName}} New Test Street\",\n          \"line2\": \"{{lastName}} Line 2\",\n          \"suburb\": \"Sydney\",\n          \"state\": \"NSW\",\n          \"country\": \"Australia\",\n          \"postcode\": \"2000\"\n        },\n        \"phone\": {\n          \"mobileNumber\": \"{{mobileNumber}}\",\n          \"homeNumber\": \"{{homeNumber}}\",\n          \"workNumber\": \"{{workNumber}}\"\n        }\n      }\n    },\n    {\n      \"member\": {\n        \"title\": \"Ms\",\n        \"firstName\": \"{{firstName}}\",\n        \"lastName\": \"{{lastName}}\",\n        \"gender\": \"F\",\n        \"dateOfBirth\": \"07/12/1970\",\n        \"email\": \"{{Email}}\",\n        \"memberId\": \"{{memberID2}}\",\n        \"address\": {\n          \"line1\": \"{{memberIdNumber}} {{firstName}} New Test Street\",\n          \"line2\": \"{{lastName}} Line 2\",\n          \"suburb\": \"Sydney\",\n          \"state\": \"NSWW\",\n          \"country\": \"Australia\",\n          \"postcode\": \"2000\"\n        },\n        \"phone\": {\n          \"mobileNumber\": \"{{mobileNumber}}\",\n          \"homeNumber\": \"{{homeNumber}}\",\n          \"workNumber\": \"{{workNumber}}\"\n        }\n      }\n    },\n    {\n      \"member\": {\n        \"title\": \"Ms\",\n        \"firstName\": \"{{firstName}}\",\n        \"lastName\": \"{{lastName}}\",\n        \"gender\": \"F\",\n        \"dateOfBirth\": \"07/12/1970\",\n        \"email\": \"{{Email}}\",\n        \"memberId\": \"{{memberID2}}\",\n        \"address\": {\n          \"line1\": \"{{memberIdNumber}} {{firstName}} New Test Street\",\n          \"line2\": \"{{lastName}} Line 2\",\n          \"suburb\": \"Sydney\",\n          \"state\": \"NSWW\",\n          \"country\": \"Australia\",\n          \"postcode\": \"2000\"\n        },\n        \"phone\": {\n          \"mobileNumber\": \"{{mobileNumber}}\",\n          \"homeNumber\": \"{{homeNumber}}\",\n          \"workNumber\": \"{{workNumber}}\"\n        }\n      }\n    }\n  ],\n  \"relationshipName\": \"GRESTFUNDMEMBER\",\n  \"uuid\": \"{{$guid}}\"\n}"
            },
            "description": "Generated from a curl request: \ncurl -X PUT \\\n  http://aaiwklt021512.aia.biz:5555/rest/aiaVitalityMembershipMaintenance.rs.updateMemberInfo.v1 \\\n  -H 'authorization: Basic QWRtaW5pc3RyYXRvcjoxUDF0eXRoMw==' \\\n  -H 'cache-control: no-cache' \\\n  -H 'content-type: application/json' \\\n  -H 'postman-token: 840692de-45a7-79c0-1e80-679ec3312e9e' \\\n  -d '{\n\t\\\"members\\\":[\n\t\t{\n\t\t\t\\\"member\\\":{\n\t\t\t\t\\\"title\\\":\\\"Mr\\\",\n\t\t\t\t\\\"firstName\\\":\\\"Charlie\\\",\n    \t\t\t\\\"lastName\\\":\\\"Chaplin\\\",\n    \t\t\t\\\"gender\\\":\\\"M\\\",\n    \t\t\t\\\"dateOfBirth\\\":\\\"07/12/1970\\\",\n    \t\t\t\\\"email\\\":\\\"tst1357426917@hotmail.com\\\",\n    \t\t\t\\\"memberId\\\":\\\"TESTNOM1357426917\\\",\n    \t\t\t\\\"address\\\":{\n    \t\t\t\t\\\"line1\\\":\\\"Drewrey Lane\\\",\n    \t\t\t\t\\\"line2\\\":\\\"\\\",\n    \t\t\t\t\\\"suburb\\\":\\\"London\\\",\n    \t\t\t\t\\\"state\\\":\\\"VIC\\\",\n    \t\t\t\t\\\"country\\\":\\\"Australia\\\",\n    \t\t\t\t\\\"postcode\\\":\\\"3000\\\"\n    \t\t\t},\n    \t\t\t\\\"phone\\\":{\n    \t\t\t\t\\\"mobileNumber\\\":\\\"0404040404\\\",\n    \t\t\t\t\\\"homeNumber\\\":\\\"0288911783\\\",\n    \t\t\t\t\\\"workNumber\\\":\\\"0288944513\\\"\n    \t\t\t}\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\\\"member\\\":{\n\t\t\t\t\\\"title\\\":\\\"Mr\\\",\n\t\t\t\t\\\"firstName\\\":\\\"Fred\\\",\n    \t\t\t\\\"lastName\\\":\\\"Lucy\\\",\n    \t\t\t\\\"gender\\\":\\\"M\\\",\n    \t\t\t\\\"dateOfBirth\\\":\\\"01/04/1986\\\",\n    \t\t\t\\\"memberId\\\":\\\"TESTNOM200940062\\\",\n    \t\t\t\\\"phone\\\":{\n    \t\t\t\t\\\"mobileNumber\\\":\\\"0400000000\\\",\n    \t\t\t\t\\\"homeNumber\\\":\\\"0213456789\\\",\n    \t\t\t\t\\\"workNumber\\\":\\\"0298765431\\\"\n    \t\t\t}\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\\\"member\\\":{\n\t\t\t\t\\\"title\\\":\\\"Mr\\\",\n\t\t\t\t\\\"firstName\\\":\\\"Dianne\\\",\n    \t\t\t\\\"lastName\\\":\\\"Gray\\\",\n    \t\t\t\\\"gender\\\":\\\"M\\\",\n    \t\t\t\\\"dateOfBirth\\\":\\\"08/13/1970\\\",\n    \t\t\t\\\"memberId\\\":\\\"TESTNOM14449914\\\",\n    \t\t\t\\\"address\\\":{\n    \t\t\t\t\\\"line1\\\":\\\"Changed Line1\\\",\n    \t\t\t\t\\\"line2\\\":\\\"Changed Line2\\\",\n    \t\t\t\t\\\"suburb\\\":\\\"Changed Suburb\\\",\n    \t\t\t\t\\\"state\\\":\\\"VIC\\\",\n    \t\t\t\t\\\"country\\\":\\\"Australia\\\",\n    \t\t\t\t\\\"postcode\\\":\\\"3100\\\"\n    \t\t\t},\n    \t\t\t\\\"phone\\\":{\n    \t\t\t\t\\\"mobileNumber\\\":\\\"0404040404\\\",\n    \t\t\t\t\\\"homeNumber\\\":\\\"0288911783\\\",\n    \t\t\t\t\\\"workNumber\\\":\\\"0288944513\\\"\n    \t\t\t}\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\\\"member\\\":{\n\t\t\t\t\\\"title\\\":\\\"Mr\\\",\n\t\t\t\t\\\"firstName\\\":\\\"Ge0rge\\\",\n    \t\t\t\\\"lastName\\\":\\\"Lucas\\\",\n    \t\t\t\\\"gender\\\":\\\"M\\\",\n    \t\t\t\\\"dateOfBirth\\\":\\\"08/13/1970\\\",\n    \t\t\t\\\"memberId\\\":\\\"TESTNOM-828628027\\\",\n    \t\t\t\\\"address\\\":{\n    \t\t\t\t\\\"line1\\\":\\\"Changed Line1\\\",\n    \t\t\t\t\\\"line2\\\":\\\"Changed Line2\\\",\n    \t\t\t\t\\\"suburb\\\":\\\"Changed Suburb\\\",\n    \t\t\t\t\\\"state\\\":\\\"VIC\\\",\n    \t\t\t\t\\\"country\\\":\\\"Australia\\\",\n    \t\t\t\t\\\"postcode\\\":\\\"3100\\\"\n    \t\t\t},\n    \t\t\t\\\"phone\\\":{\n    \t\t\t\t\\\"mobileNumber\\\":\\\"0404040404\\\",\n    \t\t\t\t\\\"homeNumber\\\":\\\"0288911783\\\",\n    \t\t\t\t\\\"workNumber\\\":\\\"0288944513\\\"\n    \t\t\t}\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\\\"member\\\":{\n\t\t\t\t\\\"title\\\":\\\"Mr\\\",\n\t\t\t\t\\\"firstName\\\":\\\"George\\\",\n    \t\t\t\\\"lastName\\\":\\\"Lucas\\\",\n    \t\t\t\\\"gender\\\":\\\"M\\\",\n    \t\t\t\\\"dateOfBirth\\\":\\\"08/13/1970\\\",\n    \t\t\t\\\"memberId\\\":\\\"TESTNOM1237596314\\\",\n    \t\t\t\\\"address\\\":{\n    \t\t\t\t\\\"line1\\\":\\\"Changed Line1\\\",\n    \t\t\t\t\\\"line2\\\":\\\"Changed Line2\\\",\n    \t\t\t\t\\\"suburb\\\":\\\"Changed Suburb\\\",\n    \t\t\t\t\\\"state\\\":\\\"VIC\\\",\n    \t\t\t\t\\\"country\\\":\\\"Australia\\\",\n    \t\t\t\t\\\"postcode\\\":\\\"3100\\\"\n    \t\t\t},\n    \t\t\t\\\"phone\\\":{\n    \t\t\t\t\\\"mobileNumber\\\":\\\"0404040404\\\",\n    \t\t\t\t\\\"homeNumber\\\":\\\"0288911783\\\",\n    \t\t\t\t\\\"workNumber\\\":\\\"0288944513\\\"\n    \t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t],\n\t\\\"relationshipName\\\": \\\"GRESTFUNDMEMBER\\\",\n\t\\\"uuid\\\":\\\"599f9790-5c4f-13d4-8dd1-ffffffbaabca\\\"\n}'"
          },
          "response": []
        },
        {
          "_postman_id": "86cbae59-f655-f223-816c-d41460f1cd66",
          "name": "RA-249 : ESB - Request to update details of a member in ACTIVATED status",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "try {",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    // tests[\"Verifying that the overall result is SUCCESS\"] = jsonData.result === \"SUCCESS\";",
                  "    // tests[\"Verifying that the individual result is SUCCESS\"] = jsonData.responses[0].result === \"SUCCESS\";",
                  "    tests[\"Verifying that the appropriate MemberID is returned\"] = jsonData.memberUpdateSuccess[0].memberId === environment.memberID;",
                  "    // tests[\"Verifying that the appropriate Relationship Name is returned\"] = jsonData.responses[0].relationshipName === environment.relationshipName;",
                  "} catch (err) {",
                  "    tests[\"Data in response does not exist\"] = false;",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Setting up the firstName to an environment variable",
                  "var firstName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);",
                  "postman.setEnvironmentVariable(\"firstName\", firstName);",
                  "",
                  "//Setting up the lastName to an environment variable",
                  "var lastName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 8);",
                  "postman.setEnvironmentVariable(\"lastName\", lastName);",
                  "",
                  "var mobileNumber = \"0\"+((Math.random()*10000000000).toString().substr(0,9));",
                  "postman.setEnvironmentVariable(\"mobileNumber\", mobileNumber);",
                  "console.log(environment.mobileNumber);",
                  "",
                  "var homeNumber = \"0\"+((Math.random()*10000000000).toString().substr(0,9));",
                  "postman.setEnvironmentVariable(\"homeNumber\", homeNumber);",
                  "console.log(environment.homeNumber);",
                  "",
                  "var workNumber = \"0\"+((Math.random()*10000000000).toString().substr(0,9));",
                  "postman.setEnvironmentVariable(\"workNumber\", workNumber);",
                  "console.log(environment.workNumber);"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipMaintenance.rs.updateMemberInfo.v1",
            "method": "PUT",
            "header": [
              {
                "key": "cache-control",
                "value": "no-cache",
                "description": ""
              },
              {
                "key": "content-type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "postman-token",
                "value": "840692de-45a7-79c0-1e80-679ec3312e9e",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"members\": [\n    {\n      \"member\": {\n        \"title\": \"Ms\",\n        \"firstName\": \"{{firstName}}\",\n        \"lastName\": \"{{lastName}}\",\n        \"gender\": \"F\",\n        \"dateOfBirth\": \"07/12/1970\",\n        \"email\": null,\n        \"memberId\": \"{{memberID}}\",\n        \"address\": {\n          \"line1\": \"{{memberIdNumber}} {{firstName}} New Test Street\",\n          \"line2\": \"{{lastName}} Line 2\",\n          \"suburb\": \"Sydney\",\n          \"state\": \"NSW\",\n          \"country\": \"Australia\",\n          \"postcode\": \"2000\"\n        },\n        \"phone\": {\n          \"mobileNumber\": \"{{mobileNumber}}\",\n          \"homeNumber\": \"{{homeNumber}}\",\n          \"workNumber\": \"{{workNumber}}\"\n        }\n      }\n    }\n  ],\n  \"relationshipName\": \"GRESTFUNDMEMBER\",\n  \"uuid\": \"{{$guid}}\"\n}"
            },
            "description": "Generated from a curl request: \ncurl -X PUT \\\n  http://aaiwklt021512.aia.biz:5555/rest/aiaVitalityMembershipMaintenance.rs.updateMemberInfo.v1 \\\n  -H 'authorization: Basic QWRtaW5pc3RyYXRvcjoxUDF0eXRoMw==' \\\n  -H 'cache-control: no-cache' \\\n  -H 'content-type: application/json' \\\n  -H 'postman-token: 840692de-45a7-79c0-1e80-679ec3312e9e' \\\n  -d '{\n\t\\\"members\\\":[\n\t\t{\n\t\t\t\\\"member\\\":{\n\t\t\t\t\\\"title\\\":\\\"Mr\\\",\n\t\t\t\t\\\"firstName\\\":\\\"Charlie\\\",\n    \t\t\t\\\"lastName\\\":\\\"Chaplin\\\",\n    \t\t\t\\\"gender\\\":\\\"M\\\",\n    \t\t\t\\\"dateOfBirth\\\":\\\"07/12/1970\\\",\n    \t\t\t\\\"email\\\":\\\"tst1357426917@hotmail.com\\\",\n    \t\t\t\\\"memberId\\\":\\\"TESTNOM1357426917\\\",\n    \t\t\t\\\"address\\\":{\n    \t\t\t\t\\\"line1\\\":\\\"Drewrey Lane\\\",\n    \t\t\t\t\\\"line2\\\":\\\"\\\",\n    \t\t\t\t\\\"suburb\\\":\\\"London\\\",\n    \t\t\t\t\\\"state\\\":\\\"VIC\\\",\n    \t\t\t\t\\\"country\\\":\\\"Australia\\\",\n    \t\t\t\t\\\"postcode\\\":\\\"3000\\\"\n    \t\t\t},\n    \t\t\t\\\"phone\\\":{\n    \t\t\t\t\\\"mobileNumber\\\":\\\"0404040404\\\",\n    \t\t\t\t\\\"homeNumber\\\":\\\"0288911783\\\",\n    \t\t\t\t\\\"workNumber\\\":\\\"0288944513\\\"\n    \t\t\t}\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\\\"member\\\":{\n\t\t\t\t\\\"title\\\":\\\"Mr\\\",\n\t\t\t\t\\\"firstName\\\":\\\"Fred\\\",\n    \t\t\t\\\"lastName\\\":\\\"Lucy\\\",\n    \t\t\t\\\"gender\\\":\\\"M\\\",\n    \t\t\t\\\"dateOfBirth\\\":\\\"01/04/1986\\\",\n    \t\t\t\\\"memberId\\\":\\\"TESTNOM200940062\\\",\n    \t\t\t\\\"phone\\\":{\n    \t\t\t\t\\\"mobileNumber\\\":\\\"0400000000\\\",\n    \t\t\t\t\\\"homeNumber\\\":\\\"0213456789\\\",\n    \t\t\t\t\\\"workNumber\\\":\\\"0298765431\\\"\n    \t\t\t}\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\\\"member\\\":{\n\t\t\t\t\\\"title\\\":\\\"Mr\\\",\n\t\t\t\t\\\"firstName\\\":\\\"Dianne\\\",\n    \t\t\t\\\"lastName\\\":\\\"Gray\\\",\n    \t\t\t\\\"gender\\\":\\\"M\\\",\n    \t\t\t\\\"dateOfBirth\\\":\\\"08/13/1970\\\",\n    \t\t\t\\\"memberId\\\":\\\"TESTNOM14449914\\\",\n    \t\t\t\\\"address\\\":{\n    \t\t\t\t\\\"line1\\\":\\\"Changed Line1\\\",\n    \t\t\t\t\\\"line2\\\":\\\"Changed Line2\\\",\n    \t\t\t\t\\\"suburb\\\":\\\"Changed Suburb\\\",\n    \t\t\t\t\\\"state\\\":\\\"VIC\\\",\n    \t\t\t\t\\\"country\\\":\\\"Australia\\\",\n    \t\t\t\t\\\"postcode\\\":\\\"3100\\\"\n    \t\t\t},\n    \t\t\t\\\"phone\\\":{\n    \t\t\t\t\\\"mobileNumber\\\":\\\"0404040404\\\",\n    \t\t\t\t\\\"homeNumber\\\":\\\"0288911783\\\",\n    \t\t\t\t\\\"workNumber\\\":\\\"0288944513\\\"\n    \t\t\t}\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\\\"member\\\":{\n\t\t\t\t\\\"title\\\":\\\"Mr\\\",\n\t\t\t\t\\\"firstName\\\":\\\"Ge0rge\\\",\n    \t\t\t\\\"lastName\\\":\\\"Lucas\\\",\n    \t\t\t\\\"gender\\\":\\\"M\\\",\n    \t\t\t\\\"dateOfBirth\\\":\\\"08/13/1970\\\",\n    \t\t\t\\\"memberId\\\":\\\"TESTNOM-828628027\\\",\n    \t\t\t\\\"address\\\":{\n    \t\t\t\t\\\"line1\\\":\\\"Changed Line1\\\",\n    \t\t\t\t\\\"line2\\\":\\\"Changed Line2\\\",\n    \t\t\t\t\\\"suburb\\\":\\\"Changed Suburb\\\",\n    \t\t\t\t\\\"state\\\":\\\"VIC\\\",\n    \t\t\t\t\\\"country\\\":\\\"Australia\\\",\n    \t\t\t\t\\\"postcode\\\":\\\"3100\\\"\n    \t\t\t},\n    \t\t\t\\\"phone\\\":{\n    \t\t\t\t\\\"mobileNumber\\\":\\\"0404040404\\\",\n    \t\t\t\t\\\"homeNumber\\\":\\\"0288911783\\\",\n    \t\t\t\t\\\"workNumber\\\":\\\"0288944513\\\"\n    \t\t\t}\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\\\"member\\\":{\n\t\t\t\t\\\"title\\\":\\\"Mr\\\",\n\t\t\t\t\\\"firstName\\\":\\\"George\\\",\n    \t\t\t\\\"lastName\\\":\\\"Lucas\\\",\n    \t\t\t\\\"gender\\\":\\\"M\\\",\n    \t\t\t\\\"dateOfBirth\\\":\\\"08/13/1970\\\",\n    \t\t\t\\\"memberId\\\":\\\"TESTNOM1237596314\\\",\n    \t\t\t\\\"address\\\":{\n    \t\t\t\t\\\"line1\\\":\\\"Changed Line1\\\",\n    \t\t\t\t\\\"line2\\\":\\\"Changed Line2\\\",\n    \t\t\t\t\\\"suburb\\\":\\\"Changed Suburb\\\",\n    \t\t\t\t\\\"state\\\":\\\"VIC\\\",\n    \t\t\t\t\\\"country\\\":\\\"Australia\\\",\n    \t\t\t\t\\\"postcode\\\":\\\"3100\\\"\n    \t\t\t},\n    \t\t\t\\\"phone\\\":{\n    \t\t\t\t\\\"mobileNumber\\\":\\\"0404040404\\\",\n    \t\t\t\t\\\"homeNumber\\\":\\\"0288911783\\\",\n    \t\t\t\t\\\"workNumber\\\":\\\"0288944513\\\"\n    \t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t],\n\t\\\"relationshipName\\\": \\\"GRESTFUNDMEMBER\\\",\n\t\\\"uuid\\\":\\\"599f9790-5c4f-13d4-8dd1-ffffffbaabca\\\"\n}'"
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "cad791ef-a581-a8b9-f3da-6733428202bc",
      "name": "RA-266 : API for sending Charity Mail",
      "description": "Scenario: ESB API to send an email notification request to Marketo whenever a member claims Charity\r\nGiven a member has been enrolled in Vitality\r\nWhen an email notification request is sent to ESB for Charity donation confirmation\r\nAnd it contains the corresponding valid Entity Number\r\nAnd it contains the charityName\r\nAnd it contains the charityAmount\r\nAnd it contains the charityWeek\r\nThen a status 200 should be returned\r\nAnd the corresponding fields should be updated in Marketo",
      "item": [
        {
          "_postman_id": "250f4a69-e3dd-65c7-9621-c5905e4f975a",
          "name": "RA-153: Enrolling a Member - New Process",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "tests[\"Verifying that Enrolment is successfull\"] =  body.status === \"Data Accepted\";"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "",
                  "//Generating Random Email address to pass into the data so that user duplication does not happen",
                  "function makeEmail() {",
                  "  var strValues = \"qpotvghysbnxui56z\";",
                  "  var strEmail = \"\";",
                  "  var strTmp;",
                  "  for (var i = 0; i < 10; i++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strTmp = \"\";",
                  "  strEmail = strEmail + \"@\";",
                  "  for (var j = 0; j < 8; j++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strEmail = strEmail + \"esbpii.com\";",
                  "  return strEmail;",
                  "}",
                  "",
                  "",
                  "//Setting up the random email to an environment variable",
                  "postman.setEnvironmentVariable(\"Email\", makeEmail());",
                  "console.log(\"Email: \"+environment.Email);",
                  "",
                  "var firstName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);",
                  "",
                  "//Setting up the firstName to an environment variable",
                  "postman.setEnvironmentVariable(\"firstName\", firstName);",
                  "console.log(\"firstName: \"+environment.firstName);",
                  "",
                  "var lastName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 8);",
                  "",
                  "//Setting up the lastName to an environment variable",
                  "postman.setEnvironmentVariable(\"lastName\", lastName);",
                  "console.log(\"lastName: \"+environment.lastName);",
                  "",
                  "",
                  "//Incrementing and Setting up the memberID to an environment variable",
                  "// var memberIdNumber = parseInt(environment.memberIdNumber)+1;",
                  "var memberIdNumber = Date.now();",
                  "console.log(memberIdNumber);",
                  "postman.setEnvironmentVariable(\"memberIdNumber\", memberIdNumber);",
                  "postman.setEnvironmentVariable(\"memberID\", \"RA\"+memberIdNumber.toString());",
                  "console.log(\"memberID :\"+environment.memberID);",
                  ""
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
            },
            "description": ""
          },
          "response": [
            {
              "id": "0617aef1-5cb1-fb4e-c7d4-b340722a5d5e",
              "name": "error",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "Keep-Alive"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Wed, 14 Dec 2016 00:42:55 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-Backside-Transport",
                  "name": "X-Backside-Transport",
                  "value": "OK OK"
                },
                {
                  "description": "",
                  "key": "X-Client-IP",
                  "name": "X-Client-IP",
                  "value": "10.61.38.184"
                },
                {
                  "description": "",
                  "key": "X-Global-Transaction-ID",
                  "name": "X-Global-Transaction-ID",
                  "value": "348720"
                }
              ],
              "cookie": [],
              "responseTime": "1537",
              "body": "{\"response\":{}}"
            },
            {
              "id": "474e0930-24ec-9b2b-9a13-3a5fa4615cc3",
              "name": "response 1",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:13:56 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "215",
              "body": "{\"token\":\"39b8615a-307d-419f-a503-4d4fa6c7021d\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "7c7fc521-d0fa-352f-44bb-89605d1333bd",
              "name": "response 2",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:07 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "237",
              "body": "{\"token\":\"a77eb61e-5dd3-4680-931e-49122ab21153\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "da5b7d69-a701-54c7-d5eb-190aa526ccda",
              "name": "response 3",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:17 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "1830",
              "body": "{\"token\":\"1ed2d16e-9fc9-46ed-af8e-49e5b5207e79\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            }
          ]
        },
        {
          "_postman_id": "8779fb34-f910-045b-871b-8d5d71882cba",
          "name": "Wait for enrolment to finish",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "{{password_ESB}}",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{testPackageURL}}/rest/restTestPackage.ws.sleep?seconds=200",
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {},
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "a29f9960-d959-6a95-1950-c0be1809eac9",
          "name": "RA-147 : Verifying user has been added to UMS and is InActive Status",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonObject = xml2Json(responseBody);\r",
                  "\r",
                  "try\r",
                  "{\r",
                  "    tests[\"Verifying that User status is Not Activated\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userStatus === \"I\";\r",
                  "    tests[\"Verifying that User ID is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userId === environment.Email ;\r",
                  "    tests[\"Verifying that Email is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.email === environment.Email ;\r",
                  "    tests[\"Verifying that First Name is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.givenName === environment.firstName ;\r",
                  "    tests[\"Verifying that Last name is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.surname === environment.lastName ;\r",
                  "    tests[\"Verifying that Member Type is as passed to UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.memberType === \"GROUP\" ;\r",
                  "    tests[\"Verifying that User Groups List is VITALITY_AWAITING_ACTIVATION\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userGroupsList === \"VITALITY_AWAITING_ACTIVATION\" ;\r",
                  "    \r",
                  "    //Setting up the token to an environment variable to be used in subsequent requests\r",
                  "    postman.setEnvironmentVariable(\"umsToken\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.token);\r",
                  "    \r",
                  "    postman.setEnvironmentVariable(\"aiaClientNumber\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaClientNumber);\r",
                  "    postman.setEnvironmentVariable(\"aiaVitalityMemberNumber\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaVitalityMemberNumber);\r",
                  "    postman.setEnvironmentVariable(\"aiaDsyPolicyNumber\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaDsyPolicyNumber);\r",
                  "    postman.setEnvironmentVariable(\"aiaVitalityId\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaVitalityId);\r",
                  "}\r",
                  "\r",
                  "catch(err){\r",
                  "  tests[\"Data in response does not exist\"] = false;  \r",
                  "}\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "{{UmsURL}}/{{UMSContext}}/UsermanagementService",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "text/xml",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:ser=\"http://service.usermanagement.aiaa.com.au\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <ser:searchUserRequest>\n         <source>VITALITY</source>\n         <userType></userType>\n         <userDetails>\n            <userName></userName>\n            <userId></userId>\n            <userDN></userDN>\n            <email>{{Email}}</email>\n            <givenName></givenName>\n            <surname></surname>\n            <webChannel></webChannel>\n            <token></token>\n            <fundIdentifier></fundIdentifier>\n            <eligibilityAssessorEmail></eligibilityAssessorEmail>\n            <activationURL></activationURL>\n            <consentURL></consentURL>\n            <!--1 or more repetitions:-->\n            <userRolesList></userRolesList>\n            <title></title>\n            <dateOfBirth></dateOfBirth>\n            <gender></gender>\n            <addressLine1></addressLine1>\n            <addressLine2></addressLine2>\n            <suburb></suburb>\n            <state></state>\n            <postcode></postcode>\n            <country></country>\n            <mobilePhone></mobilePhone>\n            <workPhone></workPhone>\n            <homePhone></homePhone>\n            <fax></fax>\n            <isRetailLifeInsured></isRetailLifeInsured>\n            <passwordRequestDate></passwordRequestDate>\n            <password></password>\n            <passwordRequestCount></passwordRequestCount>\n            <aiaProposalNumber></aiaProposalNumber>\n            <aiaProposalWritingAdviser></aiaProposalWritingAdviser>\n            <aiaCCAppTnCAcceptedDate></aiaCCAppTnCAcceptedDate>\n            <aiaCCAppTnCVersion></aiaCCAppTnCVersion>\n            <!--1 or more repetitions:-->\n            <userGroupsList></userGroupsList>\n            <!--1 or more repetitions:-->\n            <userGroupsDNList></userGroupsDNList>\n            <memberType></memberType>\n            <residentialPostcode></residentialPostcode>\n            <userStatus></userStatus>\n            <aiaClientNumber></aiaClientNumber>\n            <aiaVitalityMemberNumber></aiaVitalityMemberNumber>\n            <aiaDsyPolicyNumber></aiaDsyPolicyNumber>\n            <aiaVitalityCobrandingInfo></aiaVitalityCobrandingInfo>\n         </userDetails>\n      </ser:searchUserRequest>\n   </soapenv:Body>\n</soapenv:Envelope>\n\n"
            },
            "description": "A/C:\r\nGiven that members activated their membership\r\nWhen ESB gets the action\r\nThen their membership will be activated in UMS"
          },
          "response": []
        },
        {
          "_postman_id": "9f2190b2-380a-a697-a7e3-81f2fac1b527",
          "name": "RA-153: Activate member - New Process",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "",
                  "//tests[\"Verifying that Activation is successfull\"] =  body.status === \"Activation Successful\";",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{ESBURL}}/rest/aiaVitalityMember/pub/activation",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"password\": \"Welcome123\",\r\n   \"reasonForJoining\": \"I am actively trying to maintain or improve my health\",\r\n   \"email\": \"{{Email}}\",\r\n   \"token\": \"{{umsToken}}\"   \r\n}\r\n"
            },
            "description": ""
          },
          "response": [
            {
              "id": "15ad19b5-134d-e049-d6bc-96a31dd03015",
              "name": "response 1",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMember/pub/activation",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"password\": \"Welcome123\",\r\n   \"reasonForJoining\": \"I am actively trying to maintain or improve my health\",\r\n   \"email\": \"{{Email}}\",\r\n   \"token\": \"{{umsToken}}\"   \r\n}\r\n"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:13:56 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "215",
              "body": "{\"token\":\"39b8615a-307d-419f-a503-4d4fa6c7021d\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "28296a10-7530-9844-976c-8f0b57f4e502",
              "name": "response 3",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMember/pub/activation",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"password\": \"Welcome123\",\r\n   \"reasonForJoining\": \"I am actively trying to maintain or improve my health\",\r\n   \"email\": \"{{Email}}\",\r\n   \"token\": \"{{umsToken}}\"   \r\n}\r\n"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:17 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "1830",
              "body": "{\"token\":\"1ed2d16e-9fc9-46ed-af8e-49e5b5207e79\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "48827292-d2ba-ec6f-a033-ccd1c70f2f00",
              "name": "response 2",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMember/pub/activation",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"password\": \"Welcome123\",\r\n   \"reasonForJoining\": \"I am actively trying to maintain or improve my health\",\r\n   \"email\": \"{{Email}}\",\r\n   \"token\": \"{{umsToken}}\"   \r\n}\r\n"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:07 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "237",
              "body": "{\"token\":\"a77eb61e-5dd3-4680-931e-49122ab21153\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "6bfb580c-2424-b50a-225f-50887e98164e",
              "name": "error",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMember/pub/activation",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"password\": \"Welcome123\",\r\n   \"reasonForJoining\": \"I am actively trying to maintain or improve my health\",\r\n   \"email\": \"{{Email}}\",\r\n   \"token\": \"{{umsToken}}\"   \r\n}\r\n"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "Keep-Alive"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Wed, 14 Dec 2016 00:42:55 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-Backside-Transport",
                  "name": "X-Backside-Transport",
                  "value": "OK OK"
                },
                {
                  "description": "",
                  "key": "X-Client-IP",
                  "name": "X-Client-IP",
                  "value": "10.61.38.184"
                },
                {
                  "description": "",
                  "key": "X-Global-Transaction-ID",
                  "name": "X-Global-Transaction-ID",
                  "value": "348720"
                }
              ],
              "cookie": [],
              "responseTime": "1537",
              "body": "{\"response\":{}}"
            }
          ]
        },
        {
          "_postman_id": "1831f1dc-7f69-28dd-0e68-bf1d82d38ae5",
          "name": "Wait for activation to finish",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{testPackageURL}}/rest/restTestPackage.ws.sleep?seconds=120",
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {},
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "ce54960d-a564-b9b4-5300-b9cc1b223cf8",
          "name": "RA-147 : Verifying user has been added to UMS and is activated",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonObject = xml2Json(responseBody);\r",
                  "\r",
                  "try\r",
                  "{\r",
                  "\r",
                  "\r",
                  "tests[\"Verifying that User status is  Activated\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userStatus === \"A\";\r",
                  "\r",
                  "tests[\"Verifying that User ID is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userId === environment.Email ;\r",
                  "\r",
                  "tests[\"Verifying that Email is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.email === environment.Email ;\r",
                  "\r",
                  "tests[\"Verifying that First Name is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.givenName === environment.firstName ;\r",
                  "\r",
                  "tests[\"Verifying that Last name is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.surname === environment.lastName ;\r",
                  "\r",
                  "tests[\"Verifying that Member Type is as passed to UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.memberType === \"GROUP\" ;\r",
                  "\r",
                  "tests[\"Verifying that User Groups List is VITALITY_ACTIVE\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userGroupsList === \"VITALITY_ACTIVE\" ;\r",
                  "\r",
                  "\r",
                  "\r",
                  "//Setting up the token to an environment variable to be used in subsequent requests\r",
                  "\r",
                  "postman.setEnvironmentVariable(\"umsToken\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.token);\r",
                  "\r",
                  "postman.setEnvironmentVariable(\"aiaClientNumber\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaClientNumber);\r",
                  "postman.setEnvironmentVariable(\"aiaVitalityMemberNumber\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaVitalityMemberNumber);\r",
                  "postman.setEnvironmentVariable(\"aiaDsyPolicyNumber\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaDsyPolicyNumber);\r",
                  "\r",
                  "postman.setEnvironmentVariable(\"aiaVitalityId\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaVitalityId);\r",
                  "\r",
                  "\r",
                  "}\r",
                  "\r",
                  "\r",
                  "catch(err){\r",
                  "    \r",
                  "  tests[\"Data in response does not exist\"] = false;  \r",
                  "\r",
                  "\r",
                  "}\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "{{UmsURL}}/{{UMSContext}}/UsermanagementService",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "text/xml",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:ser=\"http://service.usermanagement.aiaa.com.au\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <ser:searchUserRequest>\r\n         <source>VITALITY</source>\r\n         <userType></userType>\r\n         <userDetails>\r\n            <userName></userName>\r\n            <userId></userId>\r\n            <userDN></userDN>\r\n            <email>{{Email}}</email>\r\n            <givenName></givenName>\r\n            <surname></surname>\r\n            <webChannel></webChannel>\r\n            <token></token>\r\n            <fundIdentifier></fundIdentifier>\r\n            <eligibilityAssessorEmail></eligibilityAssessorEmail>\r\n            <activationURL></activationURL>\r\n            <consentURL></consentURL>\r\n            <!--1 or more repetitions:-->\r\n            <userRolesList></userRolesList>\r\n            <title></title>\r\n            <dateOfBirth></dateOfBirth>\r\n            <gender></gender>\r\n            <addressLine1></addressLine1>\r\n            <addressLine2></addressLine2>\r\n            <suburb></suburb>\r\n            <state></state>\r\n            <postcode></postcode>\r\n            <country></country>\r\n            <mobilePhone></mobilePhone>\r\n            <workPhone></workPhone>\r\n            <homePhone></homePhone>\r\n            <fax></fax>\r\n            <isRetailLifeInsured></isRetailLifeInsured>\r\n            <passwordRequestDate></passwordRequestDate>\r\n            <password></password>\r\n            <passwordRequestCount></passwordRequestCount>\r\n            <aiaProposalNumber></aiaProposalNumber>\r\n            <aiaProposalWritingAdviser></aiaProposalWritingAdviser>\r\n            <aiaCCAppTnCAcceptedDate></aiaCCAppTnCAcceptedDate>\r\n            <aiaCCAppTnCVersion></aiaCCAppTnCVersion>\r\n            <!--1 or more repetitions:-->\r\n            <userGroupsList></userGroupsList>\r\n            <!--1 or more repetitions:-->\r\n            <userGroupsDNList></userGroupsDNList>\r\n            <memberType></memberType>\r\n            <residentialPostcode></residentialPostcode>\r\n            <userStatus></userStatus>\r\n            <aiaClientNumber></aiaClientNumber>\r\n            <aiaVitalityMemberNumber></aiaVitalityMemberNumber>\r\n            <aiaDsyPolicyNumber></aiaDsyPolicyNumber>\r\n            <aiaVitalityCobrandingInfo></aiaVitalityCobrandingInfo>\r\n         </userDetails>\r\n      </ser:searchUserRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>\r\n\r\n"
            },
            "description": "A/C:\r\nGiven that members activated their membership\r\nWhen ESB gets the action\r\nThen their membership will be activated in UMS"
          },
          "response": []
        },
        {
          "_postman_id": "d8dcf234-0b69-49c1-734d-9a7cc432cca0",
          "name": "Trigger Charity Email",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "tests[\"Verifying that the notification is triggered successfully\"] =  body.status === \"Data Accepted\";",
                  "",
                  "postman.clearEnvironmentVariable(\"currentMonday\");"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var currentMonday = new Date();\r",
                  "// set to Monday of this week\r",
                  "currentMonday.setDate(currentMonday.getDate() - (currentMonday.getDay() + 6) % 7);\r",
                  "\r",
                  "postman.setEnvironmentVariable(\"currentMonday\", currentMonday.toISOString());"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{ESBURL}}/rest/aiaVitalityBenefits.rs.notification.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"notificationMessage\":[  \r\n      {  \r\n         \"entityNumber\":\"{{aiaVitalityId}}\",\r\n         \"transactionId\":\"{{$guid}}\",\r\n         \"notification\":{  \r\n            \"charityName\":\"Blue Cross\",\r\n            \"charityAmount\":\"20\",\r\n            \"charityWeek\":\"{{currentMonday}}\"\r\n         }\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "d1ea6f8d-e63f-8cc2-ec4b-f821d9321e85",
      "name": "RA-270 : ESB API to trigger In-App Notifications for active benefits",
      "description": "Provide Rest API to ActiveBenefits to bulk despatch in-app notification in Marketo.",
      "item": [
        {
          "_postman_id": "12332446-e3f1-7d22-fd8f-a6ba6d9ab51a",
          "name": "RA-153: Enrolling a Member - New Process",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "tests[\"Verifying that Enrolment is successfull\"] = body.status === \"Data Accepted\";"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "",
                  "//Generating Random Email address to pass into the data so that user duplication does not happen",
                  "function makeEmail() {",
                  "  var strValues = \"qpotvghysbnxui56z\";",
                  "  var strEmail = \"\";",
                  "  var strTmp;",
                  "  for (var i = 0; i < 10; i++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strTmp = \"\";",
                  "  strEmail = strEmail + \"@\";",
                  "  for (var j = 0; j < 8; j++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strEmail = strEmail + \"esbpii.com\";",
                  "  return strEmail;",
                  "}",
                  "",
                  "",
                  "//Setting up the random email to an environment variable",
                  "postman.setEnvironmentVariable(\"Email\", makeEmail());",
                  "console.log(\"Email: \"+environment.Email);",
                  "",
                  "var firstName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);",
                  "",
                  "//Setting up the firstName to an environment variable",
                  "postman.setEnvironmentVariable(\"firstName\", firstName);",
                  "console.log(\"firstName: \"+environment.firstName);",
                  "",
                  "var lastName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 8);",
                  "",
                  "//Setting up the lastName to an environment variable",
                  "postman.setEnvironmentVariable(\"lastName\", lastName);",
                  "console.log(\"lastName: \"+environment.lastName);",
                  "",
                  "",
                  "//Incrementing and Setting up the memberID to an environment variable",
                  "// var memberIdNumber = parseInt(environment.memberIdNumber)+1;",
                  "var memberIdNumber = Date.now();",
                  "console.log(memberIdNumber);",
                  "postman.setEnvironmentVariable(\"memberIdNumber\", memberIdNumber);",
                  "postman.setEnvironmentVariable(\"memberID\", \"RA\"+memberIdNumber.toString());",
                  "console.log(\"memberID :\"+environment.memberID);",
                  ""
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
            },
            "description": ""
          },
          "response": [
            {
              "id": "7fabf68f-6c2a-417e-bc08-37500b299481",
              "name": "response 3",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:17 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "1830",
              "body": "{\"token\":\"1ed2d16e-9fc9-46ed-af8e-49e5b5207e79\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "813da190-5c0c-3ee1-788c-dc82867ff90b",
              "name": "response 1",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:13:56 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "215",
              "body": "{\"token\":\"39b8615a-307d-419f-a503-4d4fa6c7021d\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "ae0585f1-ca4c-d492-657b-dd754dc7a0b9",
              "name": "response 2",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:07 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "237",
              "body": "{\"token\":\"a77eb61e-5dd3-4680-931e-49122ab21153\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "ae25aa9d-fc31-f99a-294a-d3cf686dd813",
              "name": "error",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "key": "Connection",
                  "value": "Keep-Alive",
                  "name": "Connection",
                  "description": ""
                },
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "name": "Content-Type",
                  "description": ""
                },
                {
                  "key": "Date",
                  "value": "Wed, 14 Dec 2016 00:42:55 GMT",
                  "name": "Date",
                  "description": ""
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked",
                  "name": "Transfer-Encoding",
                  "description": ""
                },
                {
                  "key": "X-Backside-Transport",
                  "value": "OK OK",
                  "name": "X-Backside-Transport",
                  "description": ""
                },
                {
                  "key": "X-Client-IP",
                  "value": "10.61.38.184",
                  "name": "X-Client-IP",
                  "description": ""
                },
                {
                  "key": "X-Global-Transaction-ID",
                  "value": "348720",
                  "name": "X-Global-Transaction-ID",
                  "description": ""
                }
              ],
              "cookie": [],
              "responseTime": "1537",
              "body": "{\"response\":{}}"
            }
          ]
        },
        {
          "_postman_id": "917eca36-4b23-daa2-c4be-74784ae22bfa",
          "name": "Wait for enrolment to finish",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{testPackageURL}}/rest/restTestPackage.ws.sleep?seconds=200",
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {},
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "46183cd2-479c-61c5-e7d6-5e098a45a44e",
          "name": "RA-147 : Verifying user has been added to UMS and is InActive Status",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonObject = xml2Json(responseBody);\r",
                  "\r",
                  "try\r",
                  "{\r",
                  "\r",
                  "\r",
                  "tests[\"Verifying that User status is Not Activated\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userStatus === \"I\";\r",
                  "\r",
                  "tests[\"Verifying that User ID is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userId === environment.Email ;\r",
                  "\r",
                  "tests[\"Verifying that Email is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.email === environment.Email ;\r",
                  "\r",
                  "tests[\"Verifying that First Name is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.givenName === environment.firstName ;\r",
                  "\r",
                  "tests[\"Verifying that Last name is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.surname === environment.lastName ;\r",
                  "\r",
                  "tests[\"Verifying that Member Type is as passed to UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.memberType === \"GROUP\" ;\r",
                  "\r",
                  "tests[\"Verifying that User Groups List is VITALITY_AWAITING_ACTIVATION\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userGroupsList === \"VITALITY_AWAITING_ACTIVATION\" ;\r",
                  "\r",
                  "\r",
                  "\r",
                  "//Setting up the token to an environment variable to be used in subsequent requests\r",
                  "\r",
                  "postman.setEnvironmentVariable(\"umsToken\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.token);\r",
                  "\r",
                  "postman.setEnvironmentVariable(\"aiaClientNumber\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaClientNumber);\r",
                  "postman.setEnvironmentVariable(\"aiaVitalityMemberNumber\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaVitalityMemberNumber);\r",
                  "postman.setEnvironmentVariable(\"aiaDsyPolicyNumber\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaDsyPolicyNumber);\r",
                  "\r",
                  "postman.setEnvironmentVariable(\"aiaVitalityId1\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaVitalityId);\r",
                  "\r",
                  "\r",
                  "}\r",
                  "\r",
                  "\r",
                  "catch(err){\r",
                  "    \r",
                  "  tests[\"Data in response does not exist\"] = false;  \r",
                  "\r",
                  "\r",
                  "}\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "{{UmsURL}}/{{UMSContext}}/UsermanagementService",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "text/xml",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:ser=\"http://service.usermanagement.aiaa.com.au\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <ser:searchUserRequest>\n         <source>VITALITY</source>\n         <userType></userType>\n         <userDetails>\n            <userName></userName>\n            <userId></userId>\n            <userDN></userDN>\n            <email>{{Email}}</email>\n            <givenName></givenName>\n            <surname></surname>\n            <webChannel></webChannel>\n            <token></token>\n            <fundIdentifier></fundIdentifier>\n            <eligibilityAssessorEmail></eligibilityAssessorEmail>\n            <activationURL></activationURL>\n            <consentURL></consentURL>\n            <!--1 or more repetitions:-->\n            <userRolesList></userRolesList>\n            <title></title>\n            <dateOfBirth></dateOfBirth>\n            <gender></gender>\n            <addressLine1></addressLine1>\n            <addressLine2></addressLine2>\n            <suburb></suburb>\n            <state></state>\n            <postcode></postcode>\n            <country></country>\n            <mobilePhone></mobilePhone>\n            <workPhone></workPhone>\n            <homePhone></homePhone>\n            <fax></fax>\n            <isRetailLifeInsured></isRetailLifeInsured>\n            <passwordRequestDate></passwordRequestDate>\n            <password></password>\n            <passwordRequestCount></passwordRequestCount>\n            <aiaProposalNumber></aiaProposalNumber>\n            <aiaProposalWritingAdviser></aiaProposalWritingAdviser>\n            <aiaCCAppTnCAcceptedDate></aiaCCAppTnCAcceptedDate>\n            <aiaCCAppTnCVersion></aiaCCAppTnCVersion>\n            <!--1 or more repetitions:-->\n            <userGroupsList></userGroupsList>\n            <!--1 or more repetitions:-->\n            <userGroupsDNList></userGroupsDNList>\n            <memberType></memberType>\n            <residentialPostcode></residentialPostcode>\n            <userStatus></userStatus>\n            <aiaClientNumber></aiaClientNumber>\n            <aiaVitalityMemberNumber></aiaVitalityMemberNumber>\n            <aiaDsyPolicyNumber></aiaDsyPolicyNumber>\n            <aiaVitalityCobrandingInfo></aiaVitalityCobrandingInfo>\n         </userDetails>\n      </ser:searchUserRequest>\n   </soapenv:Body>\n</soapenv:Envelope>\n\n"
            },
            "description": "A/C:\r\nGiven that members activated their membership\r\nWhen ESB gets the action\r\nThen their membership will be activated in UMS"
          },
          "response": []
        },
        {
          "_postman_id": "a54b6233-1ea8-e650-6803-ce59f97a1a11",
          "name": "RA-153: Activate member - New Process",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "",
                  "//tests[\"Verifying that Activation is successfull\"] =  body.status === \"Activation Successful\";",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{ESBURL}}/rest/aiaVitalityMember/pub/activation",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"password\": \"Welcome123\",\r\n   \"reasonForJoining\": \"I am actively trying to maintain or improve my health\",\r\n   \"email\": \"{{Email}}\",\r\n   \"token\": \"{{umsToken}}\"   \r\n}\r\n"
            },
            "description": ""
          },
          "response": [
            {
              "id": "0de3d3d1-b1a0-6601-9d25-4127be49725b",
              "name": "response 1",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMember/pub/activation",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"password\": \"Welcome123\",\r\n   \"reasonForJoining\": \"I am actively trying to maintain or improve my health\",\r\n   \"email\": \"{{Email}}\",\r\n   \"token\": \"{{umsToken}}\"   \r\n}\r\n"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:13:56 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "215",
              "body": "{\"token\":\"39b8615a-307d-419f-a503-4d4fa6c7021d\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "2cfe47be-4506-67ee-4f2a-d954cfb41c1e",
              "name": "error",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMember/pub/activation",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"password\": \"Welcome123\",\r\n   \"reasonForJoining\": \"I am actively trying to maintain or improve my health\",\r\n   \"email\": \"{{Email}}\",\r\n   \"token\": \"{{umsToken}}\"   \r\n}\r\n"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "key": "Connection",
                  "value": "Keep-Alive",
                  "name": "Connection",
                  "description": ""
                },
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "name": "Content-Type",
                  "description": ""
                },
                {
                  "key": "Date",
                  "value": "Wed, 14 Dec 2016 00:42:55 GMT",
                  "name": "Date",
                  "description": ""
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked",
                  "name": "Transfer-Encoding",
                  "description": ""
                },
                {
                  "key": "X-Backside-Transport",
                  "value": "OK OK",
                  "name": "X-Backside-Transport",
                  "description": ""
                },
                {
                  "key": "X-Client-IP",
                  "value": "10.61.38.184",
                  "name": "X-Client-IP",
                  "description": ""
                },
                {
                  "key": "X-Global-Transaction-ID",
                  "value": "348720",
                  "name": "X-Global-Transaction-ID",
                  "description": ""
                }
              ],
              "cookie": [],
              "responseTime": "1537",
              "body": "{\"response\":{}}"
            },
            {
              "id": "4b206ee8-fff4-60f4-b649-2a7279ab7656",
              "name": "response 2",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMember/pub/activation",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"password\": \"Welcome123\",\r\n   \"reasonForJoining\": \"I am actively trying to maintain or improve my health\",\r\n   \"email\": \"{{Email}}\",\r\n   \"token\": \"{{umsToken}}\"   \r\n}\r\n"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:07 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "237",
              "body": "{\"token\":\"a77eb61e-5dd3-4680-931e-49122ab21153\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "c982c980-3080-1889-6efe-b3c13fbd9001",
              "name": "response 3",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMember/pub/activation",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"password\": \"Welcome123\",\r\n   \"reasonForJoining\": \"I am actively trying to maintain or improve my health\",\r\n   \"email\": \"{{Email}}\",\r\n   \"token\": \"{{umsToken}}\"   \r\n}\r\n"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:17 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "1830",
              "body": "{\"token\":\"1ed2d16e-9fc9-46ed-af8e-49e5b5207e79\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            }
          ]
        },
        {
          "_postman_id": "642cbd6c-4008-a1b7-845c-b88f51fdebd3",
          "name": "Wait for activation to finish",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{testPackageURL}}/rest/restTestPackage.ws.sleep?seconds=120",
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {},
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "943d145c-a703-5fea-fa30-f6965e96ea5c",
          "name": "RA-147 : Verifying user has been added to UMS and is activated",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonObject = xml2Json(responseBody);\r",
                  "\r",
                  "try\r",
                  "{\r",
                  "\r",
                  "\r",
                  "tests[\"Verifying that User status is  Activated\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userStatus === \"A\";\r",
                  "\r",
                  "tests[\"Verifying that User ID is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userId === environment.Email ;\r",
                  "\r",
                  "tests[\"Verifying that Email is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.email === environment.Email ;\r",
                  "\r",
                  "tests[\"Verifying that First Name is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.givenName === environment.firstName ;\r",
                  "\r",
                  "tests[\"Verifying that Last name is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.surname === environment.lastName ;\r",
                  "\r",
                  "tests[\"Verifying that Member Type is as passed to UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.memberType === \"GROUP\" ;\r",
                  "\r",
                  "tests[\"Verifying that User Groups List is VITALITY_ACTIVE\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userGroupsList === \"VITALITY_ACTIVE\" ;\r",
                  "\r",
                  "\r",
                  "\r",
                  "//Setting up the token to an environment variable to be used in subsequent requests\r",
                  "\r",
                  "postman.setEnvironmentVariable(\"umsToken\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.token);\r",
                  "\r",
                  "postman.setEnvironmentVariable(\"aiaClientNumber\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaClientNumber);\r",
                  "postman.setEnvironmentVariable(\"aiaVitalityMemberNumber\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaVitalityMemberNumber);\r",
                  "postman.setEnvironmentVariable(\"aiaDsyPolicyNumber\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaDsyPolicyNumber);\r",
                  "\r",
                  "postman.setEnvironmentVariable(\"aiaVitalityId1\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaVitalityId);\r",
                  "\r",
                  "\r",
                  "}\r",
                  "\r",
                  "\r",
                  "catch(err){\r",
                  "    \r",
                  "  tests[\"Data in response does not exist\"] = false;  \r",
                  "\r",
                  "\r",
                  "}\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "{{UmsURL}}/{{UMSContext}}/UsermanagementService",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "text/xml",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:ser=\"http://service.usermanagement.aiaa.com.au\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <ser:searchUserRequest>\r\n         <source>VITALITY</source>\r\n         <userType></userType>\r\n         <userDetails>\r\n            <userName></userName>\r\n            <userId></userId>\r\n            <userDN></userDN>\r\n            <email>{{Email}}</email>\r\n            <givenName></givenName>\r\n            <surname></surname>\r\n            <webChannel></webChannel>\r\n            <token></token>\r\n            <fundIdentifier></fundIdentifier>\r\n            <eligibilityAssessorEmail></eligibilityAssessorEmail>\r\n            <activationURL></activationURL>\r\n            <consentURL></consentURL>\r\n            <!--1 or more repetitions:-->\r\n            <userRolesList></userRolesList>\r\n            <title></title>\r\n            <dateOfBirth></dateOfBirth>\r\n            <gender></gender>\r\n            <addressLine1></addressLine1>\r\n            <addressLine2></addressLine2>\r\n            <suburb></suburb>\r\n            <state></state>\r\n            <postcode></postcode>\r\n            <country></country>\r\n            <mobilePhone></mobilePhone>\r\n            <workPhone></workPhone>\r\n            <homePhone></homePhone>\r\n            <fax></fax>\r\n            <isRetailLifeInsured></isRetailLifeInsured>\r\n            <passwordRequestDate></passwordRequestDate>\r\n            <password></password>\r\n            <passwordRequestCount></passwordRequestCount>\r\n            <aiaProposalNumber></aiaProposalNumber>\r\n            <aiaProposalWritingAdviser></aiaProposalWritingAdviser>\r\n            <aiaCCAppTnCAcceptedDate></aiaCCAppTnCAcceptedDate>\r\n            <aiaCCAppTnCVersion></aiaCCAppTnCVersion>\r\n            <!--1 or more repetitions:-->\r\n            <userGroupsList></userGroupsList>\r\n            <!--1 or more repetitions:-->\r\n            <userGroupsDNList></userGroupsDNList>\r\n            <memberType></memberType>\r\n            <residentialPostcode></residentialPostcode>\r\n            <userStatus></userStatus>\r\n            <aiaClientNumber></aiaClientNumber>\r\n            <aiaVitalityMemberNumber></aiaVitalityMemberNumber>\r\n            <aiaDsyPolicyNumber></aiaDsyPolicyNumber>\r\n            <aiaVitalityCobrandingInfo></aiaVitalityCobrandingInfo>\r\n         </userDetails>\r\n      </ser:searchUserRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>\r\n\r\n"
            },
            "description": "A/C:\r\nGiven that members activated their membership\r\nWhen ESB gets the action\r\nThen their membership will be activated in UMS"
          },
          "response": []
        },
        {
          "_postman_id": "26a2c906-94f5-5f74-9250-a5c97443ac12",
          "name": "RA-153: Enrolling a Member - New Process 2",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "tests[\"Verifying that Enrolment is successfull\"] =  body.status === \"Data Accepted\";"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "",
                  "//Generating Random Email address to pass into the data so that user duplication does not happen",
                  "function makeEmail() {",
                  "  var strValues = \"qpotvghysbnxui56z\";",
                  "  var strEmail = \"\";",
                  "  var strTmp;",
                  "  for (var i = 0; i < 10; i++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strTmp = \"\";",
                  "  strEmail = strEmail + \"@\";",
                  "  for (var j = 0; j < 8; j++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strEmail = strEmail + \"esbpii.com\";",
                  "  return strEmail;",
                  "}",
                  "",
                  "",
                  "//Setting up the random email to an environment variable",
                  "postman.setEnvironmentVariable(\"Email\", makeEmail());",
                  "console.log(\"Email: \"+environment.Email);",
                  "",
                  "var firstName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);",
                  "",
                  "//Setting up the firstName to an environment variable",
                  "postman.setEnvironmentVariable(\"firstName\", firstName);",
                  "console.log(\"firstName: \"+environment.firstName);",
                  "",
                  "var lastName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 8);",
                  "",
                  "//Setting up the lastName to an environment variable",
                  "postman.setEnvironmentVariable(\"lastName\", lastName);",
                  "console.log(\"lastName: \"+environment.lastName);",
                  "",
                  "",
                  "//Incrementing and Setting up the memberID to an environment variable",
                  "// var memberIdNumber = parseInt(environment.memberIdNumber)+1;",
                  "var memberIdNumber = Date.now();",
                  "console.log(memberIdNumber);",
                  "postman.setEnvironmentVariable(\"memberIdNumber\", memberIdNumber);",
                  "postman.setEnvironmentVariable(\"memberID\", \"RA\"+memberIdNumber.toString());",
                  "console.log(\"memberID :\"+environment.memberID);",
                  ""
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
            },
            "description": ""
          },
          "response": [
            {
              "id": "089a4b16-a824-dc3a-e647-249914da3cde",
              "name": "response 1",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:13:56 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "215",
              "body": "{\"token\":\"39b8615a-307d-419f-a503-4d4fa6c7021d\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "4f551bb6-74e8-dbf2-a4f5-e159cc6859a4",
              "name": "response 2",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:07 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "237",
              "body": "{\"token\":\"a77eb61e-5dd3-4680-931e-49122ab21153\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "88434f6e-653a-bbd0-5eb3-b44a4494223c",
              "name": "response 3",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:17 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "1830",
              "body": "{\"token\":\"1ed2d16e-9fc9-46ed-af8e-49e5b5207e79\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "9665c2c3-9329-9060-2502-9f77a9406f50",
              "name": "error",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "key": "Connection",
                  "value": "Keep-Alive",
                  "name": "Connection",
                  "description": ""
                },
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "name": "Content-Type",
                  "description": ""
                },
                {
                  "key": "Date",
                  "value": "Wed, 14 Dec 2016 00:42:55 GMT",
                  "name": "Date",
                  "description": ""
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked",
                  "name": "Transfer-Encoding",
                  "description": ""
                },
                {
                  "key": "X-Backside-Transport",
                  "value": "OK OK",
                  "name": "X-Backside-Transport",
                  "description": ""
                },
                {
                  "key": "X-Client-IP",
                  "value": "10.61.38.184",
                  "name": "X-Client-IP",
                  "description": ""
                },
                {
                  "key": "X-Global-Transaction-ID",
                  "value": "348720",
                  "name": "X-Global-Transaction-ID",
                  "description": ""
                }
              ],
              "cookie": [],
              "responseTime": "1537",
              "body": "{\"response\":{}}"
            }
          ]
        },
        {
          "_postman_id": "f87f36ac-f05e-7add-a866-c033c7f8b5b4",
          "name": "Wait for enrolment to finish 2",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "{{password_ESB}}",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{testPackageURL}}/rest/restTestPackage.ws.sleep?seconds=200",
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {},
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "6e0ed7dc-c245-3821-a3f5-4ebef8386b4e",
          "name": "RA-147 : Verifying user has been added to UMS and is InActive Status 2",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonObject = xml2Json(responseBody);",
                  "",
                  "try {",
                  "    tests[\"Verifying that User status is Not Activated\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userStatus === \"I\";",
                  "",
                  "    tests[\"Verifying that User ID is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userId === environment.Email;",
                  "",
                  "    tests[\"Verifying that Email is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.email === environment.Email;",
                  "",
                  "    tests[\"Verifying that First Name is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.givenName === environment.firstName;",
                  "",
                  "    tests[\"Verifying that Last name is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.surname === environment.lastName;",
                  "",
                  "    tests[\"Verifying that Member Type is as passed to UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.memberType === \"GROUP\";",
                  "",
                  "    tests[\"Verifying that User Groups List is VITALITY_AWAITING_ACTIVATION\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userGroupsList === \"VITALITY_AWAITING_ACTIVATION\";",
                  "",
                  "",
                  "    //Setting up the token to an environment variable to be used in subsequent requests",
                  "",
                  "    postman.setEnvironmentVariable(\"umsToken\", jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.token);",
                  "",
                  "    postman.setEnvironmentVariable(\"aiaClientNumber\", jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaClientNumber);",
                  "    postman.setEnvironmentVariable(\"aiaVitalityMemberNumber\", jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaVitalityMemberNumber);",
                  "    postman.setEnvironmentVariable(\"aiaDsyPolicyNumber\", jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaDsyPolicyNumber);",
                  "",
                  "    postman.setEnvironmentVariable(\"aiaVitalityId2\", jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaVitalityId);",
                  "} catch (err) {",
                  "    tests[\"Data in response does not exist\"] = false;",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "{{UmsURL}}/{{UMSContext}}/UsermanagementService",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "text/xml",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:ser=\"http://service.usermanagement.aiaa.com.au\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <ser:searchUserRequest>\n         <source>VITALITY</source>\n         <userType></userType>\n         <userDetails>\n            <userName></userName>\n            <userId></userId>\n            <userDN></userDN>\n            <email>{{Email}}</email>\n            <givenName></givenName>\n            <surname></surname>\n            <webChannel></webChannel>\n            <token></token>\n            <fundIdentifier></fundIdentifier>\n            <eligibilityAssessorEmail></eligibilityAssessorEmail>\n            <activationURL></activationURL>\n            <consentURL></consentURL>\n            <!--1 or more repetitions:-->\n            <userRolesList></userRolesList>\n            <title></title>\n            <dateOfBirth></dateOfBirth>\n            <gender></gender>\n            <addressLine1></addressLine1>\n            <addressLine2></addressLine2>\n            <suburb></suburb>\n            <state></state>\n            <postcode></postcode>\n            <country></country>\n            <mobilePhone></mobilePhone>\n            <workPhone></workPhone>\n            <homePhone></homePhone>\n            <fax></fax>\n            <isRetailLifeInsured></isRetailLifeInsured>\n            <passwordRequestDate></passwordRequestDate>\n            <password></password>\n            <passwordRequestCount></passwordRequestCount>\n            <aiaProposalNumber></aiaProposalNumber>\n            <aiaProposalWritingAdviser></aiaProposalWritingAdviser>\n            <aiaCCAppTnCAcceptedDate></aiaCCAppTnCAcceptedDate>\n            <aiaCCAppTnCVersion></aiaCCAppTnCVersion>\n            <!--1 or more repetitions:-->\n            <userGroupsList></userGroupsList>\n            <!--1 or more repetitions:-->\n            <userGroupsDNList></userGroupsDNList>\n            <memberType></memberType>\n            <residentialPostcode></residentialPostcode>\n            <userStatus></userStatus>\n            <aiaClientNumber></aiaClientNumber>\n            <aiaVitalityMemberNumber></aiaVitalityMemberNumber>\n            <aiaDsyPolicyNumber></aiaDsyPolicyNumber>\n            <aiaVitalityCobrandingInfo></aiaVitalityCobrandingInfo>\n         </userDetails>\n      </ser:searchUserRequest>\n   </soapenv:Body>\n</soapenv:Envelope>\n\n"
            },
            "description": "A/C:\r\nGiven that members activated their membership\r\nWhen ESB gets the action\r\nThen their membership will be activated in UMS"
          },
          "response": []
        },
        {
          "_postman_id": "79e18404-3031-3ce6-01f8-e07a614f27d4",
          "name": "RA-153: Activate member - New Process 2",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "",
                  "//tests[\"Verifying that Activation is successfull\"] =  body.status === \"Activation Successful\";",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{ESBURL}}/rest/aiaVitalityMember/pub/activation",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"password\": \"Welcome123\",\r\n   \"reasonForJoining\": \"I am actively trying to maintain or improve my health\",\r\n   \"email\": \"{{Email}}\",\r\n   \"token\": \"{{umsToken}}\"   \r\n}\r\n"
            },
            "description": ""
          },
          "response": [
            {
              "id": "0506d48f-b733-9160-7441-8211b70d6b38",
              "name": "response 3",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMember/pub/activation",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"password\": \"Welcome123\",\r\n   \"reasonForJoining\": \"I am actively trying to maintain or improve my health\",\r\n   \"email\": \"{{Email}}\",\r\n   \"token\": \"{{umsToken}}\"   \r\n}\r\n"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:17 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "1830",
              "body": "{\"token\":\"1ed2d16e-9fc9-46ed-af8e-49e5b5207e79\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "59fd057d-286e-fd05-bcef-d1b607356e7f",
              "name": "response 1",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMember/pub/activation",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"password\": \"Welcome123\",\r\n   \"reasonForJoining\": \"I am actively trying to maintain or improve my health\",\r\n   \"email\": \"{{Email}}\",\r\n   \"token\": \"{{umsToken}}\"   \r\n}\r\n"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:13:56 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "215",
              "body": "{\"token\":\"39b8615a-307d-419f-a503-4d4fa6c7021d\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "85a40559-99c9-ffb3-fc26-41f56f854860",
              "name": "error",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMember/pub/activation",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"password\": \"Welcome123\",\r\n   \"reasonForJoining\": \"I am actively trying to maintain or improve my health\",\r\n   \"email\": \"{{Email}}\",\r\n   \"token\": \"{{umsToken}}\"   \r\n}\r\n"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "key": "Connection",
                  "value": "Keep-Alive",
                  "name": "Connection",
                  "description": ""
                },
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "name": "Content-Type",
                  "description": ""
                },
                {
                  "key": "Date",
                  "value": "Wed, 14 Dec 2016 00:42:55 GMT",
                  "name": "Date",
                  "description": ""
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked",
                  "name": "Transfer-Encoding",
                  "description": ""
                },
                {
                  "key": "X-Backside-Transport",
                  "value": "OK OK",
                  "name": "X-Backside-Transport",
                  "description": ""
                },
                {
                  "key": "X-Client-IP",
                  "value": "10.61.38.184",
                  "name": "X-Client-IP",
                  "description": ""
                },
                {
                  "key": "X-Global-Transaction-ID",
                  "value": "348720",
                  "name": "X-Global-Transaction-ID",
                  "description": ""
                }
              ],
              "cookie": [],
              "responseTime": "1537",
              "body": "{\"response\":{}}"
            },
            {
              "id": "a1bbb1bf-0b97-1250-a9d2-36e31e976769",
              "name": "response 2",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMember/pub/activation",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"password\": \"Welcome123\",\r\n   \"reasonForJoining\": \"I am actively trying to maintain or improve my health\",\r\n   \"email\": \"{{Email}}\",\r\n   \"token\": \"{{umsToken}}\"   \r\n}\r\n"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:07 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "237",
              "body": "{\"token\":\"a77eb61e-5dd3-4680-931e-49122ab21153\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            }
          ]
        },
        {
          "_postman_id": "7390cfde-c0a6-7bcb-e885-5d09ce64171a",
          "name": "Wait for activation to finish 2",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{testPackageURL}}/rest/restTestPackage.ws.sleep?seconds=120",
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {},
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "34b65bbb-dcf9-fad4-301d-75c72345accd",
          "name": "RA-147 : Verifying user has been added to UMS and is activated 2",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonObject = xml2Json(responseBody);\r",
                  "\r",
                  "try\r",
                  "{\r",
                  "\r",
                  "\r",
                  "tests[\"Verifying that User status is  Activated\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userStatus === \"A\";\r",
                  "\r",
                  "tests[\"Verifying that User ID is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userId === environment.Email ;\r",
                  "\r",
                  "tests[\"Verifying that Email is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.email === environment.Email ;\r",
                  "\r",
                  "tests[\"Verifying that First Name is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.givenName === environment.firstName ;\r",
                  "\r",
                  "tests[\"Verifying that Last name is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.surname === environment.lastName ;\r",
                  "\r",
                  "tests[\"Verifying that Member Type is as passed to UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.memberType === \"GROUP\" ;\r",
                  "\r",
                  "tests[\"Verifying that User Groups List is VITALITY_ACTIVE\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userGroupsList === \"VITALITY_ACTIVE\" ;\r",
                  "\r",
                  "\r",
                  "\r",
                  "//Setting up the token to an environment variable to be used in subsequent requests\r",
                  "\r",
                  "postman.setEnvironmentVariable(\"umsToken\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.token);\r",
                  "\r",
                  "postman.setEnvironmentVariable(\"aiaClientNumber\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaClientNumber);\r",
                  "postman.setEnvironmentVariable(\"aiaVitalityMemberNumber\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaVitalityMemberNumber);\r",
                  "postman.setEnvironmentVariable(\"aiaDsyPolicyNumber\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaDsyPolicyNumber);\r",
                  "\r",
                  "postman.setEnvironmentVariable(\"aiaVitalityId2\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaVitalityId);\r",
                  "\r",
                  "\r",
                  "}\r",
                  "\r",
                  "\r",
                  "catch(err){\r",
                  "    \r",
                  "  tests[\"Data in response does not exist\"] = false;  \r",
                  "\r",
                  "\r",
                  "}\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "{{UmsURL}}/{{UMSContext}}/UsermanagementService",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "text/xml",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:ser=\"http://service.usermanagement.aiaa.com.au\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <ser:searchUserRequest>\r\n         <source>VITALITY</source>\r\n         <userType></userType>\r\n         <userDetails>\r\n            <userName></userName>\r\n            <userId></userId>\r\n            <userDN></userDN>\r\n            <email>{{Email}}</email>\r\n            <givenName></givenName>\r\n            <surname></surname>\r\n            <webChannel></webChannel>\r\n            <token></token>\r\n            <fundIdentifier></fundIdentifier>\r\n            <eligibilityAssessorEmail></eligibilityAssessorEmail>\r\n            <activationURL></activationURL>\r\n            <consentURL></consentURL>\r\n            <!--1 or more repetitions:-->\r\n            <userRolesList></userRolesList>\r\n            <title></title>\r\n            <dateOfBirth></dateOfBirth>\r\n            <gender></gender>\r\n            <addressLine1></addressLine1>\r\n            <addressLine2></addressLine2>\r\n            <suburb></suburb>\r\n            <state></state>\r\n            <postcode></postcode>\r\n            <country></country>\r\n            <mobilePhone></mobilePhone>\r\n            <workPhone></workPhone>\r\n            <homePhone></homePhone>\r\n            <fax></fax>\r\n            <isRetailLifeInsured></isRetailLifeInsured>\r\n            <passwordRequestDate></passwordRequestDate>\r\n            <password></password>\r\n            <passwordRequestCount></passwordRequestCount>\r\n            <aiaProposalNumber></aiaProposalNumber>\r\n            <aiaProposalWritingAdviser></aiaProposalWritingAdviser>\r\n            <aiaCCAppTnCAcceptedDate></aiaCCAppTnCAcceptedDate>\r\n            <aiaCCAppTnCVersion></aiaCCAppTnCVersion>\r\n            <!--1 or more repetitions:-->\r\n            <userGroupsList></userGroupsList>\r\n            <!--1 or more repetitions:-->\r\n            <userGroupsDNList></userGroupsDNList>\r\n            <memberType></memberType>\r\n            <residentialPostcode></residentialPostcode>\r\n            <userStatus></userStatus>\r\n            <aiaClientNumber></aiaClientNumber>\r\n            <aiaVitalityMemberNumber></aiaVitalityMemberNumber>\r\n            <aiaDsyPolicyNumber></aiaDsyPolicyNumber>\r\n            <aiaVitalityCobrandingInfo></aiaVitalityCobrandingInfo>\r\n         </userDetails>\r\n      </ser:searchUserRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>\r\n\r\n"
            },
            "description": "A/C:\r\nGiven that members activated their membership\r\nWhen ESB gets the action\r\nThen their membership will be activated in UMS"
          },
          "response": []
        },
        {
          "_postman_id": "4b23ba14-549b-faf2-88fa-cbdaea147835",
          "name": "RA-153: Enrolling a Member - New Process 3",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "",
                  "",
                  "tests[\"Verifying that Enrolment is successfull\"] =  body.status === \"Data Accepted\";",
                  "",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "",
                  "//Generating Random Email address to pass into the data so that user duplication does not happen",
                  "function makeEmail() {",
                  "  var strValues = \"qpotvghysbnxui56z\";",
                  "  var strEmail = \"\";",
                  "  var strTmp;",
                  "  for (var i = 0; i < 10; i++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strTmp = \"\";",
                  "  strEmail = strEmail + \"@\";",
                  "  for (var j = 0; j < 8; j++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strEmail = strEmail + \"esbpii.com\";",
                  "  return strEmail;",
                  "}",
                  "",
                  "",
                  "//Setting up the random email to an environment variable",
                  "postman.setEnvironmentVariable(\"Email\", makeEmail());",
                  "console.log(\"Email: \"+environment.Email);",
                  "",
                  "var firstName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);",
                  "",
                  "//Setting up the firstName to an environment variable",
                  "postman.setEnvironmentVariable(\"firstName\", firstName);",
                  "console.log(\"firstName: \"+environment.firstName);",
                  "",
                  "var lastName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 8);",
                  "",
                  "//Setting up the lastName to an environment variable",
                  "postman.setEnvironmentVariable(\"lastName\", lastName);",
                  "console.log(\"lastName: \"+environment.lastName);",
                  "",
                  "",
                  "//Incrementing and Setting up the memberID to an environment variable",
                  "// var memberIdNumber = parseInt(environment.memberIdNumber)+1;",
                  "var memberIdNumber = Date.now();",
                  "console.log(memberIdNumber);",
                  "postman.setEnvironmentVariable(\"memberIdNumber\", memberIdNumber);",
                  "postman.setEnvironmentVariable(\"memberID\", \"RA\"+memberIdNumber.toString());",
                  "console.log(\"memberID :\"+environment.memberID);",
                  ""
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
            },
            "description": ""
          },
          "response": [
            {
              "id": "27d9de19-3317-74f1-5624-fb6a01847dbd",
              "name": "error",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "key": "Connection",
                  "value": "Keep-Alive",
                  "name": "Connection",
                  "description": ""
                },
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "name": "Content-Type",
                  "description": ""
                },
                {
                  "key": "Date",
                  "value": "Wed, 14 Dec 2016 00:42:55 GMT",
                  "name": "Date",
                  "description": ""
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked",
                  "name": "Transfer-Encoding",
                  "description": ""
                },
                {
                  "key": "X-Backside-Transport",
                  "value": "OK OK",
                  "name": "X-Backside-Transport",
                  "description": ""
                },
                {
                  "key": "X-Client-IP",
                  "value": "10.61.38.184",
                  "name": "X-Client-IP",
                  "description": ""
                },
                {
                  "key": "X-Global-Transaction-ID",
                  "value": "348720",
                  "name": "X-Global-Transaction-ID",
                  "description": ""
                }
              ],
              "cookie": [],
              "responseTime": "1537",
              "body": "{\"response\":{}}"
            },
            {
              "id": "6fdc3c32-3804-4888-4884-88cdd3d7e180",
              "name": "response 2",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:07 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "237",
              "body": "{\"token\":\"a77eb61e-5dd3-4680-931e-49122ab21153\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "a43ce42f-4240-7ce4-b522-5d805d9301bf",
              "name": "response 3",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:17 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "1830",
              "body": "{\"token\":\"1ed2d16e-9fc9-46ed-af8e-49e5b5207e79\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "da55ba6b-9176-6a31-ce85-4fa729e3ad6e",
              "name": "response 1",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:13:56 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "215",
              "body": "{\"token\":\"39b8615a-307d-419f-a503-4d4fa6c7021d\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            }
          ]
        },
        {
          "_postman_id": "b8a26d5d-cc4e-089c-4164-100739a10d1b",
          "name": "Wait for enrolment to finish 3",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "{{password_ESB}}",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{testPackageURL}}/rest/restTestPackage.ws.sleep?seconds=200",
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {},
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "f0c1af6b-36a5-59c0-04f7-027fe6933c3d",
          "name": "RA-147 : Verifying user has been added to UMS and is InActive Status 2",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonObject = xml2Json(responseBody);\r",
                  "\r",
                  "try\r",
                  "{\r",
                  "    tests[\"Verifying that User status is Not Activated\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userStatus === \"I\";\r",
                  "    \r",
                  "    tests[\"Verifying that User ID is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userId === environment.Email ;\r",
                  "    \r",
                  "    tests[\"Verifying that Email is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.email === environment.Email ;\r",
                  "    \r",
                  "    tests[\"Verifying that First Name is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.givenName === environment.firstName ;\r",
                  "    \r",
                  "    tests[\"Verifying that Last name is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.surname === environment.lastName ;\r",
                  "    \r",
                  "    tests[\"Verifying that Member Type is as passed to UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.memberType === \"GROUP\" ;\r",
                  "    \r",
                  "    tests[\"Verifying that User Groups List is VITALITY_AWAITING_ACTIVATION\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userGroupsList === \"VITALITY_AWAITING_ACTIVATION\" ;\r",
                  "    \r",
                  "    \r",
                  "    //Setting up the token to an environment variable to be used in subsequent requests\r",
                  "    \r",
                  "    postman.setEnvironmentVariable(\"umsToken\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.token);\r",
                  "    \r",
                  "    postman.setEnvironmentVariable(\"aiaClientNumber\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaClientNumber);\r",
                  "    postman.setEnvironmentVariable(\"aiaVitalityMemberNumber\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaVitalityMemberNumber);\r",
                  "    postman.setEnvironmentVariable(\"aiaDsyPolicyNumber\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaDsyPolicyNumber);\r",
                  "    \r",
                  "    postman.setEnvironmentVariable(\"aiaVitalityId3\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaVitalityId);\r",
                  "}\r",
                  "\r",
                  "catch(err){\r",
                  "  tests[\"Data in response does not exist\"] = false;  \r",
                  "}\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "{{UmsURL}}/{{UMSContext}}/UsermanagementService",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "text/xml",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:ser=\"http://service.usermanagement.aiaa.com.au\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <ser:searchUserRequest>\n         <source>VITALITY</source>\n         <userType></userType>\n         <userDetails>\n            <userName></userName>\n            <userId></userId>\n            <userDN></userDN>\n            <email>{{Email}}</email>\n            <givenName></givenName>\n            <surname></surname>\n            <webChannel></webChannel>\n            <token></token>\n            <fundIdentifier></fundIdentifier>\n            <eligibilityAssessorEmail></eligibilityAssessorEmail>\n            <activationURL></activationURL>\n            <consentURL></consentURL>\n            <!--1 or more repetitions:-->\n            <userRolesList></userRolesList>\n            <title></title>\n            <dateOfBirth></dateOfBirth>\n            <gender></gender>\n            <addressLine1></addressLine1>\n            <addressLine2></addressLine2>\n            <suburb></suburb>\n            <state></state>\n            <postcode></postcode>\n            <country></country>\n            <mobilePhone></mobilePhone>\n            <workPhone></workPhone>\n            <homePhone></homePhone>\n            <fax></fax>\n            <isRetailLifeInsured></isRetailLifeInsured>\n            <passwordRequestDate></passwordRequestDate>\n            <password></password>\n            <passwordRequestCount></passwordRequestCount>\n            <aiaProposalNumber></aiaProposalNumber>\n            <aiaProposalWritingAdviser></aiaProposalWritingAdviser>\n            <aiaCCAppTnCAcceptedDate></aiaCCAppTnCAcceptedDate>\n            <aiaCCAppTnCVersion></aiaCCAppTnCVersion>\n            <!--1 or more repetitions:-->\n            <userGroupsList></userGroupsList>\n            <!--1 or more repetitions:-->\n            <userGroupsDNList></userGroupsDNList>\n            <memberType></memberType>\n            <residentialPostcode></residentialPostcode>\n            <userStatus></userStatus>\n            <aiaClientNumber></aiaClientNumber>\n            <aiaVitalityMemberNumber></aiaVitalityMemberNumber>\n            <aiaDsyPolicyNumber></aiaDsyPolicyNumber>\n            <aiaVitalityCobrandingInfo></aiaVitalityCobrandingInfo>\n         </userDetails>\n      </ser:searchUserRequest>\n   </soapenv:Body>\n</soapenv:Envelope>\n\n"
            },
            "description": "A/C:\r\nGiven that members activated their membership\r\nWhen ESB gets the action\r\nThen their membership will be activated in UMS"
          },
          "response": []
        },
        {
          "_postman_id": "149acf34-bf71-6c24-0ac7-e5059ce8f71b",
          "name": "RA-153: Activate member - New Process 3",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "",
                  "//tests[\"Verifying that Activation is successfull\"] =  body.status === \"Activation Successful\";",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{ESBURL}}/rest/aiaVitalityMember/pub/activation",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"password\": \"Welcome123\",\r\n   \"reasonForJoining\": \"I am actively trying to maintain or improve my health\",\r\n   \"email\": \"{{Email}}\",\r\n   \"token\": \"{{umsToken}}\"   \r\n}\r\n"
            },
            "description": ""
          },
          "response": [
            {
              "id": "4dcfdd55-f48e-5c1d-c1c5-04d9a7193c49",
              "name": "response 1",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMember/pub/activation",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"password\": \"Welcome123\",\r\n   \"reasonForJoining\": \"I am actively trying to maintain or improve my health\",\r\n   \"email\": \"{{Email}}\",\r\n   \"token\": \"{{umsToken}}\"   \r\n}\r\n"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:13:56 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "215",
              "body": "{\"token\":\"39b8615a-307d-419f-a503-4d4fa6c7021d\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "52582d51-85d8-a1af-3509-50c8ee725569",
              "name": "error",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMember/pub/activation",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"password\": \"Welcome123\",\r\n   \"reasonForJoining\": \"I am actively trying to maintain or improve my health\",\r\n   \"email\": \"{{Email}}\",\r\n   \"token\": \"{{umsToken}}\"   \r\n}\r\n"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "key": "Connection",
                  "value": "Keep-Alive",
                  "name": "Connection",
                  "description": ""
                },
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "name": "Content-Type",
                  "description": ""
                },
                {
                  "key": "Date",
                  "value": "Wed, 14 Dec 2016 00:42:55 GMT",
                  "name": "Date",
                  "description": ""
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked",
                  "name": "Transfer-Encoding",
                  "description": ""
                },
                {
                  "key": "X-Backside-Transport",
                  "value": "OK OK",
                  "name": "X-Backside-Transport",
                  "description": ""
                },
                {
                  "key": "X-Client-IP",
                  "value": "10.61.38.184",
                  "name": "X-Client-IP",
                  "description": ""
                },
                {
                  "key": "X-Global-Transaction-ID",
                  "value": "348720",
                  "name": "X-Global-Transaction-ID",
                  "description": ""
                }
              ],
              "cookie": [],
              "responseTime": "1537",
              "body": "{\"response\":{}}"
            },
            {
              "id": "6876c797-be9e-35c1-4434-6a7ee3f31230",
              "name": "response 2",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMember/pub/activation",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"password\": \"Welcome123\",\r\n   \"reasonForJoining\": \"I am actively trying to maintain or improve my health\",\r\n   \"email\": \"{{Email}}\",\r\n   \"token\": \"{{umsToken}}\"   \r\n}\r\n"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:07 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "237",
              "body": "{\"token\":\"a77eb61e-5dd3-4680-931e-49122ab21153\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "6fd1d3e8-5345-5fe8-5409-930f85729e1b",
              "name": "response 3",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMember/pub/activation",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"password\": \"Welcome123\",\r\n   \"reasonForJoining\": \"I am actively trying to maintain or improve my health\",\r\n   \"email\": \"{{Email}}\",\r\n   \"token\": \"{{umsToken}}\"   \r\n}\r\n"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:17 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "1830",
              "body": "{\"token\":\"1ed2d16e-9fc9-46ed-af8e-49e5b5207e79\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            }
          ]
        },
        {
          "_postman_id": "ea644dfe-ec3b-c07f-5d7d-0babea07241c",
          "name": "Wait for activation to finish 3",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{testPackageURL}}/rest/restTestPackage.ws.sleep?seconds=180",
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {},
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "c4c71451-6199-3d76-34c2-ae1e0dbd0c23",
          "name": "RA-147 : Verifying user has been added to UMS and is activated 3",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonObject = xml2Json(responseBody);\r",
                  "\r",
                  "try\r",
                  "{\r",
                  "\r",
                  "\r",
                  "tests[\"Verifying that User status is  Activated\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userStatus === \"A\";\r",
                  "\r",
                  "tests[\"Verifying that User ID is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userId === environment.Email ;\r",
                  "\r",
                  "tests[\"Verifying that Email is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.email === environment.Email ;\r",
                  "\r",
                  "tests[\"Verifying that First Name is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.givenName === environment.firstName ;\r",
                  "\r",
                  "tests[\"Verifying that Last name is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.surname === environment.lastName ;\r",
                  "\r",
                  "tests[\"Verifying that Member Type is as passed to UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.memberType === \"GROUP\" ;\r",
                  "\r",
                  "tests[\"Verifying that User Groups List is VITALITY_ACTIVE\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userGroupsList === \"VITALITY_ACTIVE\" ;\r",
                  "\r",
                  "\r",
                  "\r",
                  "//Setting up the token to an environment variable to be used in subsequent requests\r",
                  "\r",
                  "postman.setEnvironmentVariable(\"umsToken\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.token);\r",
                  "\r",
                  "postman.setEnvironmentVariable(\"aiaClientNumber\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaClientNumber);\r",
                  "postman.setEnvironmentVariable(\"aiaVitalityMemberNumber\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaVitalityMemberNumber);\r",
                  "postman.setEnvironmentVariable(\"aiaDsyPolicyNumber\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaDsyPolicyNumber);\r",
                  "\r",
                  "postman.setEnvironmentVariable(\"aiaVitalityId3\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaVitalityId);\r",
                  "\r",
                  "\r",
                  "}\r",
                  "\r",
                  "\r",
                  "catch(err){\r",
                  "    \r",
                  "  tests[\"Data in response does not exist\"] = false;  \r",
                  "\r",
                  "\r",
                  "}\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "{{UmsURL}}/{{UMSContext}}/UsermanagementService",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "text/xml",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:ser=\"http://service.usermanagement.aiaa.com.au\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <ser:searchUserRequest>\r\n         <source>VITALITY</source>\r\n         <userType></userType>\r\n         <userDetails>\r\n            <userName></userName>\r\n            <userId></userId>\r\n            <userDN></userDN>\r\n            <email>{{Email}}</email>\r\n            <givenName></givenName>\r\n            <surname></surname>\r\n            <webChannel></webChannel>\r\n            <token></token>\r\n            <fundIdentifier></fundIdentifier>\r\n            <eligibilityAssessorEmail></eligibilityAssessorEmail>\r\n            <activationURL></activationURL>\r\n            <consentURL></consentURL>\r\n            <!--1 or more repetitions:-->\r\n            <userRolesList></userRolesList>\r\n            <title></title>\r\n            <dateOfBirth></dateOfBirth>\r\n            <gender></gender>\r\n            <addressLine1></addressLine1>\r\n            <addressLine2></addressLine2>\r\n            <suburb></suburb>\r\n            <state></state>\r\n            <postcode></postcode>\r\n            <country></country>\r\n            <mobilePhone></mobilePhone>\r\n            <workPhone></workPhone>\r\n            <homePhone></homePhone>\r\n            <fax></fax>\r\n            <isRetailLifeInsured></isRetailLifeInsured>\r\n            <passwordRequestDate></passwordRequestDate>\r\n            <password></password>\r\n            <passwordRequestCount></passwordRequestCount>\r\n            <aiaProposalNumber></aiaProposalNumber>\r\n            <aiaProposalWritingAdviser></aiaProposalWritingAdviser>\r\n            <aiaCCAppTnCAcceptedDate></aiaCCAppTnCAcceptedDate>\r\n            <aiaCCAppTnCVersion></aiaCCAppTnCVersion>\r\n            <!--1 or more repetitions:-->\r\n            <userGroupsList></userGroupsList>\r\n            <!--1 or more repetitions:-->\r\n            <userGroupsDNList></userGroupsDNList>\r\n            <memberType></memberType>\r\n            <residentialPostcode></residentialPostcode>\r\n            <userStatus></userStatus>\r\n            <aiaClientNumber></aiaClientNumber>\r\n            <aiaVitalityMemberNumber></aiaVitalityMemberNumber>\r\n            <aiaDsyPolicyNumber></aiaDsyPolicyNumber>\r\n            <aiaVitalityCobrandingInfo></aiaVitalityCobrandingInfo>\r\n         </userDetails>\r\n      </ser:searchUserRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>\r\n\r\n"
            },
            "description": "A/C:\r\nGiven that members activated their membership\r\nWhen ESB gets the action\r\nThen their membership will be activated in UMS"
          },
          "response": []
        },
        {
          "_postman_id": "d47bae48-759c-db8d-2d63-676915da3b89",
          "name": "RA-270 : Trigger In-app Notification for 100 points",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "tests[\"Verifying that the notification is triggered successfully\"] =  body.status === \"Data Accepted\";"
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityBenefits.rs.notification.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"notificationMessage\":[  \r\n      {  \r\n         \"entityNumber\":\"{{aiaVitalityId1}}\",\r\n         \"uuid\":\"{{$guid}}\",\r\n         \"notification\":{  \r\n            \"pointsToTarget\":\"100\"\r\n         }\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "3faffcac-bbae-12e1-1959-52bcf2a64cf2",
          "name": "Clear pointsToTarget in Marketo",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "tests[\"Verifying that the request is accepted\"] =  body.status === \"Data Accepted\";"
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityBenefits.rs.notification.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"notificationMessage\": [\n    {\n      \"entityNumber\": \"{{aiaVitalityId1}}\",\n      \"transactionId\": \"{{$guid}}\",\n      \"notification\": {\n        \"pointsToTarget\": \"\"\n      }\n    }\n  ]\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "0973f2f0-e7a5-d189-2aa6-c309bc666865",
          "name": "RA-270 : Trigger In-app Notification for 50 points",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "tests[\"Verifying that the notification is triggered successfully\"] =  body.status === \"Data Accepted\";"
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityBenefits.rs.notification.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"notificationMessage\":[  \r\n      {  \r\n         \"entityNumber\":\"{{aiaVitalityId1}}\",\r\n         \"uuid\":\"{{$guid}}\",\r\n         \"notification\":{  \r\n            \"pointsToTarget\":\"50\"\r\n         }\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "74660988-0ab1-a54b-d924-f22bef9f29aa",
          "name": "Clear pointsToTarget in Marketo",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "tests[\"Verifying that the request is accepted\"] =  body.status === \"Data Accepted\";"
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityBenefits.rs.notification.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"notificationMessage\": [\n    {\n      \"entityNumber\": \"{{aiaVitalityId1}}\",\n      \"transactionId\": \"{{$guid}}\",\n      \"notification\": {\n        \"pointsToTarget\": \"\"\n      }\n    }\n  ]\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "d93e70ad-2451-d3aa-4171-39b90e14eb85",
          "name": "RA-270 : Trigger In-app Notification for 100 points - invalid Entity No",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 404\"] = responseCode.code === 404;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "tests[\"Verifying that the notification is not triggered\"] =  body.status === \"notification failed\";",
                  "",
                  "tests[\"Verifying that the failure reason is 'Not Found'\"] =  body.failureReaon === \"Not Found\";"
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityBenefits.rs.notification.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"notificationMessage\": [\n    {\n      \"entityNumber\": \"123456\",\n      \"transactionId\": \"{{$guid}}\",\n      \"notification\": {\n        \"pointsToTarget\": \"100\"\n      }\n    }\n  ]\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "bc87f55d-2745-2bb8-63fa-166cc5b81543",
          "name": "RA-261 : Trigger Bulk Push Notification Atleast one is valid",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "tests[\"Verifying that the notification is triggered successfully\"] =  body.status === \"Data Accepted\";",
                  "",
                  "tests[\"Verifying the failure\"] = body.failure[0].has(\"entityNumber: 0123456 was not found. No notification was sent to Marketo.\");"
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityBenefits.rs.notification.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"notificationMessage\":[  \r\n      {  \r\n         \"entityNumber\":\"{{aiaVitalityId1}}\",\r\n         \"transactionId\":\"{{$guid}}\",\r\n         \"notification\":{  \r\n            \"pointsToTarget\":\"100\"\r\n         }\r\n      },\r\n      {  \r\n         \"entityNumber\":\"{{aiaVitalityId2}}\",\r\n         \"uuid\":\"{{$guid}}\",\r\n         \"notification\":{  \r\n            \"pointsToTarget\":\"100\"\r\n         }\r\n      },\r\n      {  \r\n         \"entityNumber\":\"0123456\",\r\n         \"transactionId\":\"{{$guid}}\",\r\n         \"notification\":{  \r\n            \"pointsToTarget\":\"100\"\r\n         }\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "67a82200-6fec-0fb9-232d-c5224f860664",
          "name": "RA-261 : Trigger Bulk Push Notification All are invalid",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 404\"] = responseCode.code === 404;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "tests[\"Verifying that the notification is not triggered\"] =  body.status === \"notification failed\";",
                  "",
                  "tests[\"Verifying that the failure reason is 'Not Found'\"] =  body.failureReaon === \"Not Found\";"
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityBenefits.rs.notification.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"notificationMessage\":[  \r\n      {  \r\n         \"entityNumber\":\"123456\",\r\n         \"transactionId\":\"{{$guid}}\",\r\n         \"notification\":{  \r\n            \"pointsToTarget\":\"100\"\r\n         }\r\n      },\r\n      {  \r\n         \"entityNumber\":\"1234567\",\r\n         \"uuid\":\"{{$guid}}\",\r\n         \"notification\":{  \r\n            \"pointsToTarget\":\"100\"\r\n         }\r\n      },\r\n      {  \r\n         \"entityNumber\":\"1234568\",\r\n         \"transactionId\":\"{{$guid}}\",\r\n         \"notification\":{  \r\n            \"pointsToTarget\":\"100\"\r\n         }\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "18d30fd2-9cc1-e97a-0e94-ab7f4a818871",
          "name": "Clear pointsToTarget in Marketo - Bulk",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "tests[\"Verifying that the request is accepted\"] =  body.status === \"Data Accepted\";"
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityBenefits.rs.notification.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"notificationMessage\": [\n    {\n      \"entityNumber\": \"{{aiaVitalityId1}}\",\n      \"transactionId\": \"{{$guid}}\",\n      \"notification\": {\n        \"pointsToTarget\": \"\"\n      }\n    },\n    {\n      \"entityNumber\": \"{{aiaVitalityId2}}\",\n      \"transactionId\": \"{{$guid}}\",\n      \"notification\": {\n        \"pointsToTarget\": \"\"\n      }\n    },\n    {\n      \"entityNumber\": \"{{aiaVitalityId3}}\",\n      \"transactionId\": \"{{$guid}}\",\n      \"notification\": {\n        \"pointsToTarget\": \"\"\n      }\n    }\n  ]\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "7b894ea7-d8ea-4522-847e-4a966b429838",
          "name": "RA-270 : Trigger bulk In-app Notification for 100 points - 3 Entity Numbers",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "tests[\"Verifying that the notification is triggered successfully for all 3 entity numbers\"] =  body.status === \"Data Accepted\";"
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityBenefits.rs.notification.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"notificationMessage\":[  \r\n      {  \r\n         \"entityNumber\":\"{{aiaVitalityId1}}\",\r\n         \"transactionId\":\"{{$guid}}\",\r\n         \"notification\":{  \r\n            \"pointsToTarget\":\"100\"\r\n         }\r\n      },\r\n      {  \r\n         \"entityNumber\":\"{{aiaVitalityId2}}\",\r\n         \"uuid\":\"{{$guid}}\",\r\n         \"notification\":{  \r\n            \"pointsToTarget\":\"100\"\r\n         }\r\n      },\r\n      {  \r\n         \"entityNumber\":\"{{aiaVitalityId3}}\",\r\n         \"transactionId\":\"{{$guid}}\",\r\n         \"notification\":{  \r\n            \"pointsToTarget\":\"100\"\r\n         }\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "0bd595c4-20e6-3d60-760f-ef3e130465ac",
          "name": "Clear pointsToTarget in Marketo - Bulk",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "tests[\"Verifying that the request is accepted\"] =  body.status === \"Data Accepted\";"
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityBenefits.rs.notification.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"notificationMessage\": [\n    {\n      \"entityNumber\": \"{{aiaVitalityId1}}\",\n      \"transactionId\": \"{{$guid}}\",\n      \"notification\": {\n        \"pointsToTarget\": \"\"\n      }\n    },\n    {\n      \"entityNumber\": \"{{aiaVitalityId2}}\",\n      \"transactionId\": \"{{$guid}}\",\n      \"notification\": {\n        \"pointsToTarget\": \"\"\n      }\n    },\n    {\n      \"entityNumber\": \"{{aiaVitalityId3}}\",\n      \"transactionId\": \"{{$guid}}\",\n      \"notification\": {\n        \"pointsToTarget\": \"\"\n      }\n    }\n  ]\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "65b1029a-6331-d23d-e00f-eae5ee320e21",
          "name": "RA-270 : Trigger bulk In-app Notification for 50 points - 3 Entity Numbers",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "tests[\"Verifying that the notification is triggered successfully\"] =  body.status === \"Data Accepted\";"
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityBenefits.rs.notification.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"notificationMessage\":[  \r\n      {  \r\n         \"entityNumber\":\"{{aiaVitalityId1}}\",\r\n         \"transactionId\":\"{{$guid}}\",\r\n         \"notification\":{  \r\n            \"pointsToTarget\":\"50\"\r\n         }\r\n      },\r\n      {  \r\n         \"entityNumber\":\"{{aiaVitalityId2}}\",\r\n         \"uuid\":\"{{$guid}}\",\r\n         \"notification\":{  \r\n            \"pointsToTarget\":\"50\"\r\n         }\r\n      },\r\n      {  \r\n         \"entityNumber\":\"{{aiaVitalityId3}}\",\r\n         \"transactionId\":\"{{$guid}}\",\r\n         \"notification\":{  \r\n            \"pointsToTarget\":\"50\"\r\n         }\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "f97de6ed-2a50-372b-216f-f345c4fb224f",
      "name": "RA-263 : Resend Activation Email",
      "description": "",
      "item": [
        {
          "_postman_id": "afced781-69ae-4abc-41d0-f66cb705a0a9",
          "name": "RA-153: Enrolling a Member - New Process",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "tests[\"Verifying that Enrolment is successfull\"] =  body.status === \"Data Accepted\";"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "",
                  "//Generating Random Email address to pass into the data so that user duplication does not happen",
                  "function makeEmail() {",
                  "  var strValues = \"qpotvghysbnxui56z\";",
                  "  var strEmail = \"\";",
                  "  var strTmp;",
                  "  for (var i = 0; i < 10; i++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strTmp = \"\";",
                  "  strEmail = strEmail + \"@\";",
                  "  for (var j = 0; j < 8; j++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strEmail = strEmail + \"esbpii.com\";",
                  "  return strEmail;",
                  "}",
                  "",
                  "",
                  "//Setting up the random email to an environment variable",
                  "postman.setEnvironmentVariable(\"Email\", makeEmail());",
                  "console.log(\"Email: \"+environment.Email);",
                  "",
                  "var firstName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);",
                  "",
                  "//Setting up the firstName to an environment variable",
                  "postman.setEnvironmentVariable(\"firstName\", firstName);",
                  "console.log(\"firstName: \"+environment.firstName);",
                  "",
                  "var lastName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 8);",
                  "",
                  "//Setting up the lastName to an environment variable",
                  "postman.setEnvironmentVariable(\"lastName\", lastName);",
                  "console.log(\"lastName: \"+environment.lastName);",
                  "",
                  "",
                  "//Incrementing and Setting up the memberID to an environment variable",
                  "// var memberIdNumber = parseInt(environment.memberIdNumber)+1;",
                  "var memberIdNumber = Date.now();",
                  "console.log(memberIdNumber);",
                  "postman.setEnvironmentVariable(\"memberIdNumber\", memberIdNumber);",
                  "postman.setEnvironmentVariable(\"memberID\", \"RA\"+memberIdNumber.toString());",
                  "console.log(\"memberID :\"+environment.memberID);",
                  ""
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
            },
            "description": ""
          },
          "response": [
            {
              "id": "3b5cfd29-9bcf-0cab-ad1e-73c6f2a2e810",
              "name": "response 2",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:07 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "237",
              "body": "{\"token\":\"a77eb61e-5dd3-4680-931e-49122ab21153\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "41258d06-6d00-2da8-77e5-783757c3bcf4",
              "name": "error",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "Keep-Alive"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Wed, 14 Dec 2016 00:42:55 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-Backside-Transport",
                  "name": "X-Backside-Transport",
                  "value": "OK OK"
                },
                {
                  "description": "",
                  "key": "X-Client-IP",
                  "name": "X-Client-IP",
                  "value": "10.61.38.184"
                },
                {
                  "description": "",
                  "key": "X-Global-Transaction-ID",
                  "name": "X-Global-Transaction-ID",
                  "value": "348720"
                }
              ],
              "cookie": [],
              "responseTime": "1537",
              "body": "{\"response\":{}}"
            },
            {
              "id": "a91ac8ce-1929-6e36-1b16-3f1dbee90597",
              "name": "response 1",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:13:56 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "215",
              "body": "{\"token\":\"39b8615a-307d-419f-a503-4d4fa6c7021d\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "ab35f01e-f6b3-286a-9b79-f75193d3cef4",
              "name": "response 3",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:17 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "1830",
              "body": "{\"token\":\"1ed2d16e-9fc9-46ed-af8e-49e5b5207e79\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            }
          ]
        },
        {
          "_postman_id": "1b7bd959-c4fc-b372-f0a5-987f5604dcf1",
          "name": "Wait for enrolment to finish",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "{{password_ESB}}",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{testPackageURL}}/rest/restTestPackage.ws.sleep?seconds=200",
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {},
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "b35ad42b-38d9-e850-0321-dd249d934876",
          "name": "RA-147 : Verifying user has been added to UMS and is InActive Status",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonObject = xml2Json(responseBody);\r",
                  "\r",
                  "try\r",
                  "{\r",
                  "\r",
                  "\r",
                  "tests[\"Verifying that User status is Not Activated\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userStatus === \"I\";\r",
                  "\r",
                  "tests[\"Verifying that User ID is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userId === environment.Email ;\r",
                  "\r",
                  "tests[\"Verifying that Email is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.email === environment.Email ;\r",
                  "\r",
                  "tests[\"Verifying that First Name is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.givenName === environment.firstName ;\r",
                  "\r",
                  "tests[\"Verifying that Last name is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.surname === environment.lastName ;\r",
                  "\r",
                  "tests[\"Verifying that Member Type is as passed to UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.memberType === \"GROUP\" ;\r",
                  "\r",
                  "tests[\"Verifying that User Groups List is VITALITY_AWAITING_ACTIVATION\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userGroupsList === \"VITALITY_AWAITING_ACTIVATION\" ;\r",
                  "\r",
                  "\r",
                  "\r",
                  "//Setting up the token to an environment variable to be used in subsequent requests\r",
                  "\r",
                  "postman.setEnvironmentVariable(\"umsToken\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.token);\r",
                  "\r",
                  "postman.setEnvironmentVariable(\"aiaClientNumber\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaClientNumber);\r",
                  "postman.setEnvironmentVariable(\"aiaVitalityMemberNumber\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaVitalityMemberNumber);\r",
                  "postman.setEnvironmentVariable(\"aiaDsyPolicyNumber\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaDsyPolicyNumber);\r",
                  "\r",
                  "postman.setEnvironmentVariable(\"aiaVitalityId\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaVitalityId);\r",
                  "\r",
                  "\r",
                  "}\r",
                  "\r",
                  "\r",
                  "catch(err){\r",
                  "    \r",
                  "  tests[\"Data in response does not exist\"] = false;  \r",
                  "\r",
                  "\r",
                  "}\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "{{UmsURL}}/{{UMSContext}}/UsermanagementService",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "text/xml",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:ser=\"http://service.usermanagement.aiaa.com.au\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <ser:searchUserRequest>\n         <source>VITALITY</source>\n         <userType></userType>\n         <userDetails>\n            <userName></userName>\n            <userId></userId>\n            <userDN></userDN>\n            <email>{{Email}}</email>\n            <givenName></givenName>\n            <surname></surname>\n            <webChannel></webChannel>\n            <token></token>\n            <fundIdentifier></fundIdentifier>\n            <eligibilityAssessorEmail></eligibilityAssessorEmail>\n            <activationURL></activationURL>\n            <consentURL></consentURL>\n            <!--1 or more repetitions:-->\n            <userRolesList></userRolesList>\n            <title></title>\n            <dateOfBirth></dateOfBirth>\n            <gender></gender>\n            <addressLine1></addressLine1>\n            <addressLine2></addressLine2>\n            <suburb></suburb>\n            <state></state>\n            <postcode></postcode>\n            <country></country>\n            <mobilePhone></mobilePhone>\n            <workPhone></workPhone>\n            <homePhone></homePhone>\n            <fax></fax>\n            <isRetailLifeInsured></isRetailLifeInsured>\n            <passwordRequestDate></passwordRequestDate>\n            <password></password>\n            <passwordRequestCount></passwordRequestCount>\n            <aiaProposalNumber></aiaProposalNumber>\n            <aiaProposalWritingAdviser></aiaProposalWritingAdviser>\n            <aiaCCAppTnCAcceptedDate></aiaCCAppTnCAcceptedDate>\n            <aiaCCAppTnCVersion></aiaCCAppTnCVersion>\n            <!--1 or more repetitions:-->\n            <userGroupsList></userGroupsList>\n            <!--1 or more repetitions:-->\n            <userGroupsDNList></userGroupsDNList>\n            <memberType></memberType>\n            <residentialPostcode></residentialPostcode>\n            <userStatus></userStatus>\n            <aiaClientNumber></aiaClientNumber>\n            <aiaVitalityMemberNumber></aiaVitalityMemberNumber>\n            <aiaDsyPolicyNumber></aiaDsyPolicyNumber>\n            <aiaVitalityCobrandingInfo></aiaVitalityCobrandingInfo>\n         </userDetails>\n      </ser:searchUserRequest>\n   </soapenv:Body>\n</soapenv:Envelope>\n\n"
            },
            "description": "A/C:\r\nGiven that members activated their membership\r\nWhen ESB gets the action\r\nThen their membership will be activated in UMS"
          },
          "response": []
        },
        {
          "_postman_id": "74e326e6-77f1-552c-d462-67b4c0c4c80b",
          "name": "RA-263 : ESB Resend Activation Email",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "try{",
                  "    tests[\"Verifying that the status is 'activation email successfully resent to \"+environment.Email+\"'\"] =  body.status === \"activation email successfully resent to \"+environment.Email;",
                  "}",
                  "",
                  "catch(err){",
                  "    tests[\"Data in response does not exist\"] = false;  ",
                  "}",
                  ""
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.resendActivationMail.v1",
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n\t\"memberId\":\"{{memberID}}\",\r\n    \"relationshipName\":\"{{relationshipName}}\",\r\n    \"uuid\":\"{{$guid}}\"\r\n}\r\n"
            },
            "description": "Generated from a curl request: \ncurl -X POST -H \\\"Content-Type: application/json\\\" -H \\\"Authorization: Basic QWRtaW5pc3RyYXRvcjoxUDF0eXRoMw==\\\" -H \\\"Cache-Control: no-cache\\\" -H \\\"Postman-Token: c6d5e0d6-fb3b-87ac-27e3-a43dfd0b64af\\\" -d '{\\\"email\\\":\\\"um@um.com\\\"}' \\\"http://%7B%7Bbaseurl%7D%7D/rest/aiaVitalityMembershipEnrollment.ws.resendActivationMail.v1\\\""
          },
          "response": []
        },
        {
          "_postman_id": "29a1cdeb-d921-3d76-a558-fa33d2dfc14e",
          "name": "RA-153: Enrolling a Member - New Process",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "",
                  "",
                  "tests[\"Verifying that Enrolment is successfull\"] =  body.status === \"Data Accepted\";",
                  "",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "",
                  "//Generating Random Email address to pass into the data so that user duplication does not happen",
                  "function makeEmail() {",
                  "  var strValues = \"qpotvghysbnxui56z\";",
                  "  var strEmail = \"\";",
                  "  var strTmp;",
                  "  for (var i = 0; i < 10; i++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strTmp = \"\";",
                  "  strEmail = strEmail + \"@\";",
                  "  for (var j = 0; j < 8; j++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strEmail = strEmail + \"esbpii.com\";",
                  "  return strEmail;",
                  "}",
                  "",
                  "",
                  "//Setting up the random email to an environment variable",
                  "postman.setEnvironmentVariable(\"Email\", makeEmail());",
                  "console.log(\"Email: \"+environment.Email);",
                  "",
                  "var firstName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);",
                  "",
                  "//Setting up the firstName to an environment variable",
                  "postman.setEnvironmentVariable(\"firstName\", firstName);",
                  "console.log(\"firstName: \"+environment.firstName);",
                  "",
                  "var lastName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 8);",
                  "",
                  "//Setting up the lastName to an environment variable",
                  "postman.setEnvironmentVariable(\"lastName\", lastName);",
                  "console.log(\"lastName: \"+environment.lastName);",
                  "",
                  "",
                  "//Incrementing and Setting up the memberID to an environment variable",
                  "// var memberIdNumber = parseInt(environment.memberIdNumber)+1;",
                  "var memberIdNumber = Date.now();",
                  "console.log(memberIdNumber);",
                  "postman.setEnvironmentVariable(\"memberIdNumber\", memberIdNumber);",
                  "postman.setEnvironmentVariable(\"memberID\", \"RA\"+memberIdNumber.toString());",
                  "console.log(\"memberID :\"+environment.memberID);",
                  ""
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
            },
            "description": ""
          },
          "response": [
            {
              "id": "37252a30-d199-8cfa-352a-a80e1d274c9f",
              "name": "response 3",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:17 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "1830",
              "body": "{\"token\":\"1ed2d16e-9fc9-46ed-af8e-49e5b5207e79\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "786d4a88-e569-a360-1067-710c717f3767",
              "name": "error",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "Keep-Alive"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Wed, 14 Dec 2016 00:42:55 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-Backside-Transport",
                  "name": "X-Backside-Transport",
                  "value": "OK OK"
                },
                {
                  "description": "",
                  "key": "X-Client-IP",
                  "name": "X-Client-IP",
                  "value": "10.61.38.184"
                },
                {
                  "description": "",
                  "key": "X-Global-Transaction-ID",
                  "name": "X-Global-Transaction-ID",
                  "value": "348720"
                }
              ],
              "cookie": [],
              "responseTime": "1537",
              "body": "{\"response\":{}}"
            },
            {
              "id": "b37ce0fd-537e-d2ff-2627-f303c4d87115",
              "name": "response 2",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:07 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "237",
              "body": "{\"token\":\"a77eb61e-5dd3-4680-931e-49122ab21153\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "c378c505-f0a3-57f7-c4be-1a355e4a977e",
              "name": "response 1",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:13:56 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "215",
              "body": "{\"token\":\"39b8615a-307d-419f-a503-4d4fa6c7021d\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            }
          ]
        },
        {
          "_postman_id": "0a080641-9986-28ca-1783-3b7f30d1c7a9",
          "name": "Wait for enrolment to finish",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "{{password_ESB}}",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{testPackageURL}}/rest/restTestPackage.ws.sleep?seconds=200",
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {},
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "dc773030-9479-5fae-cda8-4fddc3a58c3b",
          "name": "RA-147 : Verifying user has been added to UMS and is InActive Status",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonObject = xml2Json(responseBody);\r",
                  "\r",
                  "try\r",
                  "{\r",
                  "    tests[\"Verifying that User status is Not Activated\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userStatus === \"I\";\r",
                  "    tests[\"Verifying that User ID is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userId === environment.Email ;\r",
                  "    tests[\"Verifying that Email is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.email === environment.Email ;\r",
                  "    tests[\"Verifying that First Name is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.givenName === environment.firstName ;\r",
                  "    tests[\"Verifying that Last name is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.surname === environment.lastName ;\r",
                  "    tests[\"Verifying that Member Type is as passed to UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.memberType === \"GROUP\" ;\r",
                  "    tests[\"Verifying that User Groups List is VITALITY_AWAITING_ACTIVATION\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userGroupsList === \"VITALITY_AWAITING_ACTIVATION\" ;\r",
                  "    \r",
                  "    //Setting up the token to an environment variable to be used in subsequent requests\r",
                  "    postman.setEnvironmentVariable(\"umsToken\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.token);\r",
                  "    \r",
                  "    postman.setEnvironmentVariable(\"aiaClientNumber\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaClientNumber);\r",
                  "    postman.setEnvironmentVariable(\"aiaVitalityMemberNumber\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaVitalityMemberNumber);\r",
                  "    postman.setEnvironmentVariable(\"aiaDsyPolicyNumber\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaDsyPolicyNumber);\r",
                  "    postman.setEnvironmentVariable(\"aiaVitalityId\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaVitalityId);\r",
                  "}\r",
                  "\r",
                  "catch(err){\r",
                  "    tests[\"Data in response does not exist\"] = false;  \r",
                  "}\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "{{UmsURL}}/{{UMSContext}}/UsermanagementService",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "text/xml",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:ser=\"http://service.usermanagement.aiaa.com.au\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <ser:searchUserRequest>\n         <source>VITALITY</source>\n         <userType></userType>\n         <userDetails>\n            <userName></userName>\n            <userId></userId>\n            <userDN></userDN>\n            <email>{{Email}}</email>\n            <givenName></givenName>\n            <surname></surname>\n            <webChannel></webChannel>\n            <token></token>\n            <fundIdentifier></fundIdentifier>\n            <eligibilityAssessorEmail></eligibilityAssessorEmail>\n            <activationURL></activationURL>\n            <consentURL></consentURL>\n            <!--1 or more repetitions:-->\n            <userRolesList></userRolesList>\n            <title></title>\n            <dateOfBirth></dateOfBirth>\n            <gender></gender>\n            <addressLine1></addressLine1>\n            <addressLine2></addressLine2>\n            <suburb></suburb>\n            <state></state>\n            <postcode></postcode>\n            <country></country>\n            <mobilePhone></mobilePhone>\n            <workPhone></workPhone>\n            <homePhone></homePhone>\n            <fax></fax>\n            <isRetailLifeInsured></isRetailLifeInsured>\n            <passwordRequestDate></passwordRequestDate>\n            <password></password>\n            <passwordRequestCount></passwordRequestCount>\n            <aiaProposalNumber></aiaProposalNumber>\n            <aiaProposalWritingAdviser></aiaProposalWritingAdviser>\n            <aiaCCAppTnCAcceptedDate></aiaCCAppTnCAcceptedDate>\n            <aiaCCAppTnCVersion></aiaCCAppTnCVersion>\n            <!--1 or more repetitions:-->\n            <userGroupsList></userGroupsList>\n            <!--1 or more repetitions:-->\n            <userGroupsDNList></userGroupsDNList>\n            <memberType></memberType>\n            <residentialPostcode></residentialPostcode>\n            <userStatus></userStatus>\n            <aiaClientNumber></aiaClientNumber>\n            <aiaVitalityMemberNumber></aiaVitalityMemberNumber>\n            <aiaDsyPolicyNumber></aiaDsyPolicyNumber>\n            <aiaVitalityCobrandingInfo></aiaVitalityCobrandingInfo>\n         </userDetails>\n      </ser:searchUserRequest>\n   </soapenv:Body>\n</soapenv:Envelope>\n\n"
            },
            "description": "A/C:\r\nGiven that members activated their membership\r\nWhen ESB gets the action\r\nThen their membership will be activated in UMS"
          },
          "response": []
        },
        {
          "_postman_id": "1ae4d45e-ba64-c735-a8ac-8741af26f7b8",
          "name": "RA-153: Activate member - New Process",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "",
                  "//tests[\"Verifying that Activation is successfull\"] =  body.status === \"Activation Successful\";",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{ESBURL}}/rest/aiaVitalityMember/pub/activation",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"password\": \"Welcome123\",\r\n   \"reasonForJoining\": \"I am actively trying to maintain or improve my health\",\r\n   \"email\": \"{{Email}}\",\r\n   \"token\": \"{{umsToken}}\"   \r\n}\r\n"
            },
            "description": ""
          },
          "response": [
            {
              "id": "0f43a66d-7b2d-b9da-bd1c-d3aa457ba235",
              "name": "response 2",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMember/pub/activation",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"password\": \"Welcome123\",\r\n   \"reasonForJoining\": \"I am actively trying to maintain or improve my health\",\r\n   \"email\": \"{{Email}}\",\r\n   \"token\": \"{{umsToken}}\"   \r\n}\r\n"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:07 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "237",
              "body": "{\"token\":\"a77eb61e-5dd3-4680-931e-49122ab21153\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "ad955505-514b-9bf4-b369-ae53a7c12be5",
              "name": "response 3",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMember/pub/activation",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"password\": \"Welcome123\",\r\n   \"reasonForJoining\": \"I am actively trying to maintain or improve my health\",\r\n   \"email\": \"{{Email}}\",\r\n   \"token\": \"{{umsToken}}\"   \r\n}\r\n"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:17 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "1830",
              "body": "{\"token\":\"1ed2d16e-9fc9-46ed-af8e-49e5b5207e79\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "c4bcee62-87bb-0433-f617-d20c40329e37",
              "name": "response 1",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMember/pub/activation",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"password\": \"Welcome123\",\r\n   \"reasonForJoining\": \"I am actively trying to maintain or improve my health\",\r\n   \"email\": \"{{Email}}\",\r\n   \"token\": \"{{umsToken}}\"   \r\n}\r\n"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:13:56 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "215",
              "body": "{\"token\":\"39b8615a-307d-419f-a503-4d4fa6c7021d\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "fb67abdb-ed4e-5e4d-ad8f-aa286b02ba16",
              "name": "error",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMember/pub/activation",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"password\": \"Welcome123\",\r\n   \"reasonForJoining\": \"I am actively trying to maintain or improve my health\",\r\n   \"email\": \"{{Email}}\",\r\n   \"token\": \"{{umsToken}}\"   \r\n}\r\n"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "Keep-Alive"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Wed, 14 Dec 2016 00:42:55 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-Backside-Transport",
                  "name": "X-Backside-Transport",
                  "value": "OK OK"
                },
                {
                  "description": "",
                  "key": "X-Client-IP",
                  "name": "X-Client-IP",
                  "value": "10.61.38.184"
                },
                {
                  "description": "",
                  "key": "X-Global-Transaction-ID",
                  "name": "X-Global-Transaction-ID",
                  "value": "348720"
                }
              ],
              "cookie": [],
              "responseTime": "1537",
              "body": "{\"response\":{}}"
            }
          ]
        },
        {
          "_postman_id": "d06a8d41-6a16-4485-d065-aa246156c4cf",
          "name": "Wait for activation to finish",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{testPackageURL}}/rest/restTestPackage.ws.sleep?seconds=120",
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {},
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "620fa59e-938c-2277-1441-e8339e2d755f",
          "name": "RA-147 : Verifying user has been added to UMS and is activated",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonObject = xml2Json(responseBody);\r",
                  "\r",
                  "try\r",
                  "{\r",
                  "\r",
                  "\r",
                  "tests[\"Verifying that User status is  Activated\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userStatus === \"A\";\r",
                  "\r",
                  "tests[\"Verifying that User ID is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userId === environment.Email ;\r",
                  "\r",
                  "tests[\"Verifying that Email is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.email === environment.Email ;\r",
                  "\r",
                  "tests[\"Verifying that First Name is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.givenName === environment.firstName ;\r",
                  "\r",
                  "tests[\"Verifying that Last name is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.surname === environment.lastName ;\r",
                  "\r",
                  "tests[\"Verifying that Member Type is as passed to UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.memberType === \"GROUP\" ;\r",
                  "\r",
                  "tests[\"Verifying that User Groups List is VITALITY_ACTIVE\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userGroupsList === \"VITALITY_ACTIVE\" ;\r",
                  "\r",
                  "\r",
                  "\r",
                  "//Setting up the token to an environment variable to be used in subsequent requests\r",
                  "\r",
                  "postman.setEnvironmentVariable(\"umsToken\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.token);\r",
                  "\r",
                  "postman.setEnvironmentVariable(\"aiaClientNumber\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaClientNumber);\r",
                  "postman.setEnvironmentVariable(\"aiaVitalityMemberNumber\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaVitalityMemberNumber);\r",
                  "postman.setEnvironmentVariable(\"aiaDsyPolicyNumber\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaDsyPolicyNumber);\r",
                  "\r",
                  "postman.setEnvironmentVariable(\"aiaVitalityId\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaVitalityId);\r",
                  "\r",
                  "\r",
                  "}\r",
                  "\r",
                  "\r",
                  "catch(err){\r",
                  "    \r",
                  "  tests[\"Data in response does not exist\"] = false;  \r",
                  "\r",
                  "\r",
                  "}\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "{{UmsURL}}/{{UMSContext}}/UsermanagementService",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "text/xml",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:ser=\"http://service.usermanagement.aiaa.com.au\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <ser:searchUserRequest>\r\n         <source>VITALITY</source>\r\n         <userType></userType>\r\n         <userDetails>\r\n            <userName></userName>\r\n            <userId></userId>\r\n            <userDN></userDN>\r\n            <email>{{Email}}</email>\r\n            <givenName></givenName>\r\n            <surname></surname>\r\n            <webChannel></webChannel>\r\n            <token></token>\r\n            <fundIdentifier></fundIdentifier>\r\n            <eligibilityAssessorEmail></eligibilityAssessorEmail>\r\n            <activationURL></activationURL>\r\n            <consentURL></consentURL>\r\n            <!--1 or more repetitions:-->\r\n            <userRolesList></userRolesList>\r\n            <title></title>\r\n            <dateOfBirth></dateOfBirth>\r\n            <gender></gender>\r\n            <addressLine1></addressLine1>\r\n            <addressLine2></addressLine2>\r\n            <suburb></suburb>\r\n            <state></state>\r\n            <postcode></postcode>\r\n            <country></country>\r\n            <mobilePhone></mobilePhone>\r\n            <workPhone></workPhone>\r\n            <homePhone></homePhone>\r\n            <fax></fax>\r\n            <isRetailLifeInsured></isRetailLifeInsured>\r\n            <passwordRequestDate></passwordRequestDate>\r\n            <password></password>\r\n            <passwordRequestCount></passwordRequestCount>\r\n            <aiaProposalNumber></aiaProposalNumber>\r\n            <aiaProposalWritingAdviser></aiaProposalWritingAdviser>\r\n            <aiaCCAppTnCAcceptedDate></aiaCCAppTnCAcceptedDate>\r\n            <aiaCCAppTnCVersion></aiaCCAppTnCVersion>\r\n            <!--1 or more repetitions:-->\r\n            <userGroupsList></userGroupsList>\r\n            <!--1 or more repetitions:-->\r\n            <userGroupsDNList></userGroupsDNList>\r\n            <memberType></memberType>\r\n            <residentialPostcode></residentialPostcode>\r\n            <userStatus></userStatus>\r\n            <aiaClientNumber></aiaClientNumber>\r\n            <aiaVitalityMemberNumber></aiaVitalityMemberNumber>\r\n            <aiaDsyPolicyNumber></aiaDsyPolicyNumber>\r\n            <aiaVitalityCobrandingInfo></aiaVitalityCobrandingInfo>\r\n         </userDetails>\r\n      </ser:searchUserRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>\r\n\r\n"
            },
            "description": "A/C:\r\nGiven that members activated their membership\r\nWhen ESB gets the action\r\nThen their membership will be activated in UMS"
          },
          "response": []
        },
        {
          "_postman_id": "bf76feb9-e7fd-30fb-c7b1-ddfc98fcda27",
          "name": "RA-263 : ESB Resend Activation Email - Activated Member",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 400\"] = responseCode.code === 400;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "try{",
                  "    // tests[\"Verifying that the response contails the correct Email Address\"] =  body.email === environment.Email;",
                  "    tests[\"Verifying that the status is 'activation email successfully resent'\"] =  body.status === \"Resend Activation Mail cannot be sent for member as member has either not been enrolled or has already activated account\";",
                  "}",
                  "",
                  "catch(err){",
                  "    tests[\"Data in response does not exist\"] = false;  ",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.resendActivationMail.v1",
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n\t\"memberId\":\"{{memberID}}\",\r\n    \"relationshipName\":\"{{relationshipName}}\",\r\n    \"uuid\":\"{{$guid}}\"\r\n}\r\n"
            },
            "description": "Generated from a curl request: \ncurl -X POST -H \\\"Content-Type: application/json\\\" -H \\\"Authorization: Basic QWRtaW5pc3RyYXRvcjoxUDF0eXRoMw==\\\" -H \\\"Cache-Control: no-cache\\\" -H \\\"Postman-Token: c6d5e0d6-fb3b-87ac-27e3-a43dfd0b64af\\\" -d '{\\\"email\\\":\\\"um@um.com\\\"}' \\\"http://%7B%7Bbaseurl%7D%7D/rest/aiaVitalityMembershipEnrollment.ws.resendActivationMail.v1\\\""
          },
          "response": []
        },
        {
          "_postman_id": "25bb1083-d0ed-04b2-e749-67744e432ea1",
          "name": "RA-263 : ESB Resend Activation Email - Invalid MemberID",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 404\"] = responseCode.code === 404;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "try{",
                  "    // tests[\"Verifying that the response contails the correct Email Address\"] =  body.email === environment.Email;",
                  "    tests[\"Verifying that the status is 'Not Found'\"] =  body.status === \"Not Found\";",
                  "}",
                  "",
                  "catch(err){",
                  "    tests[\"Data in response does not exist\"] = false;  ",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.resendActivationMail.v1",
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n\t\"memberId\":\"eraefw34234534\",\r\n    \"relationshipName\":\"{{relationshipName}}\",\r\n    \"uuid\":\"{{$guid}}\"\r\n}\r\n"
            },
            "description": "Generated from a curl request: \ncurl -X POST -H \\\"Content-Type: application/json\\\" -H \\\"Authorization: Basic QWRtaW5pc3RyYXRvcjoxUDF0eXRoMw==\\\" -H \\\"Cache-Control: no-cache\\\" -H \\\"Postman-Token: c6d5e0d6-fb3b-87ac-27e3-a43dfd0b64af\\\" -d '{\\\"email\\\":\\\"um@um.com\\\"}' \\\"http://%7B%7Bbaseurl%7D%7D/rest/aiaVitalityMembershipEnrollment.ws.resendActivationMail.v1\\\""
          },
          "response": []
        },
        {
          "_postman_id": "177cb659-6d71-0272-7d13-7149e3f6ce1b",
          "name": "RA-263 : ESB Resend Activation Email - Invalid Relationship Name",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 404\"] = responseCode.code === 404;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "try{",
                  "    // tests[\"Verifying that the response contails the correct Email Address\"] =  body.email === environment.Email;",
                  "    tests[\"Verifying that the status is 'Not Found'\"] =  body.status === \"Not Found\";",
                  "}",
                  "",
                  "catch(err){",
                  "    tests[\"Data in response does not exist\"] = false;  ",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.resendActivationMail.v1",
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n\t\"memberId\":\"{{memberID}}\",\r\n    \"relationshipName\":\"SomeRelationshipName\",\r\n    \"uuid\":\"{{$guid}}\"\r\n}\r\n"
            },
            "description": "Generated from a curl request: \ncurl -X POST -H \\\"Content-Type: application/json\\\" -H \\\"Authorization: Basic QWRtaW5pc3RyYXRvcjoxUDF0eXRoMw==\\\" -H \\\"Cache-Control: no-cache\\\" -H \\\"Postman-Token: c6d5e0d6-fb3b-87ac-27e3-a43dfd0b64af\\\" -d '{\\\"email\\\":\\\"um@um.com\\\"}' \\\"http://%7B%7Bbaseurl%7D%7D/rest/aiaVitalityMembershipEnrollment.ws.resendActivationMail.v1\\\""
          },
          "response": []
        },
        {
          "_postman_id": "0e92e810-fbde-df91-998a-dc1ecdf10ec1",
          "name": "RA-153: Enrolling a Member - New Process",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "",
                  "",
                  "tests[\"Verifying that Enrolment is successfull\"] =  body.status === \"Data Accepted\";",
                  "",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "",
                  "//Generating Random Email address to pass into the data so that user duplication does not happen",
                  "function makeEmail() {",
                  "  var strValues = \"qpotvghysbnxui56z\";",
                  "  var strEmail = \"\";",
                  "  var strTmp;",
                  "  for (var i = 0; i < 10; i++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strTmp = \"\";",
                  "  strEmail = strEmail + \"@\";",
                  "  for (var j = 0; j < 8; j++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strEmail = strEmail + \"esbpii.com\";",
                  "  return strEmail;",
                  "}",
                  "",
                  "",
                  "//Setting up the random email to an environment variable",
                  "postman.setEnvironmentVariable(\"Email\", makeEmail());",
                  "console.log(\"Email: \"+environment.Email);",
                  "",
                  "var firstName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);",
                  "",
                  "//Setting up the firstName to an environment variable",
                  "postman.setEnvironmentVariable(\"firstName\", firstName);",
                  "console.log(\"firstName: \"+environment.firstName);",
                  "",
                  "var lastName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 8);",
                  "",
                  "//Setting up the lastName to an environment variable",
                  "postman.setEnvironmentVariable(\"lastName\", lastName);",
                  "console.log(\"lastName: \"+environment.lastName);",
                  "",
                  "",
                  "//Incrementing and Setting up the memberID to an environment variable",
                  "// var memberIdNumber = parseInt(environment.memberIdNumber)+1;",
                  "var memberIdNumber = Date.now();",
                  "console.log(memberIdNumber);",
                  "postman.setEnvironmentVariable(\"memberIdNumber\", memberIdNumber);",
                  "postman.setEnvironmentVariable(\"memberID\", \"RA\"+memberIdNumber.toString());",
                  "console.log(\"memberID :\"+environment.memberID);",
                  ""
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
            },
            "description": ""
          },
          "response": [
            {
              "id": "181cad91-fbea-6913-ea5a-efb765e84acd",
              "name": "error",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "Keep-Alive"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Wed, 14 Dec 2016 00:42:55 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-Backside-Transport",
                  "name": "X-Backside-Transport",
                  "value": "OK OK"
                },
                {
                  "description": "",
                  "key": "X-Client-IP",
                  "name": "X-Client-IP",
                  "value": "10.61.38.184"
                },
                {
                  "description": "",
                  "key": "X-Global-Transaction-ID",
                  "name": "X-Global-Transaction-ID",
                  "value": "348720"
                }
              ],
              "cookie": [],
              "responseTime": "1537",
              "body": "{\"response\":{}}"
            },
            {
              "id": "714780d8-f44c-af70-f043-d5ffa59364b6",
              "name": "response 1",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:13:56 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "215",
              "body": "{\"token\":\"39b8615a-307d-419f-a503-4d4fa6c7021d\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "8d286434-e5c9-b9a3-9082-64f308f8fb66",
              "name": "response 2",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:07 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "237",
              "body": "{\"token\":\"a77eb61e-5dd3-4680-931e-49122ab21153\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "b3f1ebae-b5e1-8f69-f885-7ab7b9bb2600",
              "name": "response 3",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:17 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "1830",
              "body": "{\"token\":\"1ed2d16e-9fc9-46ed-af8e-49e5b5207e79\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            }
          ]
        },
        {
          "_postman_id": "62bc35fc-1de9-f395-8c63-1bbe989a7331",
          "name": "RA-263 : ESB Resend Activation Email - Not Enrolled",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 400\"] = responseCode.code === 400;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "try{",
                  "    tests[\"Verifying that the status is 'activation email successfully resent'\"] =  body.status === \"Resend Activation Mail cannot be sent for member as member has either not been enrolled or has already activated account\";",
                  "}",
                  "",
                  "catch(err){",
                  "    tests[\"Data in response does not exist\"] = false;  ",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.resendActivationMail.v1",
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n\t\"memberId\":\"{{memberID}}\",\r\n    \"relationshipName\":\"{{relationshipName}}\",\r\n    \"uuid\":\"{{$guid}}\"\r\n}\r\n"
            },
            "description": "Generated from a curl request: \ncurl -X POST -H \\\"Content-Type: application/json\\\" -H \\\"Authorization: Basic QWRtaW5pc3RyYXRvcjoxUDF0eXRoMw==\\\" -H \\\"Cache-Control: no-cache\\\" -H \\\"Postman-Token: c6d5e0d6-fb3b-87ac-27e3-a43dfd0b64af\\\" -d '{\\\"email\\\":\\\"um@um.com\\\"}' \\\"http://%7B%7Bbaseurl%7D%7D/rest/aiaVitalityMembershipEnrollment.ws.resendActivationMail.v1\\\""
          },
          "response": []
        },
        {
          "_postman_id": "16eac3aa-76ec-bc41-bd8b-915d44ea1682",
          "name": "RA-153: Enrolling a Member - New Process",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "",
                  "",
                  "tests[\"Verifying that Enrolment is successfull\"] =  body.status === \"Data Accepted\";",
                  "",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "",
                  "//Generating Random Email address to pass into the data so that user duplication does not happen",
                  "function makeEmail() {",
                  "  var strValues = \"qpotvghysbnxui56z\";",
                  "  var strEmail = \"\";",
                  "  var strTmp;",
                  "  for (var i = 0; i < 10; i++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strTmp = \"\";",
                  "  strEmail = strEmail + \"@\";",
                  "  for (var j = 0; j < 8; j++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strEmail = strEmail + \"esbpii.com\";",
                  "  return strEmail;",
                  "}",
                  "",
                  "",
                  "//Setting up the random email to an environment variable",
                  "postman.setEnvironmentVariable(\"Email\", makeEmail());",
                  "console.log(\"Email: \"+environment.Email);",
                  "",
                  "var firstName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);",
                  "",
                  "//Setting up the firstName to an environment variable",
                  "postman.setEnvironmentVariable(\"firstName\", firstName);",
                  "console.log(\"firstName: \"+environment.firstName);",
                  "",
                  "var lastName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 8);",
                  "",
                  "//Setting up the lastName to an environment variable",
                  "postman.setEnvironmentVariable(\"lastName\", lastName);",
                  "console.log(\"lastName: \"+environment.lastName);",
                  "",
                  "",
                  "//Incrementing and Setting up the memberID to an environment variable",
                  "// var memberIdNumber = parseInt(environment.memberIdNumber)+1;",
                  "var memberIdNumber = Date.now();",
                  "console.log(memberIdNumber);",
                  "postman.setEnvironmentVariable(\"memberIdNumber\", memberIdNumber);",
                  "postman.setEnvironmentVariable(\"memberID\", \"RA\"+memberIdNumber.toString());",
                  "console.log(\"memberID :\"+environment.memberID);",
                  ""
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
            },
            "description": ""
          },
          "response": [
            {
              "id": "1755ebf8-fe22-6396-f16f-8882961fa5e1",
              "name": "response 1",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:13:56 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "215",
              "body": "{\"token\":\"39b8615a-307d-419f-a503-4d4fa6c7021d\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "52e8f2ff-a8e0-69b3-31cd-9c6df4981755",
              "name": "response 2",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:07 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "237",
              "body": "{\"token\":\"a77eb61e-5dd3-4680-931e-49122ab21153\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "dac30cb0-1653-8531-da0f-f329e67e9c42",
              "name": "error",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "Keep-Alive"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Wed, 14 Dec 2016 00:42:55 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-Backside-Transport",
                  "name": "X-Backside-Transport",
                  "value": "OK OK"
                },
                {
                  "description": "",
                  "key": "X-Client-IP",
                  "name": "X-Client-IP",
                  "value": "10.61.38.184"
                },
                {
                  "description": "",
                  "key": "X-Global-Transaction-ID",
                  "name": "X-Global-Transaction-ID",
                  "value": "348720"
                }
              ],
              "cookie": [],
              "responseTime": "1537",
              "body": "{\"response\":{}}"
            },
            {
              "id": "fb33a3bc-2a2a-1389-4982-b2c89a7f0784",
              "name": "response 3",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:17 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "1830",
              "body": "{\"token\":\"1ed2d16e-9fc9-46ed-af8e-49e5b5207e79\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            }
          ]
        },
        {
          "_postman_id": "24f8399a-2439-74e4-0081-c2266257ddcd",
          "name": "Wait for enrolment to finish",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "{{password_ESB}}",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{testPackageURL}}/rest/restTestPackage.ws.sleep?seconds=200",
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {},
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "ca883ba8-ca2a-81c1-5d4a-afd31cd11b33",
          "name": "RA-147 : Verifying user has been added to UMS and is InActive Status",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonObject = xml2Json(responseBody);\r",
                  "\r",
                  "try\r",
                  "{\r",
                  "    tests[\"Verifying that User status is Not Activated\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userStatus === \"I\";\r",
                  "    tests[\"Verifying that User ID is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userId === environment.Email ;\r",
                  "    tests[\"Verifying that Email is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.email === environment.Email ;\r",
                  "    tests[\"Verifying that First Name is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.givenName === environment.firstName ;\r",
                  "    tests[\"Verifying that Last name is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.surname === environment.lastName ;\r",
                  "    tests[\"Verifying that Member Type is as passed to UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.memberType === \"GROUP\" ;\r",
                  "    tests[\"Verifying that User Groups List is VITALITY_AWAITING_ACTIVATION\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userGroupsList === \"VITALITY_AWAITING_ACTIVATION\" ;\r",
                  "    \r",
                  "    //Setting up the token to an environment variable to be used in subsequent requests\r",
                  "    postman.setEnvironmentVariable(\"umsToken\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.token);\r",
                  "    \r",
                  "    postman.setEnvironmentVariable(\"aiaClientNumber\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaClientNumber);\r",
                  "    postman.setEnvironmentVariable(\"aiaVitalityMemberNumber\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaVitalityMemberNumber);\r",
                  "    postman.setEnvironmentVariable(\"aiaDsyPolicyNumber\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaDsyPolicyNumber);\r",
                  "    postman.setEnvironmentVariable(\"aiaVitalityId\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaVitalityId);\r",
                  "}\r",
                  "\r",
                  "catch(err){\r",
                  "    tests[\"Data in response does not exist\"] = false;  \r",
                  "}\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "{{UmsURL}}/{{UMSContext}}/UsermanagementService",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "text/xml",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:ser=\"http://service.usermanagement.aiaa.com.au\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <ser:searchUserRequest>\n         <source>VITALITY</source>\n         <userType></userType>\n         <userDetails>\n            <userName></userName>\n            <userId></userId>\n            <userDN></userDN>\n            <email>{{Email}}</email>\n            <givenName></givenName>\n            <surname></surname>\n            <webChannel></webChannel>\n            <token></token>\n            <fundIdentifier></fundIdentifier>\n            <eligibilityAssessorEmail></eligibilityAssessorEmail>\n            <activationURL></activationURL>\n            <consentURL></consentURL>\n            <!--1 or more repetitions:-->\n            <userRolesList></userRolesList>\n            <title></title>\n            <dateOfBirth></dateOfBirth>\n            <gender></gender>\n            <addressLine1></addressLine1>\n            <addressLine2></addressLine2>\n            <suburb></suburb>\n            <state></state>\n            <postcode></postcode>\n            <country></country>\n            <mobilePhone></mobilePhone>\n            <workPhone></workPhone>\n            <homePhone></homePhone>\n            <fax></fax>\n            <isRetailLifeInsured></isRetailLifeInsured>\n            <passwordRequestDate></passwordRequestDate>\n            <password></password>\n            <passwordRequestCount></passwordRequestCount>\n            <aiaProposalNumber></aiaProposalNumber>\n            <aiaProposalWritingAdviser></aiaProposalWritingAdviser>\n            <aiaCCAppTnCAcceptedDate></aiaCCAppTnCAcceptedDate>\n            <aiaCCAppTnCVersion></aiaCCAppTnCVersion>\n            <!--1 or more repetitions:-->\n            <userGroupsList></userGroupsList>\n            <!--1 or more repetitions:-->\n            <userGroupsDNList></userGroupsDNList>\n            <memberType></memberType>\n            <residentialPostcode></residentialPostcode>\n            <userStatus></userStatus>\n            <aiaClientNumber></aiaClientNumber>\n            <aiaVitalityMemberNumber></aiaVitalityMemberNumber>\n            <aiaDsyPolicyNumber></aiaDsyPolicyNumber>\n            <aiaVitalityCobrandingInfo></aiaVitalityCobrandingInfo>\n         </userDetails>\n      </ser:searchUserRequest>\n   </soapenv:Body>\n</soapenv:Envelope>\n\n"
            },
            "description": "A/C:\r\nGiven that members activated their membership\r\nWhen ESB gets the action\r\nThen their membership will be activated in UMS"
          },
          "response": []
        },
        {
          "_postman_id": "c05be7af-087b-0076-5ccf-3cc89a402482",
          "name": "Delete User in UMS",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 400 \r",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;\r",
                  "\r",
                  "var jsonObject = xml2Json(responseBody);\r",
                  "\r",
                  "try\r",
                  "{\r",
                  "    tests[\"Verifying that result status is success\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:deleteUserResponse'].result.successFlag === \"true\";\r",
                  "    tests[\"Verifying that the deletion is successful\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:deleteUserResponse'].userDeletionSuccessful === \"true\";\r",
                  "}\r",
                  "catch(err){\r",
                  "    tests[\"Data in response does not exist\"] = false;  \r",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "{{UmsURL}}/{{UMSContext}}e/UsermanagementService",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "text/xml",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:ser=\"http://service.usermanagement.aiaa.com.au\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <ser:deleteUserRequest>\r\n         <source>VITALITY</source>\r\n         <userType>?</userType>\r\n         <userDetails>\r\n            <userName>?</userName>\r\n            <userId>{{Email}}</userId>\r\n            <userDN>?</userDN>\r\n            <email>?</email>\r\n            <givenName>?</givenName>\r\n            <surname>?</surname>\r\n            <webChannel>?</webChannel>\r\n            <token>?</token>\r\n            <fundIdentifier>?</fundIdentifier>\r\n            <eligibilityAssessorEmail>?</eligibilityAssessorEmail>\r\n            <activationURL>?</activationURL>\r\n            <consentURL>?</consentURL>\r\n            <!--1 or more repetitions:-->\r\n            <userRolesList>?</userRolesList>\r\n            <title>?</title>\r\n            <dateOfBirth>?</dateOfBirth>\r\n            <gender>?</gender>\r\n            <addressLine1>?</addressLine1>\r\n            <addressLine2>?</addressLine2>\r\n            <suburb>?</suburb>\r\n            <state>?</state>\r\n            <postcode>?</postcode>\r\n            <country>?</country>\r\n            <mobilePhone>?</mobilePhone>\r\n            <workPhone>?</workPhone>\r\n            <homePhone>?</homePhone>\r\n            <fax>?</fax>\r\n            <isRetailLifeInsured>?</isRetailLifeInsured>\r\n            <passwordRequestDate>?</passwordRequestDate>\r\n            <password>?</password>\r\n            <passwordRequestCount>?</passwordRequestCount>\r\n            <aiaProposalNumber>?</aiaProposalNumber>\r\n            <aiaProposalWritingAdviser>?</aiaProposalWritingAdviser>\r\n            <aiaCCAppTnCAcceptedDate>?</aiaCCAppTnCAcceptedDate>\r\n            <aiaCCAppTnCVersion>?</aiaCCAppTnCVersion>\r\n            <!--1 or more repetitions:-->\r\n            <userGroupsList>?</userGroupsList>\r\n            <!--1 or more repetitions:-->\r\n            <userGroupsDNList>?</userGroupsDNList>\r\n            <memberType>?</memberType>\r\n            <residentialPostcode>?</residentialPostcode>\r\n            <userStatus>?</userStatus>\r\n            <aiaClientNumber>?</aiaClientNumber>\r\n            <aiaVitalityMemberNumber>?</aiaVitalityMemberNumber>\r\n            <aiaDsyPolicyNumber>?</aiaDsyPolicyNumber>\r\n            <aiaVitalityCobrandingInfo>?</aiaVitalityCobrandingInfo>\r\n         </userDetails>\r\n      </ser:deleteUserRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "3d32f42d-fd56-8c48-9d74-0af3580520fa",
          "name": "RA-263 : ESB Resend Activation Email - Not In UMS",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 500\"] = responseCode.code === 500;",
                  "",
                  "//Verifing that the response time is less than what has been declared in enviroenment variable ",
                  "tests[\"Response time is less than \" + environment.ResponseTime + \" ms and is \" + responseTime + \" ms\" ] = responseTime < environment.ResponseTime;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "try{",
                  "    tests[\"Verifying that the status is 'Internal Server Error'\"] =  body.status === \"Internal Server Error\";",
                  "}",
                  "",
                  "catch(err){",
                  "    tests[\"Data in response does not exist\"] = false;  ",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.resendActivationMail.v1",
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n\t\"memberId\":\"{{memberID}}\",\r\n    \"relationshipName\":\"{{relationshipName}}\",\r\n    \"uuid\":\"{{$guid}}\"\r\n}\r\n"
            },
            "description": "Generated from a curl request: \ncurl -X POST -H \\\"Content-Type: application/json\\\" -H \\\"Authorization: Basic QWRtaW5pc3RyYXRvcjoxUDF0eXRoMw==\\\" -H \\\"Cache-Control: no-cache\\\" -H \\\"Postman-Token: c6d5e0d6-fb3b-87ac-27e3-a43dfd0b64af\\\" -d '{\\\"email\\\":\\\"um@um.com\\\"}' \\\"http://%7B%7Bbaseurl%7D%7D/rest/aiaVitalityMembershipEnrollment.ws.resendActivationMail.v1\\\""
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "faacdebe-5455-caf2-023f-fca5ecf400c5",
      "name": "RA-261 : ESB API for push notification",
      "description": "",
      "item": [
        {
          "_postman_id": "d167c0d1-4308-0d25-3ab5-2ecad47b7968",
          "name": "RA-153: Enrolling a Member - New Process",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "",
                  "",
                  "tests[\"Verifying that Enrolment is successfull\"] =  body.status === \"Data Accepted\";",
                  "",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "",
                  "//Generating Random Email address to pass into the data so that user duplication does not happen",
                  "function makeEmail() {",
                  "  var strValues = \"qpotvghysbnxui56z\";",
                  "  var strEmail = \"\";",
                  "  var strTmp;",
                  "  for (var i = 0; i < 10; i++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strTmp = \"\";",
                  "  strEmail = strEmail + \"@\";",
                  "  for (var j = 0; j < 8; j++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strEmail = strEmail + \"esbpii.com\";",
                  "  return strEmail;",
                  "}",
                  "",
                  "",
                  "//Setting up the random email to an environment variable",
                  "postman.setEnvironmentVariable(\"Email\", makeEmail());",
                  "console.log(\"Email: \"+environment.Email);",
                  "",
                  "var firstName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);",
                  "",
                  "//Setting up the firstName to an environment variable",
                  "postman.setEnvironmentVariable(\"firstName\", firstName);",
                  "console.log(\"firstName: \"+environment.firstName);",
                  "",
                  "var lastName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 8);",
                  "",
                  "//Setting up the lastName to an environment variable",
                  "postman.setEnvironmentVariable(\"lastName\", lastName);",
                  "console.log(\"lastName: \"+environment.lastName);",
                  "",
                  "",
                  "//Incrementing and Setting up the memberID to an environment variable",
                  "// var memberIdNumber = parseInt(environment.memberIdNumber)+1;",
                  "var memberIdNumber = Date.now();",
                  "console.log(memberIdNumber);",
                  "postman.setEnvironmentVariable(\"memberIdNumber\", memberIdNumber);",
                  "postman.setEnvironmentVariable(\"memberID\", \"RA\"+memberIdNumber.toString());",
                  "console.log(\"memberID :\"+environment.memberID);",
                  ""
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
            },
            "description": ""
          },
          "response": [
            {
              "id": "6c9b7c0a-0a0d-61d0-8544-cd407b7d02c3",
              "name": "response 3",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:17 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "1830",
              "body": "{\"token\":\"1ed2d16e-9fc9-46ed-af8e-49e5b5207e79\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "82b89e6b-ab39-1e99-de34-0a987216bb4a",
              "name": "error",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "key": "Connection",
                  "value": "Keep-Alive",
                  "name": "Connection",
                  "description": ""
                },
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "name": "Content-Type",
                  "description": ""
                },
                {
                  "key": "Date",
                  "value": "Wed, 14 Dec 2016 00:42:55 GMT",
                  "name": "Date",
                  "description": ""
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked",
                  "name": "Transfer-Encoding",
                  "description": ""
                },
                {
                  "key": "X-Backside-Transport",
                  "value": "OK OK",
                  "name": "X-Backside-Transport",
                  "description": ""
                },
                {
                  "key": "X-Client-IP",
                  "value": "10.61.38.184",
                  "name": "X-Client-IP",
                  "description": ""
                },
                {
                  "key": "X-Global-Transaction-ID",
                  "value": "348720",
                  "name": "X-Global-Transaction-ID",
                  "description": ""
                }
              ],
              "cookie": [],
              "responseTime": "1537",
              "body": "{\"response\":{}}"
            },
            {
              "id": "832c5000-49c3-3b22-36d8-1e35d77c4b9d",
              "name": "response 1",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:13:56 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "215",
              "body": "{\"token\":\"39b8615a-307d-419f-a503-4d4fa6c7021d\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "8c6aaba9-49c8-7c55-efa2-6d3d71c03a17",
              "name": "response 2",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:07 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "237",
              "body": "{\"token\":\"a77eb61e-5dd3-4680-931e-49122ab21153\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            }
          ]
        },
        {
          "_postman_id": "042bee0f-8432-0d7b-47d4-573cf7d71bf0",
          "name": "Wait for enrolment to finish",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "{{password_ESB}}",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{testPackageURL}}/rest/restTestPackage.ws.sleep?seconds=200",
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {},
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "5f836480-511b-1ccd-97cc-80305520fc1d",
          "name": "RA-147 : Verifying user has been added to UMS and is InActive Status",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonObject = xml2Json(responseBody);\r",
                  "\r",
                  "try\r",
                  "{\r",
                  "\r",
                  "\r",
                  "tests[\"Verifying that User status is Not Activated\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userStatus === \"I\";\r",
                  "\r",
                  "tests[\"Verifying that User ID is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userId === environment.Email ;\r",
                  "\r",
                  "tests[\"Verifying that Email is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.email === environment.Email ;\r",
                  "\r",
                  "tests[\"Verifying that First Name is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.givenName === environment.firstName ;\r",
                  "\r",
                  "tests[\"Verifying that Last name is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.surname === environment.lastName ;\r",
                  "\r",
                  "tests[\"Verifying that Member Type is as passed to UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.memberType === \"GROUP\" ;\r",
                  "\r",
                  "tests[\"Verifying that User Groups List is VITALITY_AWAITING_ACTIVATION\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userGroupsList === \"VITALITY_AWAITING_ACTIVATION\" ;\r",
                  "\r",
                  "\r",
                  "\r",
                  "//Setting up the token to an environment variable to be used in subsequent requests\r",
                  "\r",
                  "postman.setEnvironmentVariable(\"umsToken\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.token);\r",
                  "\r",
                  "postman.setEnvironmentVariable(\"aiaClientNumber\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaClientNumber);\r",
                  "postman.setEnvironmentVariable(\"aiaVitalityMemberNumber\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaVitalityMemberNumber);\r",
                  "postman.setEnvironmentVariable(\"aiaDsyPolicyNumber\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaDsyPolicyNumber);\r",
                  "\r",
                  "postman.setEnvironmentVariable(\"aiaVitalityId\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaVitalityId);\r",
                  "\r",
                  "\r",
                  "}\r",
                  "\r",
                  "\r",
                  "catch(err){\r",
                  "    \r",
                  "  tests[\"Data in response does not exist\"] = false;  \r",
                  "\r",
                  "\r",
                  "}\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "{{UmsURL}}/{{UMSContext}}/UsermanagementService",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "text/xml",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:ser=\"http://service.usermanagement.aiaa.com.au\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <ser:searchUserRequest>\n         <source>VITALITY</source>\n         <userType></userType>\n         <userDetails>\n            <userName></userName>\n            <userId></userId>\n            <userDN></userDN>\n            <email>{{Email}}</email>\n            <givenName></givenName>\n            <surname></surname>\n            <webChannel></webChannel>\n            <token></token>\n            <fundIdentifier></fundIdentifier>\n            <eligibilityAssessorEmail></eligibilityAssessorEmail>\n            <activationURL></activationURL>\n            <consentURL></consentURL>\n            <!--1 or more repetitions:-->\n            <userRolesList></userRolesList>\n            <title></title>\n            <dateOfBirth></dateOfBirth>\n            <gender></gender>\n            <addressLine1></addressLine1>\n            <addressLine2></addressLine2>\n            <suburb></suburb>\n            <state></state>\n            <postcode></postcode>\n            <country></country>\n            <mobilePhone></mobilePhone>\n            <workPhone></workPhone>\n            <homePhone></homePhone>\n            <fax></fax>\n            <isRetailLifeInsured></isRetailLifeInsured>\n            <passwordRequestDate></passwordRequestDate>\n            <password></password>\n            <passwordRequestCount></passwordRequestCount>\n            <aiaProposalNumber></aiaProposalNumber>\n            <aiaProposalWritingAdviser></aiaProposalWritingAdviser>\n            <aiaCCAppTnCAcceptedDate></aiaCCAppTnCAcceptedDate>\n            <aiaCCAppTnCVersion></aiaCCAppTnCVersion>\n            <!--1 or more repetitions:-->\n            <userGroupsList></userGroupsList>\n            <!--1 or more repetitions:-->\n            <userGroupsDNList></userGroupsDNList>\n            <memberType></memberType>\n            <residentialPostcode></residentialPostcode>\n            <userStatus></userStatus>\n            <aiaClientNumber></aiaClientNumber>\n            <aiaVitalityMemberNumber></aiaVitalityMemberNumber>\n            <aiaDsyPolicyNumber></aiaDsyPolicyNumber>\n            <aiaVitalityCobrandingInfo></aiaVitalityCobrandingInfo>\n         </userDetails>\n      </ser:searchUserRequest>\n   </soapenv:Body>\n</soapenv:Envelope>\n\n"
            },
            "description": "A/C:\r\nGiven that members activated their membership\r\nWhen ESB gets the action\r\nThen their membership will be activated in UMS"
          },
          "response": []
        },
        {
          "_postman_id": "a4668456-90e1-1835-c5e5-a31483716e49",
          "name": "RA-153: Activate member - New Process",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "",
                  "//tests[\"Verifying that Activation is successfull\"] =  body.status === \"Activation Successful\";",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{ESBURL}}/rest/aiaVitalityMember/pub/activation",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"password\": \"Welcome123\",\r\n   \"reasonForJoining\": \"I am actively trying to maintain or improve my health\",\r\n   \"email\": \"{{Email}}\",\r\n   \"token\": \"{{umsToken}}\"   \r\n}\r\n"
            },
            "description": ""
          },
          "response": [
            {
              "id": "3e1df1cf-e62f-56a1-bbb2-8f5773510b7f",
              "name": "response 3",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMember/pub/activation",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"password\": \"Welcome123\",\r\n   \"reasonForJoining\": \"I am actively trying to maintain or improve my health\",\r\n   \"email\": \"{{Email}}\",\r\n   \"token\": \"{{umsToken}}\"   \r\n}\r\n"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:17 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "1830",
              "body": "{\"token\":\"1ed2d16e-9fc9-46ed-af8e-49e5b5207e79\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "51658d3e-48f0-a06a-d987-dc57920b7ec5",
              "name": "error",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMember/pub/activation",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"password\": \"Welcome123\",\r\n   \"reasonForJoining\": \"I am actively trying to maintain or improve my health\",\r\n   \"email\": \"{{Email}}\",\r\n   \"token\": \"{{umsToken}}\"   \r\n}\r\n"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "key": "Connection",
                  "value": "Keep-Alive",
                  "name": "Connection",
                  "description": ""
                },
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "name": "Content-Type",
                  "description": ""
                },
                {
                  "key": "Date",
                  "value": "Wed, 14 Dec 2016 00:42:55 GMT",
                  "name": "Date",
                  "description": ""
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked",
                  "name": "Transfer-Encoding",
                  "description": ""
                },
                {
                  "key": "X-Backside-Transport",
                  "value": "OK OK",
                  "name": "X-Backside-Transport",
                  "description": ""
                },
                {
                  "key": "X-Client-IP",
                  "value": "10.61.38.184",
                  "name": "X-Client-IP",
                  "description": ""
                },
                {
                  "key": "X-Global-Transaction-ID",
                  "value": "348720",
                  "name": "X-Global-Transaction-ID",
                  "description": ""
                }
              ],
              "cookie": [],
              "responseTime": "1537",
              "body": "{\"response\":{}}"
            },
            {
              "id": "677970fe-05a6-6cf4-4c01-96d5ea3a87e0",
              "name": "response 1",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMember/pub/activation",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"password\": \"Welcome123\",\r\n   \"reasonForJoining\": \"I am actively trying to maintain or improve my health\",\r\n   \"email\": \"{{Email}}\",\r\n   \"token\": \"{{umsToken}}\"   \r\n}\r\n"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:13:56 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "215",
              "body": "{\"token\":\"39b8615a-307d-419f-a503-4d4fa6c7021d\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "783e82ad-8a46-a2e2-42a2-ae3ff2b26bf8",
              "name": "response 2",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMember/pub/activation",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"password\": \"Welcome123\",\r\n   \"reasonForJoining\": \"I am actively trying to maintain or improve my health\",\r\n   \"email\": \"{{Email}}\",\r\n   \"token\": \"{{umsToken}}\"   \r\n}\r\n"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:07 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "237",
              "body": "{\"token\":\"a77eb61e-5dd3-4680-931e-49122ab21153\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            }
          ]
        },
        {
          "_postman_id": "77507166-426b-4e2e-4f88-19ac1360e0e7",
          "name": "Wait for activation to finish",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{testPackageURL}}/rest/restTestPackage.ws.sleep?seconds=120",
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {},
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "6bd6b4d3-fed6-dded-fca6-0b871c4edce0",
          "name": "RA-147 : Verifying user has been added to UMS and is activated",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonObject = xml2Json(responseBody);\r",
                  "\r",
                  "try\r",
                  "{\r",
                  "\r",
                  "\r",
                  "tests[\"Verifying that User status is  Activated\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userStatus === \"A\";\r",
                  "\r",
                  "tests[\"Verifying that User ID is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userId === environment.Email ;\r",
                  "\r",
                  "tests[\"Verifying that Email is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.email === environment.Email ;\r",
                  "\r",
                  "tests[\"Verifying that First Name is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.givenName === environment.firstName ;\r",
                  "\r",
                  "tests[\"Verifying that Last name is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.surname === environment.lastName ;\r",
                  "\r",
                  "tests[\"Verifying that Member Type is as passed to UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.memberType === \"GROUP\" ;\r",
                  "\r",
                  "tests[\"Verifying that User Groups List is VITALITY_ACTIVE\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userGroupsList === \"VITALITY_ACTIVE\" ;\r",
                  "\r",
                  "\r",
                  "\r",
                  "//Setting up the token to an environment variable to be used in subsequent requests\r",
                  "\r",
                  "postman.setEnvironmentVariable(\"umsToken\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.token);\r",
                  "\r",
                  "postman.setEnvironmentVariable(\"aiaClientNumber\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaClientNumber);\r",
                  "postman.setEnvironmentVariable(\"aiaVitalityMemberNumber\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaVitalityMemberNumber);\r",
                  "postman.setEnvironmentVariable(\"aiaDsyPolicyNumber\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaDsyPolicyNumber);\r",
                  "\r",
                  "postman.setEnvironmentVariable(\"aiaVitalityId\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaVitalityId);\r",
                  "\r",
                  "\r",
                  "}\r",
                  "\r",
                  "\r",
                  "catch(err){\r",
                  "    \r",
                  "  tests[\"Data in response does not exist\"] = false;  \r",
                  "\r",
                  "\r",
                  "}\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "{{UmsURL}}/{{UMSContext}}/UsermanagementService",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "text/xml",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:ser=\"http://service.usermanagement.aiaa.com.au\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <ser:searchUserRequest>\r\n         <source>VITALITY</source>\r\n         <userType></userType>\r\n         <userDetails>\r\n            <userName></userName>\r\n            <userId></userId>\r\n            <userDN></userDN>\r\n            <email>{{Email}}</email>\r\n            <givenName></givenName>\r\n            <surname></surname>\r\n            <webChannel></webChannel>\r\n            <token></token>\r\n            <fundIdentifier></fundIdentifier>\r\n            <eligibilityAssessorEmail></eligibilityAssessorEmail>\r\n            <activationURL></activationURL>\r\n            <consentURL></consentURL>\r\n            <!--1 or more repetitions:-->\r\n            <userRolesList></userRolesList>\r\n            <title></title>\r\n            <dateOfBirth></dateOfBirth>\r\n            <gender></gender>\r\n            <addressLine1></addressLine1>\r\n            <addressLine2></addressLine2>\r\n            <suburb></suburb>\r\n            <state></state>\r\n            <postcode></postcode>\r\n            <country></country>\r\n            <mobilePhone></mobilePhone>\r\n            <workPhone></workPhone>\r\n            <homePhone></homePhone>\r\n            <fax></fax>\r\n            <isRetailLifeInsured></isRetailLifeInsured>\r\n            <passwordRequestDate></passwordRequestDate>\r\n            <password></password>\r\n            <passwordRequestCount></passwordRequestCount>\r\n            <aiaProposalNumber></aiaProposalNumber>\r\n            <aiaProposalWritingAdviser></aiaProposalWritingAdviser>\r\n            <aiaCCAppTnCAcceptedDate></aiaCCAppTnCAcceptedDate>\r\n            <aiaCCAppTnCVersion></aiaCCAppTnCVersion>\r\n            <!--1 or more repetitions:-->\r\n            <userGroupsList></userGroupsList>\r\n            <!--1 or more repetitions:-->\r\n            <userGroupsDNList></userGroupsDNList>\r\n            <memberType></memberType>\r\n            <residentialPostcode></residentialPostcode>\r\n            <userStatus></userStatus>\r\n            <aiaClientNumber></aiaClientNumber>\r\n            <aiaVitalityMemberNumber></aiaVitalityMemberNumber>\r\n            <aiaDsyPolicyNumber></aiaDsyPolicyNumber>\r\n            <aiaVitalityCobrandingInfo></aiaVitalityCobrandingInfo>\r\n         </userDetails>\r\n      </ser:searchUserRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>\r\n\r\n"
            },
            "description": "A/C:\r\nGiven that members activated their membership\r\nWhen ESB gets the action\r\nThen their membership will be activated in UMS"
          },
          "response": []
        },
        {
          "_postman_id": "19378d8d-1d4b-c306-13e5-361e338e5960",
          "name": "RA-153: Enrolling a Member - New Process 2",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "",
                  "",
                  "tests[\"Verifying that Enrolment is successfull\"] =  body.status === \"Data Accepted\";",
                  "",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "",
                  "//Generating Random Email address to pass into the data so that user duplication does not happen",
                  "function makeEmail() {",
                  "  var strValues = \"qpotvghysbnxui56z\";",
                  "  var strEmail = \"\";",
                  "  var strTmp;",
                  "  for (var i = 0; i < 10; i++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strTmp = \"\";",
                  "  strEmail = strEmail + \"@\";",
                  "  for (var j = 0; j < 8; j++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strEmail = strEmail + \"esbpii.com\";",
                  "  return strEmail;",
                  "}",
                  "",
                  "",
                  "//Setting up the random email to an environment variable",
                  "postman.setEnvironmentVariable(\"Email\", makeEmail());",
                  "console.log(\"Email: \"+environment.Email);",
                  "",
                  "var firstName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);",
                  "",
                  "//Setting up the firstName to an environment variable",
                  "postman.setEnvironmentVariable(\"firstName\", firstName);",
                  "console.log(\"firstName: \"+environment.firstName);",
                  "",
                  "var lastName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 8);",
                  "",
                  "//Setting up the lastName to an environment variable",
                  "postman.setEnvironmentVariable(\"lastName\", lastName);",
                  "console.log(\"lastName: \"+environment.lastName);",
                  "",
                  "",
                  "//Incrementing and Setting up the memberID to an environment variable",
                  "// var memberIdNumber = parseInt(environment.memberIdNumber)+1;",
                  "var memberIdNumber = Date.now();",
                  "console.log(memberIdNumber);",
                  "postman.setEnvironmentVariable(\"memberIdNumber\", memberIdNumber);",
                  "postman.setEnvironmentVariable(\"memberID\", \"RA\"+memberIdNumber.toString());",
                  "console.log(\"memberID :\"+environment.memberID);",
                  ""
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
            },
            "description": ""
          },
          "response": [
            {
              "id": "6ef17c25-b2e2-a4f9-bf29-a961260755ac",
              "name": "response 2",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:07 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "237",
              "body": "{\"token\":\"a77eb61e-5dd3-4680-931e-49122ab21153\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "9c27c1b0-df17-e052-f8bf-f04cb36b0136",
              "name": "response 1",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:13:56 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "215",
              "body": "{\"token\":\"39b8615a-307d-419f-a503-4d4fa6c7021d\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "9efe53ea-99b2-16e5-7650-da4ca19a1ac6",
              "name": "response 3",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:17 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "1830",
              "body": "{\"token\":\"1ed2d16e-9fc9-46ed-af8e-49e5b5207e79\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "dec56263-92aa-6eda-2cbd-baf332db3143",
              "name": "error",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "key": "Connection",
                  "value": "Keep-Alive",
                  "name": "Connection",
                  "description": ""
                },
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "name": "Content-Type",
                  "description": ""
                },
                {
                  "key": "Date",
                  "value": "Wed, 14 Dec 2016 00:42:55 GMT",
                  "name": "Date",
                  "description": ""
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked",
                  "name": "Transfer-Encoding",
                  "description": ""
                },
                {
                  "key": "X-Backside-Transport",
                  "value": "OK OK",
                  "name": "X-Backside-Transport",
                  "description": ""
                },
                {
                  "key": "X-Client-IP",
                  "value": "10.61.38.184",
                  "name": "X-Client-IP",
                  "description": ""
                },
                {
                  "key": "X-Global-Transaction-ID",
                  "value": "348720",
                  "name": "X-Global-Transaction-ID",
                  "description": ""
                }
              ],
              "cookie": [],
              "responseTime": "1537",
              "body": "{\"response\":{}}"
            }
          ]
        },
        {
          "_postman_id": "066a94d6-bf09-9724-47e1-31c73e590dc6",
          "name": "Wait for enrolment to finish 2",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "{{password_ESB}}",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{testPackageURL}}/rest/restTestPackage.ws.sleep?seconds=200",
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {},
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "d81bab04-12b8-c9e1-5564-efcdc6601dd1",
          "name": "RA-147 : Verifying user has been added to UMS and is InActive Status 2",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonObject = xml2Json(responseBody);\r",
                  "\r",
                  "try\r",
                  "{\r",
                  "    tests[\"Verifying that User status is Not Activated\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userStatus === \"I\";\r",
                  "    \r",
                  "    tests[\"Verifying that User ID is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userId === environment.Email ;\r",
                  "    \r",
                  "    tests[\"Verifying that Email is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.email === environment.Email ;\r",
                  "    \r",
                  "    tests[\"Verifying that First Name is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.givenName === environment.firstName ;\r",
                  "    \r",
                  "    tests[\"Verifying that Last name is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.surname === environment.lastName ;\r",
                  "    \r",
                  "    tests[\"Verifying that Member Type is as passed to UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.memberType === \"GROUP\" ;\r",
                  "    \r",
                  "    tests[\"Verifying that User Groups List is VITALITY_AWAITING_ACTIVATION\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userGroupsList === \"VITALITY_AWAITING_ACTIVATION\" ;\r",
                  "    \r",
                  "    \r",
                  "    //Setting up the token to an environment variable to be used in subsequent requests\r",
                  "    \r",
                  "    postman.setEnvironmentVariable(\"umsToken\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.token);\r",
                  "    \r",
                  "    postman.setEnvironmentVariable(\"aiaClientNumber\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaClientNumber);\r",
                  "    postman.setEnvironmentVariable(\"aiaVitalityMemberNumber\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaVitalityMemberNumber);\r",
                  "    postman.setEnvironmentVariable(\"aiaDsyPolicyNumber\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaDsyPolicyNumber);\r",
                  "    \r",
                  "    postman.setEnvironmentVariable(\"aiaVitalityId2\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaVitalityId);\r",
                  "}\r",
                  "\r",
                  "catch(err){\r",
                  "  tests[\"Data in response does not exist\"] = false;  \r",
                  "}\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "{{UmsURL}}/{{UMSContext}}/UsermanagementService",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "text/xml",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:ser=\"http://service.usermanagement.aiaa.com.au\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <ser:searchUserRequest>\n         <source>VITALITY</source>\n         <userType></userType>\n         <userDetails>\n            <userName></userName>\n            <userId></userId>\n            <userDN></userDN>\n            <email>{{Email}}</email>\n            <givenName></givenName>\n            <surname></surname>\n            <webChannel></webChannel>\n            <token></token>\n            <fundIdentifier></fundIdentifier>\n            <eligibilityAssessorEmail></eligibilityAssessorEmail>\n            <activationURL></activationURL>\n            <consentURL></consentURL>\n            <!--1 or more repetitions:-->\n            <userRolesList></userRolesList>\n            <title></title>\n            <dateOfBirth></dateOfBirth>\n            <gender></gender>\n            <addressLine1></addressLine1>\n            <addressLine2></addressLine2>\n            <suburb></suburb>\n            <state></state>\n            <postcode></postcode>\n            <country></country>\n            <mobilePhone></mobilePhone>\n            <workPhone></workPhone>\n            <homePhone></homePhone>\n            <fax></fax>\n            <isRetailLifeInsured></isRetailLifeInsured>\n            <passwordRequestDate></passwordRequestDate>\n            <password></password>\n            <passwordRequestCount></passwordRequestCount>\n            <aiaProposalNumber></aiaProposalNumber>\n            <aiaProposalWritingAdviser></aiaProposalWritingAdviser>\n            <aiaCCAppTnCAcceptedDate></aiaCCAppTnCAcceptedDate>\n            <aiaCCAppTnCVersion></aiaCCAppTnCVersion>\n            <!--1 or more repetitions:-->\n            <userGroupsList></userGroupsList>\n            <!--1 or more repetitions:-->\n            <userGroupsDNList></userGroupsDNList>\n            <memberType></memberType>\n            <residentialPostcode></residentialPostcode>\n            <userStatus></userStatus>\n            <aiaClientNumber></aiaClientNumber>\n            <aiaVitalityMemberNumber></aiaVitalityMemberNumber>\n            <aiaDsyPolicyNumber></aiaDsyPolicyNumber>\n            <aiaVitalityCobrandingInfo></aiaVitalityCobrandingInfo>\n         </userDetails>\n      </ser:searchUserRequest>\n   </soapenv:Body>\n</soapenv:Envelope>\n\n"
            },
            "description": "A/C:\r\nGiven that members activated their membership\r\nWhen ESB gets the action\r\nThen their membership will be activated in UMS"
          },
          "response": []
        },
        {
          "_postman_id": "7bdb33aa-980b-18fc-2573-1d0a1ab064a1",
          "name": "RA-153: Activate member - New Process 2",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "",
                  "//tests[\"Verifying that Activation is successfull\"] =  body.status === \"Activation Successful\";",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{ESBURL}}/rest/aiaVitalityMember/pub/activation",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"password\": \"Welcome123\",\r\n   \"reasonForJoining\": \"I am actively trying to maintain or improve my health\",\r\n   \"email\": \"{{Email}}\",\r\n   \"token\": \"{{umsToken}}\"   \r\n}\r\n"
            },
            "description": ""
          },
          "response": [
            {
              "id": "466a67af-abaf-3f04-3689-f26dfa39d598",
              "name": "error",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMember/pub/activation",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"password\": \"Welcome123\",\r\n   \"reasonForJoining\": \"I am actively trying to maintain or improve my health\",\r\n   \"email\": \"{{Email}}\",\r\n   \"token\": \"{{umsToken}}\"   \r\n}\r\n"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "key": "Connection",
                  "value": "Keep-Alive",
                  "name": "Connection",
                  "description": ""
                },
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "name": "Content-Type",
                  "description": ""
                },
                {
                  "key": "Date",
                  "value": "Wed, 14 Dec 2016 00:42:55 GMT",
                  "name": "Date",
                  "description": ""
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked",
                  "name": "Transfer-Encoding",
                  "description": ""
                },
                {
                  "key": "X-Backside-Transport",
                  "value": "OK OK",
                  "name": "X-Backside-Transport",
                  "description": ""
                },
                {
                  "key": "X-Client-IP",
                  "value": "10.61.38.184",
                  "name": "X-Client-IP",
                  "description": ""
                },
                {
                  "key": "X-Global-Transaction-ID",
                  "value": "348720",
                  "name": "X-Global-Transaction-ID",
                  "description": ""
                }
              ],
              "cookie": [],
              "responseTime": "1537",
              "body": "{\"response\":{}}"
            },
            {
              "id": "8430560e-643c-0910-7fdc-e3af06cb4780",
              "name": "response 1",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMember/pub/activation",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"password\": \"Welcome123\",\r\n   \"reasonForJoining\": \"I am actively trying to maintain or improve my health\",\r\n   \"email\": \"{{Email}}\",\r\n   \"token\": \"{{umsToken}}\"   \r\n}\r\n"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:13:56 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "215",
              "body": "{\"token\":\"39b8615a-307d-419f-a503-4d4fa6c7021d\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "c25b03b0-7295-4327-e1f4-750108663539",
              "name": "response 3",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMember/pub/activation",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"password\": \"Welcome123\",\r\n   \"reasonForJoining\": \"I am actively trying to maintain or improve my health\",\r\n   \"email\": \"{{Email}}\",\r\n   \"token\": \"{{umsToken}}\"   \r\n}\r\n"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:17 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "1830",
              "body": "{\"token\":\"1ed2d16e-9fc9-46ed-af8e-49e5b5207e79\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "ca7b6327-a60a-3356-fe23-abae30bf2086",
              "name": "response 2",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMember/pub/activation",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"password\": \"Welcome123\",\r\n   \"reasonForJoining\": \"I am actively trying to maintain or improve my health\",\r\n   \"email\": \"{{Email}}\",\r\n   \"token\": \"{{umsToken}}\"   \r\n}\r\n"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:07 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "237",
              "body": "{\"token\":\"a77eb61e-5dd3-4680-931e-49122ab21153\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            }
          ]
        },
        {
          "_postman_id": "e6067ff4-671f-d942-11c1-b6c3d6187740",
          "name": "Wait for activation to finish 2",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{testPackageURL}}/rest/restTestPackage.ws.sleep?seconds=120",
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {},
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "86a59198-795d-601d-634b-70998ba3b4eb",
          "name": "RA-147 : Verifying user has been added to UMS and is activated 2",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonObject = xml2Json(responseBody);\r",
                  "\r",
                  "try\r",
                  "{\r",
                  "\r",
                  "\r",
                  "tests[\"Verifying that User status is  Activated\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userStatus === \"A\";\r",
                  "\r",
                  "tests[\"Verifying that User ID is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userId === environment.Email ;\r",
                  "\r",
                  "tests[\"Verifying that Email is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.email === environment.Email ;\r",
                  "\r",
                  "tests[\"Verifying that First Name is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.givenName === environment.firstName ;\r",
                  "\r",
                  "tests[\"Verifying that Last name is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.surname === environment.lastName ;\r",
                  "\r",
                  "tests[\"Verifying that Member Type is as passed to UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.memberType === \"GROUP\" ;\r",
                  "\r",
                  "tests[\"Verifying that User Groups List is VITALITY_ACTIVE\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userGroupsList === \"VITALITY_ACTIVE\" ;\r",
                  "\r",
                  "\r",
                  "\r",
                  "//Setting up the token to an environment variable to be used in subsequent requests\r",
                  "\r",
                  "postman.setEnvironmentVariable(\"umsToken\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.token);\r",
                  "\r",
                  "postman.setEnvironmentVariable(\"aiaClientNumber\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaClientNumber);\r",
                  "postman.setEnvironmentVariable(\"aiaVitalityMemberNumber\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaVitalityMemberNumber);\r",
                  "postman.setEnvironmentVariable(\"aiaDsyPolicyNumber\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaDsyPolicyNumber);\r",
                  "\r",
                  "postman.setEnvironmentVariable(\"aiaVitalityId2\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaVitalityId);\r",
                  "\r",
                  "\r",
                  "}\r",
                  "\r",
                  "\r",
                  "catch(err){\r",
                  "    \r",
                  "  tests[\"Data in response does not exist\"] = false;  \r",
                  "\r",
                  "\r",
                  "}\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "{{UmsURL}}/{{UMSContext}}/UsermanagementService",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "text/xml",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:ser=\"http://service.usermanagement.aiaa.com.au\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <ser:searchUserRequest>\r\n         <source>VITALITY</source>\r\n         <userType></userType>\r\n         <userDetails>\r\n            <userName></userName>\r\n            <userId></userId>\r\n            <userDN></userDN>\r\n            <email>{{Email}}</email>\r\n            <givenName></givenName>\r\n            <surname></surname>\r\n            <webChannel></webChannel>\r\n            <token></token>\r\n            <fundIdentifier></fundIdentifier>\r\n            <eligibilityAssessorEmail></eligibilityAssessorEmail>\r\n            <activationURL></activationURL>\r\n            <consentURL></consentURL>\r\n            <!--1 or more repetitions:-->\r\n            <userRolesList></userRolesList>\r\n            <title></title>\r\n            <dateOfBirth></dateOfBirth>\r\n            <gender></gender>\r\n            <addressLine1></addressLine1>\r\n            <addressLine2></addressLine2>\r\n            <suburb></suburb>\r\n            <state></state>\r\n            <postcode></postcode>\r\n            <country></country>\r\n            <mobilePhone></mobilePhone>\r\n            <workPhone></workPhone>\r\n            <homePhone></homePhone>\r\n            <fax></fax>\r\n            <isRetailLifeInsured></isRetailLifeInsured>\r\n            <passwordRequestDate></passwordRequestDate>\r\n            <password></password>\r\n            <passwordRequestCount></passwordRequestCount>\r\n            <aiaProposalNumber></aiaProposalNumber>\r\n            <aiaProposalWritingAdviser></aiaProposalWritingAdviser>\r\n            <aiaCCAppTnCAcceptedDate></aiaCCAppTnCAcceptedDate>\r\n            <aiaCCAppTnCVersion></aiaCCAppTnCVersion>\r\n            <!--1 or more repetitions:-->\r\n            <userGroupsList></userGroupsList>\r\n            <!--1 or more repetitions:-->\r\n            <userGroupsDNList></userGroupsDNList>\r\n            <memberType></memberType>\r\n            <residentialPostcode></residentialPostcode>\r\n            <userStatus></userStatus>\r\n            <aiaClientNumber></aiaClientNumber>\r\n            <aiaVitalityMemberNumber></aiaVitalityMemberNumber>\r\n            <aiaDsyPolicyNumber></aiaDsyPolicyNumber>\r\n            <aiaVitalityCobrandingInfo></aiaVitalityCobrandingInfo>\r\n         </userDetails>\r\n      </ser:searchUserRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>\r\n\r\n"
            },
            "description": "A/C:\r\nGiven that members activated their membership\r\nWhen ESB gets the action\r\nThen their membership will be activated in UMS"
          },
          "response": []
        },
        {
          "_postman_id": "d0114e59-ea17-fe7c-c006-489020c94fc3",
          "name": "RA-153: Enrolling a Member - New Process 3",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "",
                  "",
                  "tests[\"Verifying that Enrolment is successfull\"] =  body.status === \"Data Accepted\";",
                  "",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "",
                  "//Generating Random Email address to pass into the data so that user duplication does not happen",
                  "function makeEmail() {",
                  "  var strValues = \"qpotvghysbnxui56z\";",
                  "  var strEmail = \"\";",
                  "  var strTmp;",
                  "  for (var i = 0; i < 10; i++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strTmp = \"\";",
                  "  strEmail = strEmail + \"@\";",
                  "  for (var j = 0; j < 8; j++) {",
                  "    strTmp = strValues.charAt(Math.round(strValues.length * Math.random()));",
                  "    strEmail = strEmail + strTmp;",
                  "  }",
                  "  strEmail = strEmail + \"esbpii.com\";",
                  "  return strEmail;",
                  "}",
                  "",
                  "",
                  "//Setting up the random email to an environment variable",
                  "postman.setEnvironmentVariable(\"Email\", makeEmail());",
                  "console.log(\"Email: \"+environment.Email);",
                  "",
                  "var firstName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);",
                  "",
                  "//Setting up the firstName to an environment variable",
                  "postman.setEnvironmentVariable(\"firstName\", firstName);",
                  "console.log(\"firstName: \"+environment.firstName);",
                  "",
                  "var lastName = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 8);",
                  "",
                  "//Setting up the lastName to an environment variable",
                  "postman.setEnvironmentVariable(\"lastName\", lastName);",
                  "console.log(\"lastName: \"+environment.lastName);",
                  "",
                  "",
                  "//Incrementing and Setting up the memberID to an environment variable",
                  "// var memberIdNumber = parseInt(environment.memberIdNumber)+1;",
                  "var memberIdNumber = Date.now();",
                  "console.log(memberIdNumber);",
                  "postman.setEnvironmentVariable(\"memberIdNumber\", memberIdNumber);",
                  "postman.setEnvironmentVariable(\"memberID\", \"RA\"+memberIdNumber.toString());",
                  "console.log(\"memberID :\"+environment.memberID);",
                  ""
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
            },
            "description": ""
          },
          "response": [
            {
              "id": "48bf85cd-d2ac-1aba-3651-4547e41ef06f",
              "name": "response 2",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:07 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "237",
              "body": "{\"token\":\"a77eb61e-5dd3-4680-931e-49122ab21153\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "50de7ecc-1331-0b41-6303-46b03d06dc62",
              "name": "response 1",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:13:56 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "215",
              "body": "{\"token\":\"39b8615a-307d-419f-a503-4d4fa6c7021d\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "ade4a1ef-8d83-b8b8-a63b-285a766a22c1",
              "name": "error",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "key": "Connection",
                  "value": "Keep-Alive",
                  "name": "Connection",
                  "description": ""
                },
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "name": "Content-Type",
                  "description": ""
                },
                {
                  "key": "Date",
                  "value": "Wed, 14 Dec 2016 00:42:55 GMT",
                  "name": "Date",
                  "description": ""
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked",
                  "name": "Transfer-Encoding",
                  "description": ""
                },
                {
                  "key": "X-Backside-Transport",
                  "value": "OK OK",
                  "name": "X-Backside-Transport",
                  "description": ""
                },
                {
                  "key": "X-Client-IP",
                  "value": "10.61.38.184",
                  "name": "X-Client-IP",
                  "description": ""
                },
                {
                  "key": "X-Global-Transaction-ID",
                  "value": "348720",
                  "name": "X-Global-Transaction-ID",
                  "description": ""
                }
              ],
              "cookie": [],
              "responseTime": "1537",
              "body": "{\"response\":{}}"
            },
            {
              "id": "c3ee8c46-22be-32a2-6324-6afeab576ee0",
              "name": "response 3",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMembershipEnrollment.rs.enrollMember.v1",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"member\":{\r\n    \"title\":\"Mr\",\r\n    \"firstName\":\"{{firstName}}\",\r\n    \"lastName\":\"{{lastName}}\",\r\n    \"gender\":\"M\",\r\n    \"dateOfBirth\":\"{{dateOfBirth}}\",\r\n    \"email\":\"{{Email}}\",\r\n    \"memberId\":\"{{memberID}}\",\r\n    \"address\":{\r\n      \"line1\":\"{{memberIdNumber}} Test Street\",\r\n      \"suburb\":\"Wiseman's Ferry\",\r\n      \"state\":\"VIC\",\r\n      \"country\":\"Australia\",\r\n      \"postcode\":\"{{postcode}}\"\r\n    },\r\n    \"phone\":{\r\n      \"mobileNumber\":\"{{mobileNumber}}\",\r\n      \"homeNumber\":\"{{homeNumber}}\",\r\n      \"workNumber\":\"{{workNumber}}\"\r\n    },\r\n    \"membership\":{\r\n      \"membershipType\":\"GROUP\"\r\n    }\r\n  },\r\n  \"acceptTnC\":\"Y\",\r\n  \"relationshipName\": \"{{relationshipName}}\",\r\n  \"uuid\":\"{{$guid}}\"\r\n}"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:17 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "1830",
              "body": "{\"token\":\"1ed2d16e-9fc9-46ed-af8e-49e5b5207e79\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            }
          ]
        },
        {
          "_postman_id": "7145e67a-aa24-f285-daa0-118cc7f78c2d",
          "name": "Wait for enrolment to finish 3",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "{{password_ESB}}",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{testPackageURL}}/rest/restTestPackage.ws.sleep?seconds=200",
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {},
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "714252c2-c384-59f7-4a14-106f95e5b096",
          "name": "RA-147 : Verifying user has been added to UMS and is InActive Status 2",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonObject = xml2Json(responseBody);\r",
                  "\r",
                  "try\r",
                  "{\r",
                  "    tests[\"Verifying that User status is Not Activated\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userStatus === \"I\";\r",
                  "    \r",
                  "    tests[\"Verifying that User ID is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userId === environment.Email ;\r",
                  "    \r",
                  "    tests[\"Verifying that Email is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.email === environment.Email ;\r",
                  "    \r",
                  "    tests[\"Verifying that First Name is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.givenName === environment.firstName ;\r",
                  "    \r",
                  "    tests[\"Verifying that Last name is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.surname === environment.lastName ;\r",
                  "    \r",
                  "    tests[\"Verifying that Member Type is as passed to UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.memberType === \"GROUP\" ;\r",
                  "    \r",
                  "    tests[\"Verifying that User Groups List is VITALITY_AWAITING_ACTIVATION\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userGroupsList === \"VITALITY_AWAITING_ACTIVATION\" ;\r",
                  "    \r",
                  "    \r",
                  "    //Setting up the token to an environment variable to be used in subsequent requests\r",
                  "    \r",
                  "    postman.setEnvironmentVariable(\"umsToken\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.token);\r",
                  "    \r",
                  "    postman.setEnvironmentVariable(\"aiaClientNumber\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaClientNumber);\r",
                  "    postman.setEnvironmentVariable(\"aiaVitalityMemberNumber\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaVitalityMemberNumber);\r",
                  "    postman.setEnvironmentVariable(\"aiaDsyPolicyNumber\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaDsyPolicyNumber);\r",
                  "    \r",
                  "    postman.setEnvironmentVariable(\"aiaVitalityId3\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaVitalityId);\r",
                  "}\r",
                  "\r",
                  "catch(err){\r",
                  "  tests[\"Data in response does not exist\"] = false;  \r",
                  "}\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "{{UmsURL}}/{{UMSContext}}/UsermanagementService",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "text/xml",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:ser=\"http://service.usermanagement.aiaa.com.au\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <ser:searchUserRequest>\n         <source>VITALITY</source>\n         <userType></userType>\n         <userDetails>\n            <userName></userName>\n            <userId></userId>\n            <userDN></userDN>\n            <email>{{Email}}</email>\n            <givenName></givenName>\n            <surname></surname>\n            <webChannel></webChannel>\n            <token></token>\n            <fundIdentifier></fundIdentifier>\n            <eligibilityAssessorEmail></eligibilityAssessorEmail>\n            <activationURL></activationURL>\n            <consentURL></consentURL>\n            <!--1 or more repetitions:-->\n            <userRolesList></userRolesList>\n            <title></title>\n            <dateOfBirth></dateOfBirth>\n            <gender></gender>\n            <addressLine1></addressLine1>\n            <addressLine2></addressLine2>\n            <suburb></suburb>\n            <state></state>\n            <postcode></postcode>\n            <country></country>\n            <mobilePhone></mobilePhone>\n            <workPhone></workPhone>\n            <homePhone></homePhone>\n            <fax></fax>\n            <isRetailLifeInsured></isRetailLifeInsured>\n            <passwordRequestDate></passwordRequestDate>\n            <password></password>\n            <passwordRequestCount></passwordRequestCount>\n            <aiaProposalNumber></aiaProposalNumber>\n            <aiaProposalWritingAdviser></aiaProposalWritingAdviser>\n            <aiaCCAppTnCAcceptedDate></aiaCCAppTnCAcceptedDate>\n            <aiaCCAppTnCVersion></aiaCCAppTnCVersion>\n            <!--1 or more repetitions:-->\n            <userGroupsList></userGroupsList>\n            <!--1 or more repetitions:-->\n            <userGroupsDNList></userGroupsDNList>\n            <memberType></memberType>\n            <residentialPostcode></residentialPostcode>\n            <userStatus></userStatus>\n            <aiaClientNumber></aiaClientNumber>\n            <aiaVitalityMemberNumber></aiaVitalityMemberNumber>\n            <aiaDsyPolicyNumber></aiaDsyPolicyNumber>\n            <aiaVitalityCobrandingInfo></aiaVitalityCobrandingInfo>\n         </userDetails>\n      </ser:searchUserRequest>\n   </soapenv:Body>\n</soapenv:Envelope>\n\n"
            },
            "description": "A/C:\r\nGiven that members activated their membership\r\nWhen ESB gets the action\r\nThen their membership will be activated in UMS"
          },
          "response": []
        },
        {
          "_postman_id": "39b16598-2d6f-1255-1f7d-51e1d76a4268",
          "name": "RA-153: Activate member - New Process 3",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "",
                  "//tests[\"Verifying that Activation is successfull\"] =  body.status === \"Activation Successful\";",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{ESBURL}}/rest/aiaVitalityMember/pub/activation",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"password\": \"Welcome123\",\r\n   \"reasonForJoining\": \"I am actively trying to maintain or improve my health\",\r\n   \"email\": \"{{Email}}\",\r\n   \"token\": \"{{umsToken}}\"   \r\n}\r\n"
            },
            "description": ""
          },
          "response": [
            {
              "id": "64474330-c022-c670-6cbd-a9fc43116c09",
              "name": "response 2",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMember/pub/activation",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"password\": \"Welcome123\",\r\n   \"reasonForJoining\": \"I am actively trying to maintain or improve my health\",\r\n   \"email\": \"{{Email}}\",\r\n   \"token\": \"{{umsToken}}\"   \r\n}\r\n"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:07 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "237",
              "body": "{\"token\":\"a77eb61e-5dd3-4680-931e-49122ab21153\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "a6eeec51-0fa3-f893-1d7b-c26a0bde294a",
              "name": "error",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMember/pub/activation",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"password\": \"Welcome123\",\r\n   \"reasonForJoining\": \"I am actively trying to maintain or improve my health\",\r\n   \"email\": \"{{Email}}\",\r\n   \"token\": \"{{umsToken}}\"   \r\n}\r\n"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "key": "Connection",
                  "value": "Keep-Alive",
                  "name": "Connection",
                  "description": ""
                },
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "name": "Content-Type",
                  "description": ""
                },
                {
                  "key": "Date",
                  "value": "Wed, 14 Dec 2016 00:42:55 GMT",
                  "name": "Date",
                  "description": ""
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked",
                  "name": "Transfer-Encoding",
                  "description": ""
                },
                {
                  "key": "X-Backside-Transport",
                  "value": "OK OK",
                  "name": "X-Backside-Transport",
                  "description": ""
                },
                {
                  "key": "X-Client-IP",
                  "value": "10.61.38.184",
                  "name": "X-Client-IP",
                  "description": ""
                },
                {
                  "key": "X-Global-Transaction-ID",
                  "value": "348720",
                  "name": "X-Global-Transaction-ID",
                  "description": ""
                }
              ],
              "cookie": [],
              "responseTime": "1537",
              "body": "{\"response\":{}}"
            },
            {
              "id": "af26a440-1fc1-8cc2-d671-b325b63d1a43",
              "name": "response 1",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMember/pub/activation",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"password\": \"Welcome123\",\r\n   \"reasonForJoining\": \"I am actively trying to maintain or improve my health\",\r\n   \"email\": \"{{Email}}\",\r\n   \"token\": \"{{umsToken}}\"   \r\n}\r\n"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:13:56 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "215",
              "body": "{\"token\":\"39b8615a-307d-419f-a503-4d4fa6c7021d\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            },
            {
              "id": "e549ba5d-8a15-398d-bdc2-f217143ee5f0",
              "name": "response 3",
              "originalRequest": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "Administrator",
                    "password": "manage",
                    "saveHelperData": true,
                    "showPassword": false
                  }
                },
                "url": "{{ESBURL}}/rest/aiaVitalityMember/pub/activation",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"password\": \"Welcome123\",\r\n   \"reasonForJoining\": \"I am actively trying to maintain or improve my health\",\r\n   \"email\": \"{{Email}}\",\r\n   \"token\": \"{{umsToken}}\"   \r\n}\r\n"
                },
                "description": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "_postman_previewtype": "text",
              "header": [
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "close"
                },
                {
                  "description": "",
                  "key": "Content-Language",
                  "name": "Content-Language",
                  "value": "en-US"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Mon, 14 Nov 2016 03:14:17 GMT"
                },
                {
                  "description": "",
                  "key": "Transfer-Encoding",
                  "name": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "description": "",
                  "key": "X-UA-Compatible",
                  "name": "X-UA-Compatible",
                  "value": "IE=Edge"
                }
              ],
              "cookie": [],
              "responseTime": "1830",
              "body": "{\"token\":\"1ed2d16e-9fc9-46ed-af8e-49e5b5207e79\",\"validNoOfDays\":\"77\",\"result\":\"SUCCESS\"}"
            }
          ]
        },
        {
          "_postman_id": "d6cecdcc-5d4f-9833-21d7-360ce00d1d0f",
          "name": "Wait for activation to finish 3",
          "request": {
            "auth": {
              "type": "basic",
              "basic": {
                "username": "Administrator",
                "password": "manage",
                "saveHelperData": true,
                "showPassword": false
              }
            },
            "url": "{{testPackageURL}}/rest/restTestPackage.ws.sleep?seconds=180",
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {},
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "d91443b8-270c-96fc-8fe7-3612e1b0dec0",
          "name": "RA-147 : Verifying user has been added to UMS and is activated 3",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonObject = xml2Json(responseBody);\r",
                  "\r",
                  "try\r",
                  "{\r",
                  "\r",
                  "\r",
                  "tests[\"Verifying that User status is  Activated\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userStatus === \"A\";\r",
                  "\r",
                  "tests[\"Verifying that User ID is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userId === environment.Email ;\r",
                  "\r",
                  "tests[\"Verifying that Email is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.email === environment.Email ;\r",
                  "\r",
                  "tests[\"Verifying that First Name is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.givenName === environment.firstName ;\r",
                  "\r",
                  "tests[\"Verifying that Last name is as passed in UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.surname === environment.lastName ;\r",
                  "\r",
                  "tests[\"Verifying that Member Type is as passed to UMS\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.memberType === \"GROUP\" ;\r",
                  "\r",
                  "tests[\"Verifying that User Groups List is VITALITY_ACTIVE\"] = jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.userGroupsList === \"VITALITY_ACTIVE\" ;\r",
                  "\r",
                  "\r",
                  "\r",
                  "//Setting up the token to an environment variable to be used in subsequent requests\r",
                  "\r",
                  "postman.setEnvironmentVariable(\"umsToken\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.token);\r",
                  "\r",
                  "postman.setEnvironmentVariable(\"aiaClientNumber\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaClientNumber);\r",
                  "postman.setEnvironmentVariable(\"aiaVitalityMemberNumber\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaVitalityMemberNumber);\r",
                  "postman.setEnvironmentVariable(\"aiaDsyPolicyNumber\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaDsyPolicyNumber);\r",
                  "\r",
                  "postman.setEnvironmentVariable(\"aiaVitalityId3\",jsonObject['soapenv:Envelope']['soapenv:Body']['ns2:searchUserResponse'].userDetails.aiaVitalityId);\r",
                  "\r",
                  "\r",
                  "}\r",
                  "\r",
                  "\r",
                  "catch(err){\r",
                  "    \r",
                  "  tests[\"Data in response does not exist\"] = false;  \r",
                  "\r",
                  "\r",
                  "}\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "{{UmsURL}}/{{UMSContext}}/UsermanagementService",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "text/xml",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:ser=\"http://service.usermanagement.aiaa.com.au\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <ser:searchUserRequest>\r\n         <source>VITALITY</source>\r\n         <userType></userType>\r\n         <userDetails>\r\n            <userName></userName>\r\n            <userId></userId>\r\n            <userDN></userDN>\r\n            <email>{{Email}}</email>\r\n            <givenName></givenName>\r\n            <surname></surname>\r\n            <webChannel></webChannel>\r\n            <token></token>\r\n            <fundIdentifier></fundIdentifier>\r\n            <eligibilityAssessorEmail></eligibilityAssessorEmail>\r\n            <activationURL></activationURL>\r\n            <consentURL></consentURL>\r\n            <!--1 or more repetitions:-->\r\n            <userRolesList></userRolesList>\r\n            <title></title>\r\n            <dateOfBirth></dateOfBirth>\r\n            <gender></gender>\r\n            <addressLine1></addressLine1>\r\n            <addressLine2></addressLine2>\r\n            <suburb></suburb>\r\n            <state></state>\r\n            <postcode></postcode>\r\n            <country></country>\r\n            <mobilePhone></mobilePhone>\r\n            <workPhone></workPhone>\r\n            <homePhone></homePhone>\r\n            <fax></fax>\r\n            <isRetailLifeInsured></isRetailLifeInsured>\r\n            <passwordRequestDate></passwordRequestDate>\r\n            <password></password>\r\n            <passwordRequestCount></passwordRequestCount>\r\n            <aiaProposalNumber></aiaProposalNumber>\r\n            <aiaProposalWritingAdviser></aiaProposalWritingAdviser>\r\n            <aiaCCAppTnCAcceptedDate></aiaCCAppTnCAcceptedDate>\r\n            <aiaCCAppTnCVersion></aiaCCAppTnCVersion>\r\n            <!--1 or more repetitions:-->\r\n            <userGroupsList></userGroupsList>\r\n            <!--1 or more repetitions:-->\r\n            <userGroupsDNList></userGroupsDNList>\r\n            <memberType></memberType>\r\n            <residentialPostcode></residentialPostcode>\r\n            <userStatus></userStatus>\r\n            <aiaClientNumber></aiaClientNumber>\r\n            <aiaVitalityMemberNumber></aiaVitalityMemberNumber>\r\n            <aiaDsyPolicyNumber></aiaDsyPolicyNumber>\r\n            <aiaVitalityCobrandingInfo></aiaVitalityCobrandingInfo>\r\n         </userDetails>\r\n      </ser:searchUserRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>\r\n\r\n"
            },
            "description": "A/C:\r\nGiven that members activated their membership\r\nWhen ESB gets the action\r\nThen their membership will be activated in UMS"
          },
          "response": []
        },
        {
          "_postman_id": "93313986-bf24-b464-10ad-9128facc11bb",
          "name": "RA-261 : Trigger Push Notification for Current Week's success",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "tests[\"Verifying that the notification is triggered successfully\"] =  body.status === \"Data Accepted\";",
                  "",
                  "postman.clearEnvironmentVariable(\"currentMonday\");"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var currentMonday = new Date();\r",
                  "// set to Monday of this week\r",
                  "currentMonday.setDate(currentMonday.getDate() - (currentMonday.getDay() + 6) % 7);\r",
                  "\r",
                  "postman.setEnvironmentVariable(\"currentMonday\", currentMonday.toISOString());"
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityBenefits.rs.notification.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"notificationMessage\":[  \r\n      {  \r\n         \"entityNumber\":\"{{aiaVitalityId}}\",\r\n         \"transactionId\":\"{{$guid}}\",\r\n         \"notification\":{  \r\n            \"currentWeek\":\"{{currentMonday}}\"\r\n         }\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "2ae97250-60ef-53e2-2efc-92d3fe3bc9fe",
          "name": "RA-261 : Trigger Push Notification for Previous Week's success",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "tests[\"Verifying that the notification is triggered successfully\"] =  body.status === \"Data Accepted\";",
                  "",
                  "postman.clearEnvironmentVariable(\"previousMonday\");"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var previousMonday = new Date();\r",
                  "// set to Monday of this week\r",
                  "previousMonday.setDate(previousMonday.getDate() - (previousMonday.getDay() + 6) % 7);\r",
                  "// set to previous Monday\r",
                  "previousMonday.setDate(previousMonday.getDate() - 7);\r",
                  "\r",
                  "postman.setEnvironmentVariable(\"previousMonday\", previousMonday.toISOString());"
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityBenefits.rs.notification.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"notificationMessage\":[  \r\n      {  \r\n         \"entityNumber\":\"{{aiaVitalityId}}\",\r\n         \"uuid\":\"{{$guid}}\",\r\n         \"notification\":{  \r\n            \"previousWeek\":\"{{previousMonday}}\"\r\n         }\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "188320af-6b64-f23b-0f46-91af5570c37c",
          "name": "Clear weekly target in Marketo",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "tests[\"Verifying that the notification is triggered successfully\"] =  body.status === \"Data Accepted\";"
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityBenefits.rs.notification.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"notificationMessage\":[  \r\n      {  \r\n         \"entityNumber\":\"{{aiaVitalityId}}\",\r\n         \"transactionId\":\"{{$guid}}\",\r\n         \"notification\":{  \r\n            \"targetPoints\":\"\"\r\n         }\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "49a15d0c-3710-3330-df44-564c4941e143",
          "name": "RA-261 : Trigger Push Notification for Weekly Target Communication",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "tests[\"Verifying that the notification is triggered successfully\"] =  body.status === \"Data Accepted\";"
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityBenefits.rs.notification.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"notificationMessage\":[  \r\n      {  \r\n         \"entityNumber\":\"{{aiaVitalityId}}\",\r\n         \"transactionId\":\"{{$guid}}\",\r\n         \"notification\":{  \r\n            \"targetPoints\":\"250\"\r\n         }\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "c1392439-36ae-64cf-983f-222eb6ad64f7",
          "name": "Clear weekly target in Marketo",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "tests[\"Verifying that the notification is triggered successfully\"] =  body.status === \"Data Accepted\";"
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityBenefits.rs.notification.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"notificationMessage\":[  \r\n      {  \r\n         \"entityNumber\":\"{{aiaVitalityId}}\",\r\n         \"transactionId\":\"{{$guid}}\",\r\n         \"notification\":{  \r\n            \"targetPoints\":\"\"\r\n         }\r\n      },\r\n      {  \r\n         \"entityNumber\":\"{{aiaVitalityId2}}\",\r\n         \"transactionId\":\"{{$guid}}\",\r\n         \"notification\":{  \r\n            \"targetPoints\":\"\"\r\n         }\r\n      },\r\n      {  \r\n         \"entityNumber\":\"{{aiaVitalityId3}}\",\r\n         \"transactionId\":\"{{$guid}}\",\r\n         \"notification\":{  \r\n            \"targetPoints\":\"\"\r\n         }\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "de4d7c7f-736f-684c-fa68-e7c85f59073d",
          "name": "RA-261 : Trigger Bulk Push Notification Same Entity Number",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "tests[\"Verifying that the notification is triggered successfully\"] =  body.status === \"Data Accepted\";",
                  "",
                  "postman.clearEnvironmentVariable(\"currentMonday\");",
                  "postman.clearEnvironmentVariable(\"previousMonday\");"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var currentMonday = new Date();\r",
                  "// set to Monday of this week\r",
                  "currentMonday.setDate(currentMonday.getDate() - (currentMonday.getDay() + 6) % 7);\r",
                  "\r",
                  "postman.setEnvironmentVariable(\"currentMonday\", currentMonday.toISOString());\r",
                  "\r",
                  "var previousMonday = new Date();\r",
                  "// set to Monday of this week\r",
                  "previousMonday.setDate(previousMonday.getDate() - (previousMonday.getDay() + 6) % 7);\r",
                  "// set to previous Monday\r",
                  "previousMonday.setDate(previousMonday.getDate() - 7);\r",
                  "\r",
                  "postman.setEnvironmentVariable(\"previousMonday\", previousMonday.toISOString());\r",
                  "\r",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityBenefits.rs.notification.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"notificationMessage\":[  \r\n      {  \r\n         \"entityNumber\":\"{{aiaVitalityId}}\",\r\n         \"transactionId\":\"{{$guid}}\",\r\n         \"notification\":{  \r\n            \"currentWeek\":\"{{currentMonday}}\",\r\n            \"previousWeek\":\"{{previousMonday}}\"\r\n         }\r\n      },\r\n      {  \r\n         \"entityNumber\":\"{{aiaVitalityId2}}\",\r\n         \"transactionId\":\"{{$guid}}\",\r\n         \"notification\":{  \r\n            \"targetPoints\":\"250\"\r\n         }\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "fba60e8b-76e0-3c3d-093c-b9fca3d0738a",
          "name": "RA-261 : Trigger Push Notification for Current Week's invalid Entity No",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 404\"] = responseCode.code === 404;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "tests[\"Verifying that the notification is not triggered\"] =  body.status === \"notification failed\";",
                  "",
                  "tests[\"Verifying that the failure reason is 'Not Found'\"] =  body.failureReaon === \"Not Found\";",
                  "",
                  "postman.clearEnvironmentVariable(\"currentMonday\");"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var currentMonday = new Date();\r",
                  "// set to Monday of this week\r",
                  "currentMonday.setDate(currentMonday.getDate() - (currentMonday.getDay() + 6) % 7);\r",
                  "\r",
                  "postman.setEnvironmentVariable(\"currentMonday\", currentMonday.toISOString());"
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityBenefits.rs.notification.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"notificationMessage\":[  \r\n      {  \r\n         \"entityNumber\":\"123456\",\r\n         \"transactionId\":\"{{$guid}}\",\r\n         \"notification\":{  \r\n            \"currentWeek\":\"{{currentMonday}}\"\r\n         }\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "4a107ee6-324f-fd9e-2460-5e8a4b6bb614",
          "name": "RA-261 : Trigger Push Notification for Previous Week's success invalid Entity No",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 404\"] = responseCode.code === 404;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "tests[\"Verifying that the notification is not triggered\"] =  body.status === \"notification failed\";",
                  "",
                  "tests[\"Verifying that the failure reason is 'Not Found'\"] =  body.failureReaon === \"Not Found\";",
                  "",
                  "postman.clearEnvironmentVariable(\"previousMonday\");"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var previousMonday = new Date();\r",
                  "// set to Monday of this week\r",
                  "previousMonday.setDate(previousMonday.getDate() - (previousMonday.getDay() + 6) % 7);\r",
                  "// set to previous Monday\r",
                  "previousMonday.setDate(previousMonday.getDate() - 7);\r",
                  "\r",
                  "postman.setEnvironmentVariable(\"previousMonday\", previousMonday.toISOString());"
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityBenefits.rs.notification.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"notificationMessage\":[  \r\n      {  \r\n         \"entityNumber\":\"123456\",\r\n         \"uuid\":\"{{$guid}}\",\r\n         \"notification\":{  \r\n            \"previousWeek\":\"{{previousMonday}}\"\r\n         }\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "cd02ee06-ce6f-007c-41da-202f8edb8c9e",
          "name": "RA-261 : Trigger Push Notification for Weekly Target Communication invalid Entity No",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 404\"] = responseCode.code === 404;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "tests[\"Verifying that the notification is not triggered\"] =  body.status === \"notification failed\";",
                  "",
                  "tests[\"Verifying that the failure reason is 'Not Found'\"] =  body.failureReaon === \"Not Found\";"
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityBenefits.rs.notification.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"notificationMessage\":[  \r\n      {  \r\n         \"entityNumber\":\"123456\",\r\n         \"transactionId\":\"{{$guid}}\",\r\n         \"notification\":{  \r\n            \"targetPoints\":\"250\"\r\n         }\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "90202ca0-bf77-8aa3-3083-2246f37d6710",
          "name": "RA-261 : Trigger Bulk Push Notification Atleast one is valid",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "tests[\"Verifying that the notification is triggered successfully\"] =  body.status === \"Data Accepted\";",
                  "",
                  "tests[\"Verifying the failure\"] = body.failure[0].has(\"entityNumber: 0123456 was not found. No notification was sent to Marketo.\");",
                  "",
                  "postman.clearEnvironmentVariable(\"currentMonday\");",
                  "postman.clearEnvironmentVariable(\"previousMonday\");",
                  "",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var currentMonday = new Date();\r",
                  "// set to Monday of this week\r",
                  "currentMonday.setDate(currentMonday.getDate() - (currentMonday.getDay() + 6) % 7);\r",
                  "\r",
                  "postman.setEnvironmentVariable(\"currentMonday\", currentMonday.toISOString());\r",
                  "\r",
                  "var previousMonday = new Date();\r",
                  "// set to Monday of this week\r",
                  "previousMonday.setDate(previousMonday.getDate() - (previousMonday.getDay() + 6) % 7);\r",
                  "// set to previous Monday\r",
                  "previousMonday.setDate(previousMonday.getDate() - 7);\r",
                  "\r",
                  "postman.setEnvironmentVariable(\"previousMonday\", previousMonday.toISOString());\r",
                  "\r",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityBenefits.rs.notification.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"notificationMessage\":[  \r\n      {  \r\n         \"entityNumber\":\"{{aiaVitalityId}}\",\r\n         \"transactionId\":\"{{$guid}}\",\r\n         \"notification\":{  \r\n            \"currentWeek\":\"{{currentMonday}}\"\r\n         }\r\n      },\r\n      {  \r\n         \"entityNumber\":\"{{aiaVitalityId2}}\",\r\n         \"uuid\":\"{{$guid}}\",\r\n         \"notification\":{  \r\n            \"previousWeek\":\"{{previousMonday}}\"\r\n         }\r\n      },\r\n      {  \r\n         \"entityNumber\":\"0123456\",\r\n         \"transactionId\":\"{{$guid}}\",\r\n         \"notification\":{  \r\n            \"targetPoints\":\"250\"\r\n         }\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "b75b5fbe-7700-65e8-5865-4c27d40afa7f",
          "name": "RA-261 : Trigger Bulk Push Notification All are invalid",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 404\"] = responseCode.code === 404;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "tests[\"Verifying that the notification is not triggered\"] =  body.status === \"notification failed\";",
                  "",
                  "tests[\"Verifying that the failure reason is 'Not Found'\"] =  body.failureReaon === \"Not Found\";",
                  "",
                  "postman.clearEnvironmentVariable(\"currentMonday\");",
                  "postman.clearEnvironmentVariable(\"previousMonday\");"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var currentMonday = new Date();\r",
                  "// set to Monday of this week\r",
                  "currentMonday.setDate(currentMonday.getDate() - (currentMonday.getDay() + 6) % 7);\r",
                  "\r",
                  "postman.setEnvironmentVariable(\"currentMonday\", currentMonday.toISOString());\r",
                  "\r",
                  "var previousMonday = new Date();\r",
                  "// set to Monday of this week\r",
                  "previousMonday.setDate(previousMonday.getDate() - (previousMonday.getDay() + 6) % 7);\r",
                  "// set to previous Monday\r",
                  "previousMonday.setDate(previousMonday.getDate() - 7);\r",
                  "\r",
                  "postman.setEnvironmentVariable(\"previousMonday\", previousMonday.toISOString());\r",
                  "\r",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityBenefits.rs.notification.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"notificationMessage\":[  \r\n      {  \r\n         \"entityNumber\":\"123456\",\r\n         \"transactionId\":\"{{$guid}}\",\r\n         \"notification\":{  \r\n            \"currentWeek\":\"{{currentMonday}}\"\r\n         }\r\n      },\r\n      {  \r\n         \"entityNumber\":\"123456\",\r\n         \"uuid\":\"{{$guid}}\",\r\n         \"notification\":{  \r\n            \"previousWeek\":\"{{previousMonday}}\"\r\n         }\r\n      },\r\n      {  \r\n         \"entityNumber\":\"123456\",\r\n         \"transactionId\":\"{{$guid}}\",\r\n         \"notification\":{  \r\n            \"targetPoints\":\"250\"\r\n         }\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "39b9c11b-8f99-42b0-83d3-8dc0069fd76e",
          "name": "RA-261 : Trigger Bulk Push Notification 3 Entity Numbers",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "tests[\"Verifying that the notification is triggered successfully\"] =  body.status === \"Data Accepted\";",
                  "",
                  "postman.clearEnvironmentVariable(\"currentMonday\");",
                  "postman.clearEnvironmentVariable(\"previousMonday\");"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var currentMonday = new Date();\r",
                  "// set to Monday of this week\r",
                  "currentMonday.setDate(currentMonday.getDate() - (currentMonday.getDay() + 6) % 7);\r",
                  "\r",
                  "postman.setEnvironmentVariable(\"currentMonday\", currentMonday.toISOString());\r",
                  "\r",
                  "var previousMonday = new Date();\r",
                  "// set to Monday of this week\r",
                  "previousMonday.setDate(previousMonday.getDate() - (previousMonday.getDay() + 6) % 7);\r",
                  "// set to previous Monday\r",
                  "previousMonday.setDate(previousMonday.getDate() - 7);\r",
                  "\r",
                  "postman.setEnvironmentVariable(\"previousMonday\", previousMonday.toISOString());\r",
                  "\r",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityBenefits.rs.notification.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"notificationMessage\":[  \r\n      {  \r\n         \"entityNumber\":\"{{aiaVitalityId}}\",\r\n         \"transactionId\":\"{{$guid}}\",\r\n         \"notification\":{  \r\n            \"currentWeek\":\"{{currentMonday}}\"\r\n         }\r\n      },\r\n      {  \r\n         \"entityNumber\":\"{{aiaVitalityId2}}\",\r\n         \"uuid\":\"{{$guid}}\",\r\n         \"notification\":{  \r\n            \"previousWeek\":\"{{previousMonday}}\"\r\n         }\r\n      },\r\n      {  \r\n         \"entityNumber\":\"{{aiaVitalityId3}}\",\r\n         \"transactionId\":\"{{$guid}}\",\r\n         \"notification\":{  \r\n            \"targetPoints\":\"250\"\r\n         }\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "23fe5629-0e44-1383-b66b-3ff57fb42617",
          "name": "RA-261 : Trigger Bulk Push Notification 3 Entity Numbers for Curretn Week Success",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "tests[\"Verifying that the notification is triggered successfully\"] =  body.status === \"Data Accepted\";",
                  "",
                  "postman.clearEnvironmentVariable(\"currentMonday\");",
                  "postman.clearEnvironmentVariable(\"previousMonday\");"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var currentMonday = new Date();\r",
                  "// set to Monday of this week\r",
                  "currentMonday.setDate(currentMonday.getDate() - (currentMonday.getDay() + 6) % 7);\r",
                  "\r",
                  "postman.setEnvironmentVariable(\"currentMonday\", currentMonday.toISOString());\r",
                  "\r",
                  "var previousMonday = new Date();\r",
                  "// set to Monday of this week\r",
                  "previousMonday.setDate(previousMonday.getDate() - (previousMonday.getDay() + 6) % 7);\r",
                  "// set to previous Monday\r",
                  "previousMonday.setDate(previousMonday.getDate() - 7);\r",
                  "\r",
                  "postman.setEnvironmentVariable(\"previousMonday\", previousMonday.toISOString());\r",
                  "\r",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityBenefits.rs.notification.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"notificationMessage\":[  \r\n      {  \r\n         \"entityNumber\":\"{{aiaVitalityId}}\",\r\n         \"transactionId\":\"{{$guid}}\",\r\n         \"notification\":{  \r\n            \"currentWeek\":\"{{currentMonday}}\"\r\n         }\r\n      },\r\n      {  \r\n         \"entityNumber\":\"{{aiaVitalityId2}}\",\r\n         \"uuid\":\"{{$guid}}\",\r\n         \"notification\":{  \r\n            \"currentWeek\":\"{{currentMonday}}\"\r\n         }\r\n      },\r\n      {  \r\n         \"entityNumber\":\"{{aiaVitalityId3}}\",\r\n         \"transactionId\":\"{{$guid}}\",\r\n         \"notification\":{  \r\n            \"currentWeek\":\"{{currentMonday}}\"\r\n         }\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "a6d90087-13e9-fa62-0118-04830e118bd6",
          "name": "RA-261 : Trigger Bulk Push Notification 3 Entity Numbers for Previous Week Success",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "tests[\"Verifying that the notification is triggered successfully\"] =  body.status === \"Data Accepted\";",
                  "",
                  "postman.clearEnvironmentVariable(\"currentMonday\");",
                  "postman.clearEnvironmentVariable(\"previousMonday\");"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var currentMonday = new Date();\r",
                  "// set to Monday of this week\r",
                  "currentMonday.setDate(currentMonday.getDate() - (currentMonday.getDay() + 6) % 7);\r",
                  "\r",
                  "postman.setEnvironmentVariable(\"currentMonday\", currentMonday.toISOString());\r",
                  "\r",
                  "var previousMonday = new Date();\r",
                  "// set to Monday of this week\r",
                  "previousMonday.setDate(previousMonday.getDate() - (previousMonday.getDay() + 6) % 7);\r",
                  "// set to previous Monday\r",
                  "previousMonday.setDate(previousMonday.getDate() - 7);\r",
                  "\r",
                  "postman.setEnvironmentVariable(\"previousMonday\", previousMonday.toISOString());\r",
                  "\r",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityBenefits.rs.notification.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"notificationMessage\":[  \r\n      {  \r\n         \"entityNumber\":\"{{aiaVitalityId}}\",\r\n         \"transactionId\":\"{{$guid}}\",\r\n         \"notification\":{  \r\n            \"previousWeek\":\"{{previousMonday}}\"\r\n         }\r\n      },\r\n      {  \r\n         \"entityNumber\":\"{{aiaVitalityId2}}\",\r\n         \"uuid\":\"{{$guid}}\",\r\n         \"notification\":{  \r\n            \"previousWeek\":\"{{previousMonday}}\"\r\n         }\r\n      },\r\n      {  \r\n         \"entityNumber\":\"{{aiaVitalityId3}}\",\r\n         \"transactionId\":\"{{$guid}}\",\r\n         \"notification\":{  \r\n            \"previousWeek\":\"{{previousMonday}}\"\r\n         }\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "672f2f7c-f730-b31b-235e-f613b1d66864",
          "name": "Clear weekly target in Marketo",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "tests[\"Verifying that the notification is triggered successfully\"] =  body.status === \"Data Accepted\";"
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityBenefits.rs.notification.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"notificationMessage\":[  \r\n      {  \r\n         \"entityNumber\":\"{{aiaVitalityId}}\",\r\n         \"transactionId\":\"{{$guid}}\",\r\n         \"notification\":{  \r\n            \"targetPoints\":\"\"\r\n         }\r\n      },\r\n      {  \r\n         \"entityNumber\":\"{{aiaVitalityId2}}\",\r\n         \"transactionId\":\"{{$guid}}\",\r\n         \"notification\":{  \r\n            \"targetPoints\":\"\"\r\n         }\r\n      },\r\n      {  \r\n         \"entityNumber\":\"{{aiaVitalityId3}}\",\r\n         \"transactionId\":\"{{$guid}}\",\r\n         \"notification\":{  \r\n            \"targetPoints\":\"\"\r\n         }\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "6243acb3-d141-f30d-6d3d-33d6d3c94470",
          "name": "RA-261 : Trigger Bulk Push Notification 3 Entity Numbers for Weekly Target Notification",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "tests[\"Verifying that the notification is triggered successfully\"] =  body.status === \"Data Accepted\";",
                  "",
                  "postman.clearEnvironmentVariable(\"currentMonday\");",
                  "postman.clearEnvironmentVariable(\"previousMonday\");"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var currentMonday = new Date();\r",
                  "// set to Monday of this week\r",
                  "currentMonday.setDate(currentMonday.getDate() - (currentMonday.getDay() + 6) % 7);\r",
                  "\r",
                  "postman.setEnvironmentVariable(\"currentMonday\", currentMonday.toISOString());\r",
                  "\r",
                  "var previousMonday = new Date();\r",
                  "// set to Monday of this week\r",
                  "previousMonday.setDate(previousMonday.getDate() - (previousMonday.getDay() + 6) % 7);\r",
                  "// set to previous Monday\r",
                  "previousMonday.setDate(previousMonday.getDate() - 7);\r",
                  "\r",
                  "postman.setEnvironmentVariable(\"previousMonday\", previousMonday.toISOString());\r",
                  "\r",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityBenefits.rs.notification.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"notificationMessage\":[  \r\n      {  \r\n         \"entityNumber\":\"{{aiaVitalityId}}\",\r\n         \"transactionId\":\"{{$guid}}\",\r\n         \"notification\":{  \r\n            \"targetPoints\":\"250\"\r\n         }\r\n      },\r\n      {  \r\n         \"entityNumber\":\"{{aiaVitalityId2}}\",\r\n         \"uuid\":\"{{$guid}}\",\r\n         \"notification\":{  \r\n            \"targetPoints\":\"250\"\r\n         }\r\n      },\r\n      {  \r\n         \"entityNumber\":\"{{aiaVitalityId3}}\",\r\n         \"transactionId\":\"{{$guid}}\",\r\n         \"notification\":{  \r\n            \"targetPoints\":\"250\"\r\n         }\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "aaaa57cf-9086-00f7-8a00-b20afd2d4566",
          "name": "RA-261 : Trigger Bulk Push Notification 3 Entity Numbers for Weekly Target Notification copy",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Verifying that the service is returning response code 200 ",
                  "tests[\"Verifying that hitting the service endpoint is returning with a Status code of 200\"] = responseCode.code === 200;",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "",
                  "tests[\"Verifying that the notification is triggered successfully\"] =  body.status === \"Data Accepted\";",
                  "",
                  "postman.clearEnvironmentVariable(\"currentMonday\");",
                  "postman.clearEnvironmentVariable(\"previousMonday\");"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var currentMonday = new Date();\r",
                  "// set to Monday of this week\r",
                  "currentMonday.setDate(currentMonday.getDate() - (currentMonday.getDay() + 6) % 7);\r",
                  "\r",
                  "postman.setEnvironmentVariable(\"currentMonday\", currentMonday.toISOString());\r",
                  "\r",
                  "var previousMonday = new Date();\r",
                  "// set to Monday of this week\r",
                  "previousMonday.setDate(previousMonday.getDate() - (previousMonday.getDay() + 6) % 7);\r",
                  "// set to previous Monday\r",
                  "previousMonday.setDate(previousMonday.getDate() - 7);\r",
                  "\r",
                  "postman.setEnvironmentVariable(\"previousMonday\", previousMonday.toISOString());\r",
                  "\r",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "{{ESBURL}}/rest/aiaVitalityBenefits.rs.notification.v1",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n               \"notificationMessage\":[  \r\n                  {  \r\n                     \"entityNumber\":\"5501537699\",\r\n                     \"transactionId\":\"284c22bb-c32f-46eb-8b9a-2cb3a7ea7d04\",\r\n                     \"notification\":{  \r\n                        \"targetPoints\":\"250\"\r\n                     }\r\n                  },\r\n                  {  \r\n                     \"entityNumber\":\"5501537806\",\r\n                     \"uuid\":\"eb95babe-2844-408b-b1dc-3eb32a7bd90e\",\r\n                     \"notification\":{  \r\n                        \"targetPoints\":\"250\"\r\n                     }\r\n                  },\r\n                  {  \r\n                     \"entityNumber\":\"5501537822\",\r\n                     \"transactionId\":\"b3203b62-96c7-4d6e-9ffc-766f13d6e0fd\",\r\n                     \"notification\":{  \r\n                        \"targetPoints\":\"250\"\r\n                     }\r\n                  }\r\n               ]\r\n            }"
            },
            "description": ""
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "6a8f892d-a591-e73e-099b-cf5ef1f8aeba",
      "name": "http://aaiwklt021512.aia.biz:5555/rest/aiaVitalityMembershipMaintenance.rs.updateMemberInfo.v1",
      "request": {
        "auth": {
          "type": "basic",
          "basic": {
            "username": "Administrator",
            "password": "manage",
            "saveHelperData": true,
            "showPassword": false
          }
        },
        "url": "{{ESBURL}}/rest/aiaVitalityMembershipMaintenance.rs.updateMemberInfo.v1",
        "method": "PUT",
        "header": [
          {
            "key": "cache-control",
            "value": "no-cache",
            "description": ""
          },
          {
            "key": "content-type",
            "value": "application/json",
            "description": ""
          },
          {
            "key": "Authorization",
            "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
            "description": ""
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"members\": [\n    {\n      \"member\": {\n        \"title\": \"Mr\",\n        \"firstName\": \"Charlie\",\n        \"lastName\": \"Chaplin\",\n        \"gender\": \"M\",\n        \"dateOfBirth\": \"*&(&//12////%&*^(&(1970\",\n        \"email\": \"tst1357426917@hotmail.com\",\n        \"memberId\": \"TESTNOM1357426917\",\n        \"address\": {\n          \"line1\": \"Drewrey Lane\",\n          \"line2\": \"\",\n          \"suburb\": \"London\",\n          \"state\": \"VIC\",\n          \"country\": \"Australia\",\n          \"postcode\": \"3000\"\n        },\n        \"phone\": {\n          \"mobileNumber\": \"0404040404\",\n          \"homeNumber\": \"0288911783\",\n          \"workNumber\": \"0288944513\"\n        }\n      }\n    },\n    {\n      \"member\": {\n        \"title\": \"Mr\",\n        \"firstName\": \"Fred\",\n        \"lastName\": \"Lucy\",\n        \"gender\": \"M\",\n        \"dateOfBirth\": \"01/04/1986\",\n        \"memberId\": \"TESTNOM200940062\",\n        \"phone\": {\n          \"mobileNumber\": \"0400000000\",\n          \"homeNumber\": \"0213456789\",\n          \"workNumber\": \"0298765431\"\n        }\n      }\n    },\n    {\n      \"member\": {\n        \"title\": \"Mr\",\n        \"firstName\": \"Dianne\",\n        \"lastName\": \"Gray\",\n        \"gender\": \"M\",\n        \"dateOfBirth\": \"08/13/1970\",\n        \"memberId\": \"TESTNOM14449914\",\n        \"address\": {\n          \"line1\": \"Changed Line1\",\n          \"line2\": \"Changed Line2\",\n          \"suburb\": \"Changed Suburb\",\n          \"state\": \"VIC\",\n          \"country\": \"Australia\",\n          \"postcode\": \"3100\"\n        },\n        \"phone\": {\n          \"mobileNumber\": \"0404040404\",\n          \"homeNumber\": \"0288911783\",\n          \"workNumber\": \"0288944513\"\n        }\n      }\n    },\n    {\n      \"member\": {\n        \"title\": \"Mr\",\n        \"firstName\": \"Ge0rge\",\n        \"lastName\": \"Lucas\",\n        \"gender\": \"M\",\n        \"dateOfBirth\": \"08/13/1970\",\n        \"memberId\": \"TESTNOM-828628027\",\n        \"address\": {\n          \"line1\": \"Changed Line1\",\n          \"line2\": \"Changed Line2\",\n          \"suburb\": \"Changed Suburb\",\n          \"state\": \"VIC\",\n          \"country\": \"Australia\",\n          \"postcode\": \"3100\"\n        },\n        \"phone\": {\n          \"mobileNumber\": \"0404040404\",\n          \"homeNumber\": \"0288911783\",\n          \"workNumber\": \"0288944513\"\n        }\n      }\n    },\n    {\n      \"member\": {\n        \"title\": \"Mr\",\n        \"firstName\": \"George\",\n        \"lastName\": \"Lucas\",\n        \"gender\": \"M\",\n        \"dateOfBirth\": \"08/13/1970\",\n        \"memberId\": \"TESTNOM1237596314\",\n        \"address\": {\n          \"line1\": \"Changed Line1\",\n          \"line2\": \"Changed Line2\",\n          \"suburb\": \"Changed Suburb\",\n          \"state\": \"VIC\",\n          \"country\": \"Australia\",\n          \"postcode\": \"3100\"\n        },\n        \"phone\": {\n          \"mobileNumber\": \"0404040404\",\n          \"homeNumber\": \"0288911783\",\n          \"workNumber\": \"0288944513\"\n        }\n      }\n    }\n  ],\n  \"relationshipName\": \"GRESTFUNDMEMBER\",\n  \"uuid\": \"599f9790-5c4f-13d4-8dd1-ffffffbaabca\"\n}"
        },
        "description": "Generated from a curl request: \ncurl -X PUT \\\n  http://aaiwklt021512.aia.biz:5555/rest/aiaVitalityMembershipMaintenance.rs.updateMemberInfo.v1 \\\n  -H 'authorization: Basic QWRtaW5pc3RyYXRvcjoxUDF0eXRoMw==' \\\n  -H 'cache-control: no-cache' \\\n  -H 'content-type: application/json' \\\n  -H 'postman-token: 840692de-45a7-79c0-1e80-679ec3312e9e' \\\n  -d '{\n\t\\\"members\\\":[\n\t\t{\n\t\t\t\\\"member\\\":{\n\t\t\t\t\\\"title\\\":\\\"Mr\\\",\n\t\t\t\t\\\"firstName\\\":\\\"Charlie\\\",\n    \t\t\t\\\"lastName\\\":\\\"Chaplin\\\",\n    \t\t\t\\\"gender\\\":\\\"M\\\",\n    \t\t\t\\\"dateOfBirth\\\":\\\"07/12/1970\\\",\n    \t\t\t\\\"email\\\":\\\"tst1357426917@hotmail.com\\\",\n    \t\t\t\\\"memberId\\\":\\\"TESTNOM1357426917\\\",\n    \t\t\t\\\"address\\\":{\n    \t\t\t\t\\\"line1\\\":\\\"Drewrey Lane\\\",\n    \t\t\t\t\\\"line2\\\":\\\"\\\",\n    \t\t\t\t\\\"suburb\\\":\\\"London\\\",\n    \t\t\t\t\\\"state\\\":\\\"VIC\\\",\n    \t\t\t\t\\\"country\\\":\\\"Australia\\\",\n    \t\t\t\t\\\"postcode\\\":\\\"3000\\\"\n    \t\t\t},\n    \t\t\t\\\"phone\\\":{\n    \t\t\t\t\\\"mobileNumber\\\":\\\"0404040404\\\",\n    \t\t\t\t\\\"homeNumber\\\":\\\"0288911783\\\",\n    \t\t\t\t\\\"workNumber\\\":\\\"0288944513\\\"\n    \t\t\t}\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\\\"member\\\":{\n\t\t\t\t\\\"title\\\":\\\"Mr\\\",\n\t\t\t\t\\\"firstName\\\":\\\"Fred\\\",\n    \t\t\t\\\"lastName\\\":\\\"Lucy\\\",\n    \t\t\t\\\"gender\\\":\\\"M\\\",\n    \t\t\t\\\"dateOfBirth\\\":\\\"01/04/1986\\\",\n    \t\t\t\\\"memberId\\\":\\\"TESTNOM200940062\\\",\n    \t\t\t\\\"phone\\\":{\n    \t\t\t\t\\\"mobileNumber\\\":\\\"0400000000\\\",\n    \t\t\t\t\\\"homeNumber\\\":\\\"0213456789\\\",\n    \t\t\t\t\\\"workNumber\\\":\\\"0298765431\\\"\n    \t\t\t}\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\\\"member\\\":{\n\t\t\t\t\\\"title\\\":\\\"Mr\\\",\n\t\t\t\t\\\"firstName\\\":\\\"Dianne\\\",\n    \t\t\t\\\"lastName\\\":\\\"Gray\\\",\n    \t\t\t\\\"gender\\\":\\\"M\\\",\n    \t\t\t\\\"dateOfBirth\\\":\\\"08/13/1970\\\",\n    \t\t\t\\\"memberId\\\":\\\"TESTNOM14449914\\\",\n    \t\t\t\\\"address\\\":{\n    \t\t\t\t\\\"line1\\\":\\\"Changed Line1\\\",\n    \t\t\t\t\\\"line2\\\":\\\"Changed Line2\\\",\n    \t\t\t\t\\\"suburb\\\":\\\"Changed Suburb\\\",\n    \t\t\t\t\\\"state\\\":\\\"VIC\\\",\n    \t\t\t\t\\\"country\\\":\\\"Australia\\\",\n    \t\t\t\t\\\"postcode\\\":\\\"3100\\\"\n    \t\t\t},\n    \t\t\t\\\"phone\\\":{\n    \t\t\t\t\\\"mobileNumber\\\":\\\"0404040404\\\",\n    \t\t\t\t\\\"homeNumber\\\":\\\"0288911783\\\",\n    \t\t\t\t\\\"workNumber\\\":\\\"0288944513\\\"\n    \t\t\t}\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\\\"member\\\":{\n\t\t\t\t\\\"title\\\":\\\"Mr\\\",\n\t\t\t\t\\\"firstName\\\":\\\"Ge0rge\\\",\n    \t\t\t\\\"lastName\\\":\\\"Lucas\\\",\n    \t\t\t\\\"gender\\\":\\\"M\\\",\n    \t\t\t\\\"dateOfBirth\\\":\\\"08/13/1970\\\",\n    \t\t\t\\\"memberId\\\":\\\"TESTNOM-828628027\\\",\n    \t\t\t\\\"address\\\":{\n    \t\t\t\t\\\"line1\\\":\\\"Changed Line1\\\",\n    \t\t\t\t\\\"line2\\\":\\\"Changed Line2\\\",\n    \t\t\t\t\\\"suburb\\\":\\\"Changed Suburb\\\",\n    \t\t\t\t\\\"state\\\":\\\"VIC\\\",\n    \t\t\t\t\\\"country\\\":\\\"Australia\\\",\n    \t\t\t\t\\\"postcode\\\":\\\"3100\\\"\n    \t\t\t},\n    \t\t\t\\\"phone\\\":{\n    \t\t\t\t\\\"mobileNumber\\\":\\\"0404040404\\\",\n    \t\t\t\t\\\"homeNumber\\\":\\\"0288911783\\\",\n    \t\t\t\t\\\"workNumber\\\":\\\"0288944513\\\"\n    \t\t\t}\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\\\"member\\\":{\n\t\t\t\t\\\"title\\\":\\\"Mr\\\",\n\t\t\t\t\\\"firstName\\\":\\\"George\\\",\n    \t\t\t\\\"lastName\\\":\\\"Lucas\\\",\n    \t\t\t\\\"gender\\\":\\\"M\\\",\n    \t\t\t\\\"dateOfBirth\\\":\\\"08/13/1970\\\",\n    \t\t\t\\\"memberId\\\":\\\"TESTNOM1237596314\\\",\n    \t\t\t\\\"address\\\":{\n    \t\t\t\t\\\"line1\\\":\\\"Changed Line1\\\",\n    \t\t\t\t\\\"line2\\\":\\\"Changed Line2\\\",\n    \t\t\t\t\\\"suburb\\\":\\\"Changed Suburb\\\",\n    \t\t\t\t\\\"state\\\":\\\"VIC\\\",\n    \t\t\t\t\\\"country\\\":\\\"Australia\\\",\n    \t\t\t\t\\\"postcode\\\":\\\"3100\\\"\n    \t\t\t},\n    \t\t\t\\\"phone\\\":{\n    \t\t\t\t\\\"mobileNumber\\\":\\\"0404040404\\\",\n    \t\t\t\t\\\"homeNumber\\\":\\\"0288911783\\\",\n    \t\t\t\t\\\"workNumber\\\":\\\"0288944513\\\"\n    \t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t],\n\t\\\"relationshipName\\\": \\\"GRESTFUNDMEMBER\\\",\n\t\\\"uuid\\\":\\\"599f9790-5c4f-13d4-8dd1-ffffffbaabca\\\"\n}'"
      },
      "response": []
    }
  ]
}